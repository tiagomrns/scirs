name: Cross-Platform Validation

on:
  push:
    branches: [ master, main, 0.1.0-beta.1 ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run weekly to catch any platform-specific regressions
    - cron: '0 0 * * 0'

env:
  RUST_BACKTRACE: 1

jobs:
  # Linux builds
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
        features: [
          "default",
          "all",
          "memory_efficient,simd,parallel",
          "no-default-features"
        ]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev liblapack-dev
    
    - name: Install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    
    - name: Build
      run: |
        if [ "${{ matrix.features }}" = "no-default-features" ]; then
          cargo build --no-default-features
        else
          cargo build --features "${{ matrix.features }}"
        fi
    
    - name: Test
      run: |
        if [ "${{ matrix.features }}" = "no-default-features" ]; then
          cargo nextest run --no-default-features
        else
          cargo nextest run --features "${{ matrix.features }}"
        fi

  # macOS builds
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        rust: [stable]
        features: [
          "default",
          "memory_efficient,simd,parallel,accelerate"
        ]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    
    - name: Build
      run: cargo build --features "${{ matrix.features }}"
    
    - name: Test
      run: cargo nextest run --features "${{ matrix.features }}"

  # Windows builds
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable]
        features: [
          "default",
          "memory_efficient,simd,parallel"
        ]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    
    - name: Build
      run: cargo build --features "${{ matrix.features }}"
    
    - name: Test
      run: cargo nextest run --features "${{ matrix.features }}"

  # WebAssembly build
  wasm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Build for WASM
      run: |
        cargo build --target wasm32-unknown-unknown --no-default-features
        cargo build --target wasm32-unknown-unknown --no-default-features --features "array,validation"

  # Cross-compilation tests
  cross-compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          "aarch64-unknown-linux-gnu",
          "armv7-unknown-linux-gnueabihf",
          "x86_64-pc-windows-gnu"
        ]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross
      uses: taiki-e/install-action@v2
      with:
        tool: cross
    
    - name: Build with cross
      run: cross build --target ${{ matrix.target }} --no-default-features

  # Platform feature matrix test
  platform-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            features: "openblas"
          - os: macos-latest
            features: "accelerate"
          - os: windows-latest
            features: "default"
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Platform-specific setup
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev
    
    - name: Build with platform features
      run: cargo build --features "${{ matrix.features }}"
    
    - name: Generate validation report
      run: |
        cargo run --example api_freeze_report
        cargo run --example api_compatibility_check