[package]
name = "scirs2-neural"
version.workspace = true
edition.workspace = true
authors.workspace = true
description = "Neural network building blocks module for SciRS2 (scirs2-neural)"
license.workspace = true
repository.workspace = true
keywords = ["neural-network", "deep-learning", "scientific", "ai", "machine-learning"]
categories = ["science", "mathematics", "algorithms"]

[dependencies]
# Core dependencies - use SIMD and parallel features
scirs2-core = { workspace = true, optional = true, features = ["linalg", "memory_efficient", "cache", "parallel", "simd"] }
# Temporarily commented out for publishing
scirs2-linalg = { workspace = true, optional = true }
# scirs2-optimize = { workspace = true, optional = true }
# scirs2-optim = { workspace = true, optional = true }
# Integration with other scirs2 modules
scirs2-metrics = { workspace = true, optional = true, default-features = false, features = ["neural_common"] }
ndarray = { workspace = true }
ndarray-stats-05 = { workspace = true }
# BLAS dependencies removed - using core abstractions
# ndarray-linalg = { workspace = true, default-features = false }
ndarray-rand = { workspace = true }
num-integer = { workspace = true }
approx = { workspace = true }
num-traits = { workspace = true }
num-complex = { workspace = true }
thiserror = { workspace = true }
rand = { workspace = true }
rand_distr = { workspace = true }
rand_chacha = { workspace = true }
log = { workspace = true }
libc = { workspace = true }
num_cpus = { workspace = true }
# BLAS dependencies handled through scirs2-core

# AI/ML specific dependencies
autograd = { workspace = true }
# Temporarily commented out for publishing
# scirs2-autograd = { workspace = true }

# Note: clip_example.rs and feature_fusion_example.rs were removed due to BLAS linking issues

# Serialization dependencies
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
serde_cbor = { workspace = true }
rmp-serde = { workspace = true }
chrono = { workspace = true }
tempfile = { workspace = true }
regex = { workspace = true }

# Future dependency for PandRS and NumRS with appropriate abstractions
# pandrs_wrapper = { path = "../wrappers/pandrs_wrapper", optional = true }
# numrs_wrapper = { path = "../wrappers/numrs_wrapper", optional = true }

[features]
default = ["core"]
full = ["core", "gpu", "memory_efficient"]  # Enhanced feature set
core = ["dep:scirs2-core"]
gpu = ["core"]  # GPU acceleration requires core
memory_efficient = ["core"]  # Memory efficiency requires core
memory_management = ["core"]  # Memory management features
cache = ["core"]  # Caching features
simd = ["core"]  # SIMD acceleration through core
parallel = ["core"]  # Parallel processing through core
# Features temporarily disabled for publishing
linalg = ["dep:scirs2-linalg"] 
# optimize = ["dep:scirs2-optimize"]
optim = [] # Empty feature for compatibility with existing code
openblas = ["scirs2-core/openblas"]
netlib = ["scirs2-core/netlib"]
# intel-mkl = ["scirs2-core/intel-mkl"]  # Removed due to conflicts with openblas
# Integration with other modules
metrics_integration = ["dep:scirs2-metrics"]

# [[example]]
# name = "neural_autograd_example"
# path = "examples/neural_autograd_example.rs"
# 
# [[example]]
# name = "transformer_example"
# path = "examples/transformer_example.rs"
# 
# [[example]]
# name = "batchnorm_example"
# path = "examples/batchnorm_example.rs"
# 
# [[example]]
# name = "dropout_example"
# path = "examples/dropout_example.rs"
# 
# [[example]]
# name = "activations_example"
# path = "examples/activations_example.rs"
# 
# [[example]]
# name = "model_serialization_example"
# path = "examples/model_serialization_example.rs"
# 
# [[bench]]
# name = "neural_benchmarks"
# harness = false
# 
# [[example]]
# name = "advanced_optimizers_example"
# path = "examples/advanced_optimizers_example.rs"
# 
# [[example]]
# name = "metrics_integration_example"
# path = "examples/metrics_integration_example.rs"
# 
# [[example]]
# name = "neural_advanced_features"
# path = "examples/neural_advanced_features.rs"