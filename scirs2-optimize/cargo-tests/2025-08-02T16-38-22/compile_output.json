{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/proc-macro2-bca53ce4ce23abee/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","linked_libs":[],"linked_paths":[],"cfgs":["wrap_proc_macro"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/proc-macro2-053c8b553ef3808d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libunicode_ident-a33b7353bc231643.rlib","/Users/kitasan/work/scirs/target/debug/deps/libunicode_ident-a33b7353bc231643.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/libc-e9ced89a0c25ef6a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcfg_if-6aa76dc7696416af.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libautocfg-63f1cb14007b7aac.rlib","/Users/kitasan/work/scirs/target/debug/deps/libautocfg-63f1cb14007b7aac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.15/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.15/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["arch","default"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/libm-80536e351a300a6e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.26/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.26/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/zerocopy-af5ff5b717a70bdb/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","derive","serde_derive","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/serde-8ee13cf90ffaa339/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libproc_macro2-ad55150c765bd702.rlib","/Users/kitasan/work/scirs/target/debug/deps/libproc_macro2-ad55150c765bd702.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/libc-fa53bd689a2ec01d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","libm","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/num-traits-754145b283c7c223/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15","linked_libs":[],"linked_paths":[],"cfgs":["arch_enabled"],"env":[["CFG_CARGO_FEATURES","[\"arch\", \"default\"]"],["CFG_OPT_LEVEL","1"],["CFG_TARGET_FEATURES","[\"aes\", \"crc\", \"dit\", \"dotprod\", \"dpb\", \"dpb2\", \"fcma\", \"fhm\", \"flagm\", \"fp16\", \"frintts\", \"jsconv\", \"lor\", \"lse\", \"neon\", \"paca\", \"pacg\", \"pan\", \"pmuv3\", \"ras\", \"rcpc\", \"rcpc2\", \"rdm\", \"sb\", \"sha2\", \"sha3\", \"ssbs\", \"vh\"]"]],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/libm-ed79eca0f8b4f6d6/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26","linked_libs":[],"linked_paths":[],"cfgs":["zerocopy_aarch64_simd_1_59_0","zerocopy_core_error_1_81_0","zerocopy_diagnostic_on_unimplemented_1_78_0","zerocopy_generic_bounds_in_const_fn_1_61_0","zerocopy_panic_in_const_and_vec_try_reserve_1_57_0","zerocopy_target_has_atomics_1_60_0"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/zerocopy-a84dd4ed0fbb9139/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/serde-57b35fcea3ad7070/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/crossbeam-utils-a0c3ee41b13b65d2/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.10","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.10/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.10/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["cgemm","default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/matrixmultiply-68db88ceebc67edb/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libquote-00cb41a99fd05ccc.rlib","/Users/kitasan/work/scirs/target/debug/deps/libquote-00cb41a99fd05ccc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/liblibc-c8fcb51f0c47afa1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libm","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["arch","default"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/liblibm-878e56b224b01ea9.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","linked_libs":[],"linked_paths":[],"cfgs":["has_total_cmp"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/num-traits-fa7dca2c46baf7b3/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.26/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.26/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libzerocopy-35d76a46fbd03915.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/crossbeam-utils-ef782b2f2631e67c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.10","linked_libs":[],"linked_paths":[],"cfgs":["has_aarch64_simd"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/matrixmultiply-abbfabbb402b5575/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rawpointer@0.2.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rawpointer-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rawpointer","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rawpointer-0.2.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librawpointer-b3f7be18894e9019.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@2.0.104","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.104/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.104/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","full","parsing","printing","proc-macro"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsyn-4e104256dcc58aac.rlib","/Users/kitasan/work/scirs/target/debug/deps/libsyn-4e104256dcc58aac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_traits","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","libm","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnum_traits-80cf89c5501f230b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libppv_lite86-3958cae0498be2a3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libgetrandom-8c98298c826480fe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam_utils-8aca0e382ee26f54.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.10","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"matrixmultiply","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["cgemm","default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libmatrixmultiply-74fcaaa9d21388c4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.23.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.23.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytemuck","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.23.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libbytemuck-e8c529a5b570e297.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/build/paste-33b0dc97c71f4958/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"serde_derive","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libserde_derive-30e1b4a6de25ce9c.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_core-d958e2ac4db975bc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_integer","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnum_integer-1bd1e8e3144ae1f2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#approx@0.5.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/approx-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"approx","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/approx-0.5.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libapprox-ee1aa48b2dcde4ed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_epoch","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam_epoch-a5855e310e01188b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#safe_arch@0.7.4","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/safe_arch-0.7.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"safe_arch","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/safe_arch-0.7.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck","default"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsafe_arch-cd419f71a4636dcf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/build/rayon-core-5d5deac94691827c/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/getrandom-0750c1b48c6353f0/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","derive","serde_derive","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libserde-6fb00e5bb4427429.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_chacha-185e373351a9aa81.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_deque","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam_deque-f60b3ce799aca8b3.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/rayon-core-f3e377bdb691c30c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/getrandom-abd54e924717c5f7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#wide@0.7.33","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wide-0.7.33/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"wide","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wide-0.7.33/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libwide-87ef2df4f3861b3c.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/paste-d729852966d2c6fe/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.15.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libeither-6249ad6239e04a39.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","getrandom","libc","rand_chacha","small_rng","std","std_rng"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand-554180faf555caee.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"paste","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libpaste-d4a11ca81552ee7a.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon_core","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librayon_core-e62653674f8eb8cb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libgetrandom-24351695654e0e6e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/build/thiserror-feb63928ad1d1f4e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/thiserror-6029085dc64a6f62/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/build/typenum-1741fb4c2e562f96/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.12","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libthiserror_impl-271bc3fc63318629.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-complex@0.4.6","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_complex","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rand","serde","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnum_complex-1377a38a59dd4e18.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.10.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librayon-6374248f706d4636.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/thiserror-4c9bed1adfea761e/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/typenum-810a292b59347186/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.9.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.9.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["os_rng","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_core-aa714a9a2bf77926.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/thiserror-1a81a91def8c5415/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libthiserror_impl-f11efc7ea79b982b.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_distr@0.4.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.4.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_distr","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.4.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_distr-1d0573624948f3f0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ndarray@0.16.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ndarray","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["approx","default","rayon","serde","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libndarray-74bfd2d58685606f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libthiserror-cb38e7914214a6b1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cauchy@0.4.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cauchy-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cauchy","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cauchy-0.4.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcauchy-04921d0434a06694.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"typenum","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libtypenum-e91c2c0d30174ac9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libthiserror-e258064e1c4c7115.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.9.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_chacha-d0bfb85bf096f59f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_rational","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnum_rational-5dc40ac6ed2245d3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#katexit@0.1.5","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/katexit-0.1.5/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"katexit","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/katexit-0.1.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libkatexit-c36bdd4e127b8b33.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lapack-sys@0.14.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lapack-sys-0.14.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lapack_sys","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lapack-sys-0.14.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/liblapack_sys-f0d5ac087edce3df.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/syn-9c673461f6d5e896/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_foundation_sys","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","link"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcore_foundation_sys-5544e7fde8544ef2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.141","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.141/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.141/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/serde_json-dc4f53d7b6ff8bc5/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","os_rng","small_rng","std","std_rng","thread_rng"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand-ed84ae7cb10198ed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_channel","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam_channel-da5a885a8bc96de6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-queue@0.3.12","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-queue-0.3.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_queue","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-queue-0.3.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam_queue-ba5adf682e526a78.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libitoa-12e279f60ddd7697.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.141","linked_libs":[],"linked_paths":[],"cfgs":["fast_arithmetic=\"64\""],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/serde_json-a98430eee8b201f1/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lax@0.17.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lax-0.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lax","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lax-0.17.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/liblax-e3cc1759544f5f24.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.63","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.63/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"iana_time_zone","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.63/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["fallback"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libiana_time_zone-72780c6b01dc4207.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","linked_libs":[],"linked_paths":[],"cfgs":["syn_disable_nightly_tests"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/syn-790788989a024c9d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/build/anyhow-99519861d29a24ca/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libryu-443eed0c0f0b2cb1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libmemchr-d0ef7f869bcb2f4c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_distr@0.5.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_distr","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_distr-8d1f7204e31c560e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.141","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.141/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.141/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libserde_json-ff635d50646d668b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"chrono","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","android-tzdata","clock","default","iana-time-zone","js-sys","now","oldtime","serde","std","wasm-bindgen","wasmbind","winapi","windows-link"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libchrono-16c2be948b4a9fbd.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","linked_libs":[],"linked_paths":[],"cfgs":["std_backtrace"],"env":[],"out_dir":"/Users/kitasan/work/scirs/target/debug/build/anyhow-077156f1e9c32be9/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsyn-fc4d106ec144459b.rlib","/Users/kitasan/work/scirs/target/debug/deps/libsyn-fc4d106ec144459b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ndarray-linalg@0.17.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-linalg-0.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ndarray_linalg","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-linalg-0.17.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libndarray_linalg-e4acea1246eff8df.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam@0.8.4","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","crossbeam-channel","crossbeam-deque","crossbeam-epoch","crossbeam-queue","default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libcrossbeam-206fe1574592bd88.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#simba@0.9.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simba","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","wide"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsimba-fd4a0a6d0b331429.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#uuid@1.17.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"uuid","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rng","serde","std","v4"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libuuid-103a8bbe9f382a4d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num_cpus@1.17.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_cpus","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnum_cpus-5c4f76a00f18b46e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libonce_cell-17fbaae68b204220.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra@0.33.2","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.33.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nalgebra","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.33.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["matrixmultiply","rand","rand-no-std","rand-package","rand_distr","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnalgebra-505fee1dc88d7c7c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra-macros@0.1.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.1.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"nalgebra_macros","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnalgebra_macros-368e574d3bef8d69.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anyhow","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libanyhow-48979ddcc8792a46.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#simba@0.7.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.7.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simba","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.7.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","wide"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsimba-f92ac0438d7025bc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"smallvec","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsmallvec-7cb0f90e1a487396.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ndarray-rand@0.15.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-rand-0.15.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ndarray_rand","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-rand-0.15.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libndarray_rand-a9289c721bd03cf4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-core#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-core/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_core","src_path":"/Users/kitasan/work/scirs/scirs2-core/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["array","crossbeam","crossbeam-deque","crossbeam-utils","default","gpu","linalg","ndarray-linalg","num_cpus","parallel","random","rayon","serde","serde_json","serialization","simd","wide"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libscirs2_core-0bc77f14b1c1a469.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra@0.30.1","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.30.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nalgebra","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.30.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","macros","matrixmultiply","nalgebra-macros","serde","serde-serialize","serde-serialize-no-std","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libnalgebra-fa8ee270bc657ee4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sprs@0.11.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sprs-0.11.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sprs","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sprs-0.11.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libsprs-6108ccaff79f3e1a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#argmin-math@0.4.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/argmin-math-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"argmin_math","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/argmin-math-0.4.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num-complex_0_4","primitives"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libargmin_math-d5c86e07827f28d5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bincode","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libbincode-a16cf71949ce1565.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#half@2.6.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/half-2.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"half","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/half-2.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","num-traits","serde","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libhalf-0672883a7097d1f6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_xoshiro@0.6.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_xoshiro-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_xoshiro","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_xoshiro-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/librand_xoshiro-904980fdb7a50582.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#instant@0.1.13","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/instant-0.1.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"instant","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/instant-0.1.13/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libinstant-616469efdb5d9b9d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libbyteorder-f344330a0e481fa7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#argmin@0.10.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/argmin-0.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"argmin","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/argmin-0.10.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libargmin-f1c8bbf08ec75c2e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#friedrich@0.5.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/friedrich-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"friedrich","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/friedrich-0.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","friedrich_serde","serde"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libfriedrich-2ecdc1ad66017ceb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-linalg#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-linalg/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_linalg","src_path":"/Users/kitasan/work/scirs/scirs2-linalg/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","linalg","simd"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libscirs2_linalg-85540bb13d7304c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#statrs@0.18.0","manifest_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.18.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"statrs","src_path":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.18.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","nalgebra","rand"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libstatrs-0c2f84b7c59a4514.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-sparse#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-sparse/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_sparse","src_path":"/Users/kitasan/work/scirs/scirs2-sparse/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"1","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","parallel","random"],"filenames":["/Users/kitasan/work/scirs/target/debug/deps/libscirs2_sparse-490ddc1bc755e08a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `population_size` in this scope\n  --> scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs:35:13\n   |\n16 |     pub population_size: usize,\n   |         --------------- a field by that name exists in `Self`\n...\n27 |     pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {\n   |                ---------------- `_population_size` defined here\n...\n35 |             population_size,\n   |             ^^^^^^^^^^^^^^^\n   |\nhelp: the leading underscore in `_population_size` marks it as unused, consider renaming it to `population_size`\n   |\n27 -     pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {\n27 +     pub fn new(population_size: usize, dimensions: usize, sigma: f64) -> Self {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_population_size` marks it as unused, consider renaming it to `population_size`","rendered":null,"spans":[{"byte_end":721,"byte_start":705,"column_end":32,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":true,"label":null,"line_end":27,"line_start":27,"suggested_replacement":"population_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":16,"text":"    pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `population_size` in this scope","spans":[{"byte_end":444,"byte_start":429,"column_end":24,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":false,"label":"a field by that name exists in `Self`","line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":9,"text":"    pub population_size: usize,"}]},{"byte_end":721,"byte_start":705,"column_end":32,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":false,"label":"`_population_size` defined here","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":16,"text":"    pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {"}]},{"byte_end":1071,"byte_start":1056,"column_end":28,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":true,"label":null,"line_end":35,"line_start":35,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":13,"text":"            population_size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `population_size` in this scope\n  --> scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs:37:42\n   |\n16 |     pub population_size: usize,\n   |         --------------- a field by that name exists in `Self`\n...\n27 |     pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {\n   |                ---------------- `_population_size` defined here\n...\n37 |             fitness: vec![f64::INFINITY; population_size],\n   |                                          ^^^^^^^^^^^^^^^\n   |\nhelp: the leading underscore in `_population_size` marks it as unused, consider renaming it to `population_size`\n   |\n27 -     pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {\n27 +     pub fn new(population_size: usize, dimensions: usize, sigma: f64) -> Self {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_population_size` marks it as unused, consider renaming it to `population_size`","rendered":null,"spans":[{"byte_end":721,"byte_start":705,"column_end":32,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":true,"label":null,"line_end":27,"line_start":27,"suggested_replacement":"population_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":16,"text":"    pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `population_size` in this scope","spans":[{"byte_end":444,"byte_start":429,"column_end":24,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":false,"label":"a field by that name exists in `Self`","line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":9,"text":"    pub population_size: usize,"}]},{"byte_end":721,"byte_start":705,"column_end":32,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":false,"label":"`_population_size` defined here","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":16,"text":"    pub fn new(_population_size: usize, dimensions: usize, sigma: f64) -> Self {"}]},{"byte_end":1153,"byte_start":1138,"column_end":57,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/evolutionary_strategies.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":42,"text":"            fitness: vec![f64::INFINITY; population_size],"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `AdvancedPolicyGradientOptimizer` in this scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:437:6\n    |\n270 | pub struct AdvancedAdvancedPolicyGradientOptimizer {\n    | -------------------------------------------------- similarly named struct `AdvancedAdvancedPolicyGradientOptimizer` defined here\n...\n437 | impl AdvancedPolicyGradientOptimizer {\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `AdvancedAdvancedPolicyGradientOptimizer`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a struct with a similar name exists","rendered":null,"spans":[{"byte_end":15739,"byte_start":15708,"column_end":37,"column_start":6,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":437,"line_start":437,"suggested_replacement":"AdvancedAdvancedPolicyGradientOptimizer","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":37,"highlight_start":6,"text":"impl AdvancedPolicyGradientOptimizer {"}]}]}],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `AdvancedPolicyGradientOptimizer` in this scope","spans":[{"byte_end":10504,"byte_start":10454,"column_end":51,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":false,"label":"similarly named struct `AdvancedAdvancedPolicyGradientOptimizer` defined here","line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":1,"text":"pub struct AdvancedAdvancedPolicyGradientOptimizer {"}]},{"byte_end":15739,"byte_start":15708,"column_end":37,"column_start":6,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":437,"line_start":437,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":6,"text":"impl AdvancedPolicyGradientOptimizer {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:162:29\n    |\n162 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                             ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":4385,"byte_start":4384,"column_end":30,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":30,"highlight_start":29,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":4385,"byte_start":4384,"column_end":30,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":29,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:162:38\n    |\n162 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                                      ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":4394,"byte_start":4393,"column_end":39,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":38,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":4394,"byte_start":4393,"column_end":39,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":38,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:162:57\n    |\n162 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                                                         ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":4413,"byte_start":4412,"column_end":58,"column_start":57,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":58,"highlight_start":57,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":4413,"byte_start":4412,"column_end":58,"column_start":57,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":162,"line_start":162,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":57,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:449:29\n    |\n449 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                             ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":11521,"byte_start":11520,"column_end":30,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":30,"highlight_start":29,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":11521,"byte_start":11520,"column_end":30,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":29,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:449:38\n    |\n449 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                                      ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":11530,"byte_start":11529,"column_end":39,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":38,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":11530,"byte_start":11529,"column_end":39,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":38,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `a` in this scope\n   --> scirs2-optimize/src/scalar.rs:449:57\n    |\n449 |     let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };\n    |                                                         ^ help: a local variable with a similar name exists: `c`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":11549,"byte_start":11548,"column_end":58,"column_start":57,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":58,"highlight_start":57,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `a` in this scope","spans":[{"byte_end":11549,"byte_start":11548,"column_end":58,"column_start":57,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":57,"text":"    let (mut a, mut b) = if a < c { (a, c) } else { (c, a) };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `min_bound` in this scope\n   --> scirs2-optimize/src/self_tuning.rs:895:42\n    |\n895 |                     if let Some(min_f) = min_bound.as_f64() {\n    |                                          ^^^^^^^^^ help: a local variable with a similar name exists: `min_bound_`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":30503,"byte_start":30494,"column_end":51,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":895,"line_start":895,"suggested_replacement":"min_bound_","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":51,"highlight_start":42,"text":"                    if let Some(min_f) = min_bound.as_f64() {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `min_bound` in this scope","spans":[{"byte_end":30503,"byte_start":30494,"column_end":51,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":895,"line_start":895,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":42,"text":"                    if let Some(min_f) = min_bound.as_f64() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `min_bound` in this scope\n   --> scirs2-optimize/src/self_tuning.rs:911:42\n    |\n911 |                     if let Some(min_i) = min_bound.as_i64() {\n    |                                          ^^^^^^^^^ help: a local variable with a similar name exists: `min_bound_`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":31161,"byte_start":31152,"column_end":51,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":911,"line_start":911,"suggested_replacement":"min_bound_","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":51,"highlight_start":42,"text":"                    if let Some(min_i) = min_bound.as_i64() {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `min_bound` in this scope","spans":[{"byte_end":31161,"byte_start":31152,"column_end":51,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":911,"line_start":911,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":42,"text":"                    if let Some(min_i) = min_bound.as_i64() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `best_params` in this scope\n    --> scirs2-optimize/src/self_tuning.rs:1167:47\n     |\n1167 |                     if let Some(best_value) = best_params.get(name) {\n     |                                               ^^^^^^^^^^^ help: a local variable with a similar name exists: `best_params_`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":39553,"byte_start":39542,"column_end":58,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":1167,"line_start":1167,"suggested_replacement":"best_params_","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":58,"highlight_start":47,"text":"                    if let Some(best_value) = best_params.get(name) {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `best_params` in this scope","spans":[{"byte_end":39553,"byte_start":39542,"column_end":58,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/self_tuning.rs","is_primary":true,"label":null,"line_end":1167,"line_start":1167,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":47,"text":"                    if let Some(best_value) = best_params.get(name) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `param_size` in this scope\n   --> scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs:897:47\n    |\n885 |     fn new(_param_size: usize) -> Self {\n    |            ----------- `_param_size` defined here\n...\n897 |             homeostatic_scaling: Array1::ones(param_size),\n    |                                               ^^^^^^^^^^\n    |\nhelp: the leading underscore in `_param_size` marks it as unused, consider renaming it to `param_size`\n    |\n885 -     fn new(_param_size: usize) -> Self {\n885 +     fn new(param_size: usize) -> Self {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_param_size` marks it as unused, consider renaming it to `param_size`","rendered":null,"spans":[{"byte_end":26433,"byte_start":26422,"column_end":23,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":null,"line_end":885,"line_start":885,"suggested_replacement":"param_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":12,"text":"    fn new(_param_size: usize) -> Self {"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `param_size` in this scope","spans":[{"byte_end":26433,"byte_start":26422,"column_end":23,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":false,"label":"`_param_size` defined here","line_end":885,"line_start":885,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":12,"text":"    fn new(_param_size: usize) -> Self {"}]},{"byte_end":26991,"byte_start":26981,"column_end":57,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":null,"line_end":897,"line_start":897,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":47,"text":"            homeostatic_scaling: Array1::ones(param_size),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `StreamingDataPoint_processing` in this scope\n    --> scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs:1069:23\n     |\n1069 |         _data_point: &StreamingDataPoint_processing,\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `StreamingDataPoint_processing` in this scope","spans":[{"byte_end":32859,"byte_start":32830,"column_end":52,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":"not found in this scope","line_end":1069,"line_start":1069,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":23,"text":"        _data_point: &StreamingDataPoint_processing,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/conjugate_gradient.rs:207:29\n    |\n207 |         compute_line_bounds(_x, direction, Some(b))\n    |                             ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6192,"byte_start":6190,"column_end":31,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":29,"text":"        compute_line_bounds(_x, direction, Some(b))"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":6192,"byte_start":6190,"column_end":31,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":29,"text":"        compute_line_bounds(_x, direction, Some(b))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/conjugate_gradient.rs:222:21\n    |\n222 |         let x_new = _x + alpha * direction;\n    |                     ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6764,"byte_start":6762,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":222,"line_start":222,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":6764,"byte_start":6762,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":222,"line_start":222,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/conjugate_gradient.rs:230:25\n    |\n230 |         let mut x_new = _x + alpha * direction;\n    |                         ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":7001,"byte_start":6999,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":230,"line_start":230,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":7001,"byte_start":6999,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/conjugate_gradient.rs","is_primary":true,"label":null,"line_end":230,"line_start":230,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `SparsityInfo_current` in this scope\n   --> scirs2-optimize/src/unconstrained/efficient_sparse.rs:639:26\n    |\n639 |     _sparsity_info: &mut SparsityInfo_current,\n    |                          ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `SparsityInfo_current` in this scope","spans":[{"byte_end":21144,"byte_start":21124,"column_end":46,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/efficient_sparse.rs","is_primary":true,"label":"not found in this scope","line_end":639,"line_start":639,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":26,"text":"    _sparsity_info: &mut SparsityInfo_current,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/lbfgs.rs:627:46\n    |\n627 |     let (a_min, a_max) = compute_line_bounds(_x, direction, bounds);\n    |                                              ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":19596,"byte_start":19594,"column_end":48,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":627,"line_start":627,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":48,"highlight_start":46,"text":"    let (a_min, a_max) = compute_line_bounds(_x, direction, bounds);"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":19596,"byte_start":19594,"column_end":48,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":627,"line_start":627,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":46,"text":"    let (a_min, a_max) = compute_line_bounds(_x, direction, bounds);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/lbfgs.rs:639:21\n    |\n639 |         let x_new = _x + alpha * direction;\n    |                     ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":20117,"byte_start":20115,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":639,"line_start":639,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":20117,"byte_start":20115,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":639,"line_start":639,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/lbfgs.rs:650:25\n    |\n650 |         let mut x_new = _x + alpha * direction;\n    |                         ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":20495,"byte_start":20493,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":650,"line_start":650,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":20495,"byte_start":20493,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/lbfgs.rs","is_primary":true,"label":null,"line_end":650,"line_start":650,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_fun` in this scope\n  --> scirs2-optimize/src/unconstrained/line_search.rs:96:17\n   |\n96 |                 _fun, grad_fun, x, direction, alpha_lo, alpha, phi_lo, phi, dphi_lo, phi0, dphi0,\n   |                 ^^^^ help: a local variable with a similar name exists: `fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":2327,"byte_start":2323,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, direction, alpha_lo, alpha, phi_lo, phi, dphi_lo, phi0, dphi0,"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_fun` in this scope","spans":[{"byte_end":2327,"byte_start":2323,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, direction, alpha_lo, alpha, phi_lo, phi, dphi_lo, phi0, dphi0,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_fun` in this scope\n   --> scirs2-optimize/src/unconstrained/line_search.rs:110:17\n    |\n110 |                 _fun, grad_fun, x, direction, alpha, alpha_lo, phi, phi_lo, dphi, phi0, dphi0, c1,\n    |                 ^^^^ help: a local variable with a similar name exists: `fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":2714,"byte_start":2710,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":110,"line_start":110,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, direction, alpha, alpha_lo, phi, phi_lo, dphi, phi0, dphi0, c1,"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_fun` in this scope","spans":[{"byte_end":2714,"byte_start":2710,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":110,"line_start":110,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, direction, alpha, alpha_lo, phi, phi_lo, dphi, phi0, dphi0, c1,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/newton.rs:233:29\n    |\n233 |         compute_line_bounds(_x, direction, Some(b))\n    |                             ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6605,"byte_start":6603,"column_end":31,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":29,"text":"        compute_line_bounds(_x, direction, Some(b))"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":6605,"byte_start":6603,"column_end":31,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":29,"text":"        compute_line_bounds(_x, direction, Some(b))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/newton.rs:248:21\n    |\n248 |         let x_new = _x + alpha * direction;\n    |                     ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":7177,"byte_start":7175,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":248,"line_start":248,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":7177,"byte_start":7175,"column_end":23,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":248,"line_start":248,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":21,"text":"        let x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/newton.rs:256:25\n    |\n256 |         let mut x_new = _x + alpha * direction;\n    |                         ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":7414,"byte_start":7412,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":256,"line_start":256,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":7414,"byte_start":7412,"column_end":27,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/newton.rs","is_primary":true,"label":null,"line_end":256,"line_start":256,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":25,"text":"        let mut x_new = _x + alpha * direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/powell.rs:205:38\n    |\n205 |     let (a_min, a_max) = line_bounds(_x, direction, bounds);\n    |                                      ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6052,"byte_start":6050,"column_end":40,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/powell.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":40,"highlight_start":38,"text":"    let (a_min, a_max) = line_bounds(_x, direction, bounds);"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":6052,"byte_start":6050,"column_end":40,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/powell.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":38,"text":"    let (a_min, a_max) = line_bounds(_x, direction, bounds);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_x` in this scope\n   --> scirs2-optimize/src/unconstrained/powell.rs:214:17\n    |\n214 |         let y = _x + &(direction * alpha);\n    |                 ^^ help: a local variable with a similar name exists: `f_x`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6284,"byte_start":6282,"column_end":19,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/powell.rs","is_primary":true,"label":null,"line_end":214,"line_start":214,"suggested_replacement":"f_x","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":19,"highlight_start":17,"text":"        let y = _x + &(direction * alpha);"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_x` in this scope","spans":[{"byte_end":6284,"byte_start":6282,"column_end":19,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/powell.rs","is_primary":true,"label":null,"line_end":214,"line_start":214,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":17,"text":"        let y = _x + &(direction * alpha);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_fun` in this scope\n   --> scirs2-optimize/src/unconstrained/strong_wolfe.rs:117:9\n    |\n117 |         _fun, grad_fun, x, f0, derphi0, direction, alpha, options, bounds,\n    |         ^^^^ help: a local variable with a similar name exists: `fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":3562,"byte_start":3558,"column_end":13,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":117,"line_start":117,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":13,"highlight_start":9,"text":"        _fun, grad_fun, x, f0, derphi0, direction, alpha, options, bounds,"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_fun` in this scope","spans":[{"byte_end":3562,"byte_start":3558,"column_end":13,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":117,"line_start":117,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":9,"text":"        _fun, grad_fun, x, f0, derphi0, direction, alpha, options, bounds,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find value `_fun` in this scope\n   --> scirs2-optimize/src/unconstrained/strong_wolfe.rs:136:17\n    |\n136 |                 _fun, grad_fun, x, f0, derphi0, direction, alpha_lo, alpha_hi, f_lo, f_hi, g_lo,\n    |                 ^^^^ help: a local variable with a similar name exists: `fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":4219,"byte_start":4215,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, f0, derphi0, direction, alpha_lo, alpha_hi, f_lo, f_hi, g_lo,"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `_fun` in this scope","spans":[{"byte_end":4219,"byte_start":4215,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                _fun, grad_fun, x, f0, derphi0, direction, alpha_lo, alpha_hi, f_lo, f_hi, g_lo,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0186]: method `weight` has a `&self` declaration in the trait, but not in the impl\n  --> scirs2-optimize/src/least_squares/robust.rs:88:5\n   |\n73 |     fn weight(&self, r: f64) -> f64;\n   |     -------------------------------- `&self` used in trait\n...\n88 |     fn weight(&self_r: f64) -> f64 {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&self` in impl\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0186","explanation":"An associated function for a trait was defined to be a method (i.e., to take a\n`self` parameter), but an implementation of the trait declared the same function\nto be static.\n\nErroneous code example:\n\n```compile_fail,E0186\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, method `foo` has a `&self` declaration in the trait, but not in\n    // the impl\n    fn foo() {}\n}\n```\n\nWhen a type implements a trait's associated function, it has to use the same\nsignature. So in this case, since `Foo::foo` takes `self` as argument and\ndoes not return anything, its implementation on `Bar` should be the same:\n\n```\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self) {} // ok!\n}\n```\n"},"level":"error","message":"method `weight` has a `&self` declaration in the trait, but not in the impl","spans":[{"byte_end":2524,"byte_start":2494,"column_end":35,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":"expected `&self` in impl","line_end":88,"line_start":88,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":5,"text":"    fn weight(&self_r: f64) -> f64 {"}]},{"byte_end":2162,"byte_start":2130,"column_end":37,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":false,"label":"`&self` used in trait","line_end":73,"line_start":73,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":5,"text":"    fn weight(&self, r: f64) -> f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0186]: method `weight_derivative` has a `&self` declaration in the trait, but not in the impl\n  --> scirs2-optimize/src/least_squares/robust.rs:92:5\n   |\n76 |     fn weight_derivative(&self, r: f64) -> f64;\n   |     ------------------------------------------- `&self` used in trait\n...\n92 |     fn weight_derivative(&self_r: f64) -> f64 {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&self` in impl\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0186","explanation":"An associated function for a trait was defined to be a method (i.e., to take a\n`self` parameter), but an implementation of the trait declared the same function\nto be static.\n\nErroneous code example:\n\n```compile_fail,E0186\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, method `foo` has a `&self` declaration in the trait, but not in\n    // the impl\n    fn foo() {}\n}\n```\n\nWhen a type implements a trait's associated function, it has to use the same\nsignature. So in this case, since `Foo::foo` takes `self` as argument and\ndoes not return anything, its implementation on `Bar` should be the same:\n\n```\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self) {} // ok!\n}\n```\n"},"level":"error","message":"method `weight_derivative` has a `&self` declaration in the trait, but not in the impl","spans":[{"byte_end":2591,"byte_start":2550,"column_end":46,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":"expected `&self` in impl","line_end":92,"line_start":92,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":5,"text":"    fn weight_derivative(&self_r: f64) -> f64 {"}]},{"byte_end":2291,"byte_start":2248,"column_end":48,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":false,"label":"`&self` used in trait","line_end":76,"line_start":76,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":5,"text":"    fn weight_derivative(&self, r: f64) -> f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0186]: method `update` has a `&mut self` declaration in the trait, but not in the impl\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:776:5\n    |\n776 |     fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut self` in impl\n    |\n   ::: scirs2-optimize/src/reinforcement_learning/mod.rs:162:5\n    |\n162 |     fn update(&mut self, experience: &Experience) -> OptimizeResult<()>;\n    |     -------------------------------------------------------------------- `&mut self` used in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0186","explanation":"An associated function for a trait was defined to be a method (i.e., to take a\n`self` parameter), but an implementation of the trait declared the same function\nto be static.\n\nErroneous code example:\n\n```compile_fail,E0186\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, method `foo` has a `&self` declaration in the trait, but not in\n    // the impl\n    fn foo() {}\n}\n```\n\nWhen a type implements a trait's associated function, it has to use the same\nsignature. So in this case, since `Foo::foo` takes `self` as argument and\ndoes not return anything, its implementation on `Bar` should be the same:\n\n```\ntrait Foo {\n    fn foo(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self) {} // ok!\n}\n```\n"},"level":"error","message":"method `update` has a `&mut self` declaration in the trait, but not in the impl","spans":[{"byte_end":29330,"byte_start":29257,"column_end":78,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"expected `&mut self` in impl","line_end":776,"line_start":776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":5,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]},{"byte_end":5163,"byte_start":5095,"column_end":73,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/mod.rs","is_primary":false,"label":"`&mut self` used in trait","line_end":162,"line_start":162,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":5,"text":"    fn update(&mut self, experience: &Experience) -> OptimizeResult<()>;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0185]: method `hessian` has a `&self` declaration in the impl, but not in the trait\n   --> scirs2-optimize/src/streaming/mod.rs:277:5\n    |\n196 | /     fn hessian(\n197 | |         &self_parameters: &ArrayView1<f64>,\n198 | |         _data_point: &StreamingDataPoint,\n199 | |     ) -> Option<Array2<f64>> {\n    | |____________________________- trait method declared without `&self`\n...\n277 | /     fn hessian(\n278 | |         &self,\n279 | |         parameters: &ArrayView1<f64>,\n280 | |         data_point: &StreamingDataPoint,\n281 | |     ) -> Option<Array2<f64>> {\n    | |____________________________^ `&self` used in impl\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0185","explanation":"An associated function for a trait was defined to be static, but an\nimplementation of the trait declared the same function to be a method (i.e., to\ntake a `self` parameter).\n\nErroneous code example:\n\n```compile_fail,E0185\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, method `foo` has a `&self` declaration in the impl, but not in\n    // the trait\n    fn foo(&self) {}\n}\n```\n\nWhen a type implements a trait's associated function, it has to use the same\nsignature. So in this case, since `Foo::foo` does not take any argument and\ndoes not return anything, its implementation on `Bar` should be the same:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","message":"method `hessian` has a `&self` declaration in the impl, but not in the trait","spans":[{"byte_end":8517,"byte_start":8383,"column_end":29,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/streaming/mod.rs","is_primary":true,"label":"`&self` used in impl","line_end":281,"line_start":277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"    fn hessian("},{"highlight_end":15,"highlight_start":1,"text":"        &self,"},{"highlight_end":38,"highlight_start":1,"text":"        parameters: &ArrayView1<f64>,"},{"highlight_end":41,"highlight_start":1,"text":"        data_point: &StreamingDataPoint,"},{"highlight_end":29,"highlight_start":1,"text":"    ) -> Option<Array2<f64>> {"}]},{"byte_end":5949,"byte_start":5823,"column_end":29,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/streaming/mod.rs","is_primary":false,"label":"trait method declared without `&self`","line_end":199,"line_start":196,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"    fn hessian("},{"highlight_end":44,"highlight_start":1,"text":"        &self_parameters: &ArrayView1<f64>,"},{"highlight_end":42,"highlight_start":1,"text":"        _data_point: &StreamingDataPoint,"},{"highlight_end":29,"highlight_start":1,"text":"    ) -> Option<Array2<f64>> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `FunctionWrapper<F>` has no field named `_func`\n  --> scirs2-optimize/src/automatic_differentiation/mod.rs:93:16\n   |\n93 |         Self { _func }\n   |                ^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n93 -         Self { _func }\n93 +         Self { func }\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":2725,"byte_start":2720,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/mod.rs","is_primary":true,"label":null,"line_end":93,"line_start":93,"suggested_replacement":"func","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _func }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `FunctionWrapper<F>` has no field named `_func`","spans":[{"byte_end":2725,"byte_start":2720,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/mod.rs","is_primary":true,"label":"unknown field","line_end":93,"line_start":93,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _func }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `TestProblem` has no field named `_name`\n   --> scirs2-optimize/src/benchmarking.rs:167:13\n    |\n167 |             _name: _name.to_string(),\n    |             ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n167 -             _name: _name.to_string(),\n167 +             name: _name.to_string(),\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":5942,"byte_start":5937,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/benchmarking.rs","is_primary":true,"label":null,"line_end":167,"line_start":167,"suggested_replacement":"name","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":18,"highlight_start":13,"text":"            _name: _name.to_string(),"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `TestProblem` has no field named `_name`","spans":[{"byte_end":5942,"byte_start":5937,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/benchmarking.rs","is_primary":true,"label":"unknown field","line_end":167,"line_start":167,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":13,"text":"            _name: _name.to_string(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `BenchmarkSystem` has no field named `_config`\n   --> scirs2-optimize/src/benchmarking.rs:581:13\n    |\n581 |             _config,\n    |             ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n581 -             _config,\n581 +             config,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":19036,"byte_start":19029,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/benchmarking.rs","is_primary":true,"label":null,"line_end":581,"line_start":581,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `BenchmarkSystem` has no field named `_config`","spans":[{"byte_end":19036,"byte_start":19029,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/benchmarking.rs","is_primary":true,"label":"unknown field","line_end":581,"line_start":581,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `AugmentedLagrangianState` has no field named `_penalty`\n   --> scirs2-optimize/src/constrained/augmented_lagrangian.rs:109:13\n    |\n109 |             _penalty: initial_penalty,\n    |             ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n109 -             _penalty: initial_penalty,\n109 +             penalty: initial_penalty,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3619,"byte_start":3611,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/augmented_lagrangian.rs","is_primary":true,"label":null,"line_end":109,"line_start":109,"suggested_replacement":"penalty","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _penalty: initial_penalty,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `AugmentedLagrangianState` has no field named `_penalty`","spans":[{"byte_end":3619,"byte_start":3611,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/augmented_lagrangian.rs","is_primary":true,"label":"unknown field","line_end":109,"line_start":109,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _penalty: initial_penalty,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 9 arguments but 8 arguments were supplied\n   --> scirs2-optimize/src/constrained/interior_point.rs:476:25\n    |\n476 |               return self.compute_newton_direction(\n    |  _________________________^^^^^^^^^^^^^^^^^^^^^^^^-\n477 | |                 g,\n478 | |                 c_eq,\n479 | |                 c_ineq,\n...   |\n484 | |                 lambda_ineq,\n485 | |             );\n    | |_____________- argument #9 of type `f64` is missing\n    |\nnote: method defined here\n   --> scirs2-optimize/src/constrained/interior_point.rs:338:8\n    |\n338 |     fn compute_newton_direction(\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n348 |         barrier: f64,\n    |         ------------\nhelp: provide the argument\n    |\n476 -             return self.compute_newton_direction(\n477 -                 g,\n478 -                 c_eq,\n479 -                 c_ineq,\n480 -                 j_eq,\n481 -                 j_ineq,\n482 -                 s,\n483 -                 &Array1::zeros(self.m_eq),\n484 -                 lambda_ineq,\n485 -             );\n476 +             return self.compute_newton_direction(g, c_eq, c_ineq, j_eq, j_ineq, s, &Array1::zeros(self.m_eq), lambda_ineq, /* f64 */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":10906,"byte_start":10894,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":false,"label":"","line_end":348,"line_start":348,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"        barrier: f64,"}]},{"byte_end":10602,"byte_start":10578,"column_end":32,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":true,"label":null,"line_end":338,"line_start":338,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":8,"text":"    fn compute_newton_direction("}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":15690,"byte_start":15473,"column_end":14,"column_start":49,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":true,"label":null,"line_end":485,"line_start":476,"suggested_replacement":"(g, c_eq, c_ineq, j_eq, j_ineq, s, &Array1::zeros(self.m_eq), lambda_ineq, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":50,"highlight_start":49,"text":"            return self.compute_newton_direction("},{"highlight_end":19,"highlight_start":1,"text":"                g,"},{"highlight_end":22,"highlight_start":1,"text":"                c_eq,"},{"highlight_end":24,"highlight_start":1,"text":"                c_ineq,"},{"highlight_end":22,"highlight_start":1,"text":"                j_eq,"},{"highlight_end":24,"highlight_start":1,"text":"                j_ineq,"},{"highlight_end":19,"highlight_start":1,"text":"                s,"},{"highlight_end":43,"highlight_start":1,"text":"                &Array1::zeros(self.m_eq),"},{"highlight_end":29,"highlight_start":1,"text":"                lambda_ineq,"},{"highlight_end":14,"highlight_start":1,"text":"            );"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 9 arguments but 8 arguments were supplied","spans":[{"byte_end":15690,"byte_start":15473,"column_end":14,"column_start":49,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":false,"label":"argument #9 of type `f64` is missing","line_end":485,"line_start":476,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":49,"text":"            return self.compute_newton_direction("},{"highlight_end":19,"highlight_start":1,"text":"                g,"},{"highlight_end":22,"highlight_start":1,"text":"                c_eq,"},{"highlight_end":24,"highlight_start":1,"text":"                c_ineq,"},{"highlight_end":22,"highlight_start":1,"text":"                j_eq,"},{"highlight_end":24,"highlight_start":1,"text":"                j_ineq,"},{"highlight_end":19,"highlight_start":1,"text":"                s,"},{"highlight_end":43,"highlight_start":1,"text":"                &Array1::zeros(self.m_eq),"},{"highlight_end":29,"highlight_start":1,"text":"                lambda_ineq,"},{"highlight_end":14,"highlight_start":1,"text":"            );"}]},{"byte_end":15473,"byte_start":15449,"column_end":49,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":true,"label":null,"line_end":476,"line_start":476,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":25,"text":"            return self.compute_newton_direction("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `Constraint<for<'a> fn(&'a [f64]) -> f64>` has no field named `_fun`\n   --> scirs2-optimize/src/constrained/mod.rs:178:13\n    |\n178 |             _fun,\n    |             ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n178 -             _fun,\n178 +             fun,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":4868,"byte_start":4864,"column_end":17,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/mod.rs","is_primary":true,"label":null,"line_end":178,"line_start":178,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":17,"highlight_start":13,"text":"            _fun,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `Constraint<for<'a> fn(&'a [f64]) -> f64>` has no field named `_fun`","spans":[{"byte_end":4868,"byte_start":4864,"column_end":17,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/mod.rs","is_primary":true,"label":"unknown field","line_end":178,"line_start":178,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":13,"text":"            _fun,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `Constraint<for<'a> fn(&'a [f64]) -> f64>` has no field named `_lb`\n   --> scirs2-optimize/src/constrained/mod.rs:190:13\n    |\n190 |             _lb,\n    |             ^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n190 -             _lb,\n190 +             lb,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":5198,"byte_start":5195,"column_end":16,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/mod.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":"lb","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":16,"highlight_start":13,"text":"            _lb,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `Constraint<for<'a> fn(&'a [f64]) -> f64>` has no field named `_lb`","spans":[{"byte_end":5198,"byte_start":5195,"column_end":16,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/constrained/mod.rs","is_primary":true,"label":"unknown field","line_end":190,"line_start":190,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":13,"text":"            _lb,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `distributed::DistributedOptimizationContext<M>` has no field named `_mpi`\n   --> scirs2-optimize/src/distributed.rs:187:13\n    |\n187 |             _mpi,\n    |             ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n187 -             _mpi,\n187 +             mpi,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":5417,"byte_start":5413,"column_end":17,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":null,"line_end":187,"line_start":187,"suggested_replacement":"mpi","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":17,"highlight_start":13,"text":"            _mpi,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `distributed::DistributedOptimizationContext<M>` has no field named `_mpi`","spans":[{"byte_end":5417,"byte_start":5413,"column_end":17,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":"unknown field","line_end":187,"line_start":187,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":13,"text":"            _mpi,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `WorkDistribution` has no field named `_rank`\n   --> scirs2-optimize/src/distributed.rs:281:13\n    |\n281 |             _rank,\n    |             ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n281 -             _rank,\n281 +             rank,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":8242,"byte_start":8237,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":null,"line_end":281,"line_start":281,"suggested_replacement":"rank","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":18,"highlight_start":13,"text":"            _rank,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `WorkDistribution` has no field named `_rank`","spans":[{"byte_end":8242,"byte_start":8237,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":"unknown field","line_end":281,"line_start":281,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":13,"text":"            _rank,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `OptimizeResults<f64>` has no field named `_nit`\n   --> scirs2-optimize/src/distributed_gpu.rs:246:17\n    |\n246 |                 _nit: max_nit,\n    |                 ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n246 -                 _nit: max_nit,\n246 +                 nit: max_nit,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":9234,"byte_start":9230,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":246,"line_start":246,"suggested_replacement":"nit","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":17,"text":"                _nit: max_nit,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `OptimizeResults<f64>` has no field named `_nit`","spans":[{"byte_end":9234,"byte_start":9230,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"unknown field","line_end":246,"line_start":246,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                _nit: max_nit,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `gpu_direct_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/distributed_gpu.rs:424:22\n    |\n424 |                 self.gpu_direct_migration(population, fitness)\n    |                      ^^^^^^^^^^^^^^^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`\n   --> scirs2-optimize/src/distributed_gpu.rs:442:5\n    |\n442 | /     fn gpu_direct_migration(\n443 | |         &mut self_population: &mut Array2<f64>,\n444 | |         _fitness: &mut Array1<f64>,\n445 | |     ) -> ScirsResult<()> {\n    | |________________________^\nhelp: use associated function syntax instead\n    |\n424 -                 self.gpu_direct_migration(population, fitness)\n424 +                 DistributedGpuOptimizer::<M>::gpu_direct_migration(population, fitness)\n    |\nhelp: there is a method `gpu_migration` with a similar name\n    |\n424 -                 self.gpu_direct_migration(population, fitness)\n424 +                 self.gpu_migration(population, fitness)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`","rendered":null,"spans":[{"byte_end":15886,"byte_start":15753,"column_end":25,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":445,"line_start":442,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":5,"text":"    fn gpu_direct_migration("},{"highlight_end":48,"highlight_start":1,"text":"        &mut self_population: &mut Array2<f64>,"},{"highlight_end":36,"highlight_start":1,"text":"        _fitness: &mut Array1<f64>,"},{"highlight_end":25,"highlight_start":1,"text":"    ) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15098,"byte_start":15052,"column_end":63,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":424,"line_start":424,"suggested_replacement":"DistributedGpuOptimizer::<M>::gpu_direct_migration(population, fitness)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":17,"text":"                self.gpu_direct_migration(population, fitness)"}]}]},{"children":[],"code":null,"level":"help","message":"there is a method `gpu_migration` with a similar name","rendered":null,"spans":[{"byte_end":15077,"byte_start":15057,"column_end":42,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":424,"line_start":424,"suggested_replacement":"gpu_migration","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":42,"highlight_start":22,"text":"                self.gpu_direct_migration(population, fitness)"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `gpu_direct_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope","spans":[{"byte_end":15077,"byte_start":15057,"column_end":42,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":424,"line_start":424,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":22,"text":"                self.gpu_direct_migration(population, fitness)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `staged_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/distributed_gpu.rs:428:22\n    |\n428 |                 self.staged_migration(population, fitness)\n    |                      ^^^^^^^^^^^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`\n   --> scirs2-optimize/src/distributed_gpu.rs:452:5\n    |\n452 | /     fn staged_migration(\n453 | |         &mut self_population: &mut Array2<f64>,\n454 | |         _fitness: &mut Array1<f64>,\n455 | |     ) -> ScirsResult<()> {\n    | |________________________^\nhelp: use associated function syntax instead\n    |\n428 -                 self.staged_migration(population, fitness)\n428 +                 DistributedGpuOptimizer::<M>::staged_migration(population, fitness)\n    |\nhelp: there is a method `gpu_migration` with a similar name\n    |\n428 -                 self.staged_migration(population, fitness)\n428 +                 self.gpu_migration(population, fitness)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`","rendered":null,"spans":[{"byte_end":16203,"byte_start":16074,"column_end":25,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":455,"line_start":452,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":5,"text":"    fn staged_migration("},{"highlight_end":48,"highlight_start":1,"text":"        &mut self_population: &mut Array2<f64>,"},{"highlight_end":36,"highlight_start":1,"text":"        _fitness: &mut Array1<f64>,"},{"highlight_end":25,"highlight_start":1,"text":"    ) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15265,"byte_start":15223,"column_end":59,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":"DistributedGpuOptimizer::<M>::staged_migration(population, fitness)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":17,"text":"                self.staged_migration(population, fitness)"}]}]},{"children":[],"code":null,"level":"help","message":"there is a method `gpu_migration` with a similar name","rendered":null,"spans":[{"byte_end":15244,"byte_start":15228,"column_end":38,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":"gpu_migration","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":38,"highlight_start":22,"text":"                self.staged_migration(population, fitness)"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `staged_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope","spans":[{"byte_end":15244,"byte_start":15228,"column_end":38,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"                self.staged_migration(population, fitness)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `async_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/distributed_gpu.rs:432:22\n    |\n432 |                 self.async_migration(population, fitness)\n    |                      ^^^^^^^^^^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`\n   --> scirs2-optimize/src/distributed_gpu.rs:462:5\n    |\n462 | /     fn async_migration(\n463 | |         &mut self_population: &mut Array2<f64>,\n464 | |         _fitness: &mut Array1<f64>,\n465 | |     ) -> ScirsResult<()> {\n    | |________________________^\nhelp: use associated function syntax instead\n    |\n432 -                 self.async_migration(population, fitness)\n432 +                 DistributedGpuOptimizer::<M>::async_migration(population, fitness)\n    |\nhelp: there is a method `gpu_migration` with a similar name\n    |\n432 -                 self.async_migration(population, fitness)\n432 +                 self.gpu_migration(population, fitness)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`","rendered":null,"spans":[{"byte_end":16546,"byte_start":16418,"column_end":25,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":465,"line_start":462,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":5,"text":"    fn async_migration("},{"highlight_end":48,"highlight_start":1,"text":"        &mut self_population: &mut Array2<f64>,"},{"highlight_end":36,"highlight_start":1,"text":"        _fitness: &mut Array1<f64>,"},{"highlight_end":25,"highlight_start":1,"text":"    ) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15467,"byte_start":15426,"column_end":58,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":432,"line_start":432,"suggested_replacement":"DistributedGpuOptimizer::<M>::async_migration(population, fitness)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":17,"text":"                self.async_migration(population, fitness)"}]}]},{"children":[],"code":null,"level":"help","message":"there is a method `gpu_migration` with a similar name","rendered":null,"spans":[{"byte_end":15446,"byte_start":15431,"column_end":37,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":432,"line_start":432,"suggested_replacement":"gpu_migration","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":37,"highlight_start":22,"text":"                self.async_migration(population, fitness)"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `async_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope","spans":[{"byte_end":15446,"byte_start":15431,"column_end":37,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":432,"line_start":432,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":22,"text":"                self.async_migration(population, fitness)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `hierarchical_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/distributed_gpu.rs:436:22\n    |\n436 |                 self.hierarchical_migration(population, fitness)\n    |                 -----^^^^^^^^^^^^^^^^^^^^^^---------------------\n    |                 |    |\n    |                 |    this is an associated function, not a method\n    |                 help: use associated function syntax instead: `DistributedGpuOptimizer::<M>::hierarchical_migration(population, fitness)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`\n   --> scirs2-optimize/src/distributed_gpu.rs:471:5\n    |\n471 | /     fn hierarchical_migration(\n472 | |         &mut self_population: &mut Array2<f64>,\n473 | |         _fitness: &mut Array1<f64>,\n474 | |     ) -> ScirsResult<()> {\n    | |________________________^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `DistributedGpuOptimizer<M>`","rendered":null,"spans":[{"byte_end":16859,"byte_start":16724,"column_end":25,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":474,"line_start":471,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":5,"text":"    fn hierarchical_migration("},{"highlight_end":48,"highlight_start":1,"text":"        &mut self_population: &mut Array2<f64>,"},{"highlight_end":36,"highlight_start":1,"text":"        _fitness: &mut Array1<f64>,"},{"highlight_end":25,"highlight_start":1,"text":"    ) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15665,"byte_start":15617,"column_end":65,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"DistributedGpuOptimizer::<M>::hierarchical_migration(population, fitness)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":17,"text":"                self.hierarchical_migration(population, fitness)"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `hierarchical_migration` found for mutable reference `&mut DistributedGpuOptimizer<M>` in the current scope","spans":[{"byte_end":15644,"byte_start":15622,"column_end":44,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":22,"text":"                self.hierarchical_migration(population, fitness)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied\n   --> scirs2-optimize/src/distributed_gpu.rs:509:33\n    |\n509 |                         indices[[i..j]] = idx as i32;\n    |                                 ^^^^^^ the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`\n    |\n    = help: the following other types implement trait `NdIndex<E>`:\n              `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n              `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n              `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n              `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n              `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n              `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n              `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n              `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n              `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`\n    = note: required for `ArrayBase<OwnedRepr<_>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `NdIndex<E>`:\n  `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n  `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n  `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n  `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n  `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n  `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n  `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n  `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n  `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `ArrayBase<OwnedRepr<_>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied","spans":[{"byte_end":18062,"byte_start":18056,"column_end":39,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":"the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`","line_end":509,"line_start":509,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":33,"text":"                        indices[[i..j]] = idx as i32;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope\n   --> scirs2-optimize/src/global/basinhopping.rs:166:31\n    |\n166 |         let mut rng = StdRng::seed_from_u64(seed);\n    |                               ^^^^^^^^^^^^^ function or associated item not found in `StdRng`\n    |\n    = help: items from traits can only be used if the trait is in scope\nhelp: trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it\n    |\n7   + use rand::SeedableRng;\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it","rendered":null,"spans":[{"byte_end":224,"byte_start":224,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":"use rand::SeedableRng;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::error::OptimizeError;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope","spans":[{"byte_end":4761,"byte_start":4748,"column_end":44,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"function or associated item not found in `StdRng`","line_end":166,"line_start":166,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":31,"text":"        let mut rng = StdRng::seed_from_u64(seed);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0593]: closure is expected to take 3 arguments, but it takes 2 arguments\n   --> scirs2-optimize/src/global/basinhopping.rs:171:22\n    |\n171 |             Box::new(move |f_new: f64, f_old: f64| {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      expected closure that takes 3 arguments\n    |                      takes 2 arguments\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0593","explanation":"You tried to supply an `Fn`-based type with an incorrect number of arguments\nthan what was expected.\n\nErroneous code example:\n\n```compile_fail,E0593\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    // [E0593] closure takes 1 argument but 0 arguments are required\n    foo(|y| { });\n}\n```\n\nYou have to provide the same number of arguments as expected by the `Fn`-based\ntype. So to fix the previous example, we need to remove the `y` argument:\n\n```\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    foo(|| { }); // ok!\n}\n```\n"},"level":"error","message":"closure is expected to take 3 arguments, but it takes 2 arguments","spans":[{"byte_end":4978,"byte_start":4949,"column_end":51,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"expected closure that takes 3 arguments","line_end":171,"line_start":171,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":22,"text":"            Box::new(move |f_new: f64, f_old: f64| {"}]},{"byte_end":4978,"byte_start":4949,"column_end":51,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"takes 2 arguments","line_end":171,"line_start":171,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":22,"text":"            Box::new(move |f_new: f64, f_old: f64| {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope\n   --> scirs2-optimize/src/global/basinhopping.rs:189:45\n    |\n189 |                 let mut local_rng = StdRng::seed_from_u64(seed + x.len() as u64);\n    |                                             ^^^^^^^^^^^^^ function or associated item not found in `StdRng`\n    |\n    = help: items from traits can only be used if the trait is in scope\nhelp: trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it\n    |\n7   + use rand::SeedableRng;\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it","rendered":null,"spans":[{"byte_end":224,"byte_start":224,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":"use rand::SeedableRng;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::error::OptimizeError;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope","spans":[{"byte_end":5719,"byte_start":5706,"column_end":58,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"function or associated item not found in `StdRng`","line_end":189,"line_start":189,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":45,"text":"                let mut local_rng = StdRng::seed_from_u64(seed + x.len() as u64);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `std::ops::Range<f64>: SampleBorrow<std::ops::Range<f64>>` is not satisfied\n   --> scirs2-optimize/src/global/basinhopping.rs:192:48\n    |\n192 |                     let uniform = Uniform::new(-stepsize..stepsize).unwrap();\n    |                                   ------------ ^^^^^^^^^^^^^^^^^^^ the trait `SampleUniform` is not implemented for `std::ops::Range<f64>`\n    |                                   |\n    |                                   required by a bound introduced by this call\n    |\nnote: there are multiple different versions of crate `rand` in the dependency graph\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:268:1\n    |\n268 | pub trait SampleUniform: Sized {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait\n    |\n   ::: scirs2-optimize/src/advanced_coordinator.rs:29:5\n    |\n29  | use rand::rng;\n    |     ---- one version of crate `rand` used here, as a direct dependency of the current crate\n    |\n   ::: scirs2-optimize/src/error.rs:3:5\n    |\n3   | use scirs2_core::error::{CoreError, CoreResult};\n    |     ----------- one version of crate `rand` used here, as a dependency of crate `num_complex`\n   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/ops/range.rs:80:1\n    |\n    = note: this type doesn't implement the required trait\n    |\n   ::: /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/distribution.rs:35:1\n    |\n35  | pub trait Distribution<T> {\n    | ------------------------- this is the found trait\n    = help: you can use `cargo tree` to explore your dependency tree\n    = note: required for `std::ops::Range<f64>` to implement `SampleBorrow<std::ops::Range<f64>>`\nnote: required by a bound in `rand_distr::Uniform::<X>::new`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:235:13\n    |\n233 |     pub fn new<B1, B2>(low: B1, high: B2) -> Result<Uniform<X>, Error>\n    |            --- required by a bound in this associated function\n234 |     where\n235 |         B1: SampleBorrow<X> + Sized,\n    |             ^^^^^^^^^^^^^^^ required by this bound in `Uniform::<X>::new`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"there are multiple different versions of crate `rand` in the dependency graph\n","rendered":null,"spans":[{"byte_end":10259,"byte_start":10229,"column_end":31,"column_start":1,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":true,"label":"this is the required trait","line_end":268,"line_start":268,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":1,"text":"pub trait SampleUniform: Sized {"}]},{"byte_end":1160,"byte_start":1156,"column_end":9,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":false,"label":"one version of crate `rand` used here, as a direct dependency of the current crate","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":9,"highlight_start":5,"text":"use rand::rng;"}]},{"byte_end":67,"byte_start":56,"column_end":16,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/error.rs","is_primary":false,"label":"one version of crate `rand` used here, as a dependency of crate `num_complex`","line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"use scirs2_core::error::{CoreError, CoreResult};"}]},{"byte_end":2301,"byte_start":2280,"column_end":22,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/ops/range.rs","is_primary":false,"label":"this type doesn't implement the required trait","line_end":80,"line_start":80,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},{"byte_end":1562,"byte_start":1537,"column_end":26,"column_start":1,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/distribution.rs","is_primary":false,"label":"this is the found trait","line_end":35,"line_start":35,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":1,"text":"pub trait Distribution<T> {"}]}]},{"children":[],"code":null,"level":"help","message":"you can use `cargo tree` to explore your dependency tree","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::ops::Range<f64>` to implement `SampleBorrow<std::ops::Range<f64>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `rand_distr::Uniform::<X>::new`","rendered":null,"spans":[{"byte_end":9082,"byte_start":9079,"column_end":15,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":false,"label":"required by a bound in this associated function","line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":12,"text":"    pub fn new<B1, B2>(low: B1, high: B2) -> Result<Uniform<X>, Error>"}]},{"byte_end":9176,"byte_start":9161,"column_end":28,"column_start":13,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":true,"label":"required by this bound in `Uniform::<X>::new`","line_end":235,"line_start":235,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":13,"text":"        B1: SampleBorrow<X> + Sized,"}]}]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `std::ops::Range<f64>: SampleBorrow<std::ops::Range<f64>>` is not satisfied","spans":[{"byte_end":5891,"byte_start":5872,"column_end":67,"column_start":48,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"the trait `SampleUniform` is not implemented for `std::ops::Range<f64>`","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":48,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]},{"byte_end":5871,"byte_start":5859,"column_end":47,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":false,"label":"required by a bound introduced by this call","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":35,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/global/basinhopping.rs:192:35\n    |\n192 |                     let uniform = Uniform::new(-stepsize..stepsize).unwrap();\n    |                                   ^^^^^^^^^^^^--------------------- argument #2 is missing\n    |\nnote: associated function defined here\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:233:12\n    |\n233 |     pub fn new<B1, B2>(low: B1, high: B2) -> Result<Uniform<X>, Error>\n    |            ^^^\nhelp: provide the argument\n    |\n192 |                     let uniform = Uniform::new(-stepsize..stepsize, /* high */).unwrap();\n    |                                                                   ++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":9082,"byte_start":9079,"column_end":15,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":12,"text":"    pub fn new<B1, B2>(low: B1, high: B2) -> Result<Uniform<X>, Error>"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":5892,"byte_start":5871,"column_end":68,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"(-stepsize..stepsize, /* high */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":68,"highlight_start":47,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this function takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":5892,"byte_start":5871,"column_end":68,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":false,"label":"argument #2 is missing","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":47,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]},{"byte_end":5871,"byte_start":5859,"column_end":47,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":35,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: the method `unwrap` exists for enum `Result<Uniform<Range<f64>>, Error>`, but its trait bounds were not satisfied\n   --> scirs2-optimize/src/global/basinhopping.rs:192:69\n    |\n192 |                     let uniform = Uniform::new(-stepsize..stepsize).unwrap();\n    |                                                                     ^^^^^^ method cannot be called on `Result<Uniform<Range<f64>>, Error>` due to unsatisfied trait bounds\n    |\n   ::: /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:220:1\n    |\n220 | pub struct Uniform<X: SampleUniform>(X::Sampler);\n    | ------------------------------------ doesn't satisfy `rand_distr::Uniform<std::ops::Range<f64>>: Sized`\n    |\n    = note: the following trait bounds were not satisfied:\n            `std::ops::Range<f64>: SampleUniform`\n            which is required by `rand_distr::Uniform<std::ops::Range<f64>>: Sized`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the following trait bounds were not satisfied:\n`std::ops::Range<f64>: SampleUniform`\nwhich is required by `rand_distr::Uniform<std::ops::Range<f64>>: Sized`","rendered":null,"spans":[]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"the method `unwrap` exists for enum `Result<Uniform<Range<f64>>, Error>`, but its trait bounds were not satisfied","spans":[{"byte_end":5899,"byte_start":5893,"column_end":75,"column_start":69,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"method cannot be called on `Result<Uniform<Range<f64>>, Error>` due to unsatisfied trait bounds","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":75,"highlight_start":69,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]},{"byte_end":8458,"byte_start":8422,"column_end":37,"column_start":1,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":false,"label":"doesn't satisfy `rand_distr::Uniform<std::ops::Range<f64>>: Sized`","line_end":220,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":1,"text":"pub struct Uniform<X: SampleUniform>(X::Sampler);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `std::ops::Range<f64>: SampleUniform` is not satisfied\n   --> scirs2-optimize/src/global/basinhopping.rs:192:35\n    |\n192 |                     let uniform = Uniform::new(-stepsize..stepsize).unwrap();\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SampleUniform` is not implemented for `std::ops::Range<f64>`\n    |\nnote: there are multiple different versions of crate `rand` in the dependency graph\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:268:1\n    |\n268 | pub trait SampleUniform: Sized {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait\n    |\n   ::: scirs2-optimize/src/advanced_coordinator.rs:29:5\n    |\n29  | use rand::rng;\n    |     ---- one version of crate `rand` used here, as a direct dependency of the current crate\n    |\n   ::: scirs2-optimize/src/error.rs:3:5\n    |\n3   | use scirs2_core::error::{CoreError, CoreResult};\n    |     ----------- one version of crate `rand` used here, as a dependency of crate `num_complex`\n   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/ops/range.rs:80:1\n    |\n    = note: this type doesn't implement the required trait\n    |\n   ::: /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/distribution.rs:35:1\n    |\n35  | pub trait Distribution<T> {\n    | ------------------------- this is the found trait\n    = help: you can use `cargo tree` to explore your dependency tree\nnote: required by a bound in `rand_distr::Uniform`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs:220:23\n    |\n220 | pub struct Uniform<X: SampleUniform>(X::Sampler);\n    |                       ^^^^^^^^^^^^^ required by this bound in `Uniform`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"there are multiple different versions of crate `rand` in the dependency graph\n","rendered":null,"spans":[{"byte_end":10259,"byte_start":10229,"column_end":31,"column_start":1,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":true,"label":"this is the required trait","line_end":268,"line_start":268,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":1,"text":"pub trait SampleUniform: Sized {"}]},{"byte_end":1160,"byte_start":1156,"column_end":9,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":false,"label":"one version of crate `rand` used here, as a direct dependency of the current crate","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":9,"highlight_start":5,"text":"use rand::rng;"}]},{"byte_end":67,"byte_start":56,"column_end":16,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/error.rs","is_primary":false,"label":"one version of crate `rand` used here, as a dependency of crate `num_complex`","line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"use scirs2_core::error::{CoreError, CoreResult};"}]},{"byte_end":2301,"byte_start":2280,"column_end":22,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/ops/range.rs","is_primary":false,"label":"this type doesn't implement the required trait","line_end":80,"line_start":80,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},{"byte_end":1562,"byte_start":1537,"column_end":26,"column_start":1,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/distribution.rs","is_primary":false,"label":"this is the found trait","line_end":35,"line_start":35,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":1,"text":"pub trait Distribution<T> {"}]}]},{"children":[],"code":null,"level":"help","message":"you can use `cargo tree` to explore your dependency tree","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `rand_distr::Uniform`","rendered":null,"spans":[{"byte_end":8457,"byte_start":8444,"column_end":36,"column_start":23,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.9.2/src/distr/uniform.rs","is_primary":true,"label":"required by this bound in `Uniform`","line_end":220,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":23,"text":"pub struct Uniform<X: SampleUniform>(X::Sampler);"}]}]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `std::ops::Range<f64>: SampleUniform` is not satisfied","spans":[{"byte_end":5892,"byte_start":5859,"column_end":68,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/global/basinhopping.rs","is_primary":true,"label":"the trait `SampleUniform` is not implemented for `std::ops::Range<f64>`","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":35,"text":"                    let uniform = Uniform::new(-stepsize..stepsize).unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n  --> scirs2-optimize/src/global/bayesian.rs:86:29\n   |\n52 |     Real(f64, f64),\n   |          ---  --- tuple variant has 2 fields\n...\n86 |             Parameter::Real(__) => 1,\n   |                             ^^ expected 2 fields, found 1\n   |\nhelp: use `_` to explicitly ignore each field\n   |\n86 |             Parameter::Real(__, _) => 1,\n   |                               +++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"use `_` to explicitly ignore each field","rendered":null,"spans":[{"byte_end":2672,"byte_start":2672,"column_end":31,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":null,"line_end":86,"line_start":86,"suggested_replacement":", _","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":31,"text":"            Parameter::Real(__) => 1,"}]}]}],"code":{"code":"E0023","explanation":"A pattern attempted to extract an incorrect number of fields from a variant.\n\nErroneous code example:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\nmatch x {\n    Fruit::Apple(a) => {}, // error!\n    _ => {}\n}\n```\n\nA pattern used to match against an enum variant must provide a sub-pattern for\neach field of the enum variant.\n\nHere the `Apple` variant has two fields, and should be matched against like so:\n\n```\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Correct.\nmatch x {\n    Fruit::Apple(a, b) => {},\n    _ => {}\n}\n```\n\nMatching with the wrong number of fields has no sensible interpretation:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Incorrect.\nmatch x {\n    Fruit::Apple(a) => {},\n    Fruit::Apple(a, b, c) => {},\n}\n```\n\nCheck how many fields the enum was declared with and ensure that your pattern\nuses the same number.\n"},"level":"error","message":"this pattern has 1 field, but the corresponding tuple variant has 2 fields","spans":[{"byte_end":2672,"byte_start":2670,"column_end":31,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":"expected 2 fields, found 1","line_end":86,"line_start":86,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":29,"text":"            Parameter::Real(__) => 1,"}]},{"byte_end":1721,"byte_start":1718,"column_end":13,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"","line_end":52,"line_start":52,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":10,"text":"    Real(f64, f64),"}]},{"byte_end":1726,"byte_start":1723,"column_end":18,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"tuple variant has 2 fields","line_end":52,"line_start":52,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":15,"text":"    Real(f64, f64),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n  --> scirs2-optimize/src/global/bayesian.rs:87:32\n   |\n54 |     Integer(i64, i64),\n   |             ---  --- tuple variant has 2 fields\n...\n87 |             Parameter::Integer(__) => 1,\n   |                                ^^ expected 2 fields, found 1\n   |\nhelp: use `_` to explicitly ignore each field\n   |\n87 |             Parameter::Integer(__, _) => 1,\n   |                                  +++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"use `_` to explicitly ignore each field","rendered":null,"spans":[{"byte_end":2713,"byte_start":2713,"column_end":34,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":null,"line_end":87,"line_start":87,"suggested_replacement":", _","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":34,"highlight_start":34,"text":"            Parameter::Integer(__) => 1,"}]}]}],"code":{"code":"E0023","explanation":"A pattern attempted to extract an incorrect number of fields from a variant.\n\nErroneous code example:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\nmatch x {\n    Fruit::Apple(a) => {}, // error!\n    _ => {}\n}\n```\n\nA pattern used to match against an enum variant must provide a sub-pattern for\neach field of the enum variant.\n\nHere the `Apple` variant has two fields, and should be matched against like so:\n\n```\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Correct.\nmatch x {\n    Fruit::Apple(a, b) => {},\n    _ => {}\n}\n```\n\nMatching with the wrong number of fields has no sensible interpretation:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Incorrect.\nmatch x {\n    Fruit::Apple(a) => {},\n    Fruit::Apple(a, b, c) => {},\n}\n```\n\nCheck how many fields the enum was declared with and ensure that your pattern\nuses the same number.\n"},"level":"error","message":"this pattern has 1 field, but the corresponding tuple variant has 2 fields","spans":[{"byte_end":2713,"byte_start":2711,"column_end":34,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":"expected 2 fields, found 1","line_end":87,"line_start":87,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":32,"text":"            Parameter::Integer(__) => 1,"}]},{"byte_end":1798,"byte_start":1795,"column_end":16,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"","line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":13,"text":"    Integer(i64, i64),"}]},{"byte_end":1803,"byte_start":1800,"column_end":21,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"tuple variant has 2 fields","line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":18,"text":"    Integer(i64, i64),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n   --> scirs2-optimize/src/global/bayesian.rs:127:40\n    |\n54  |     Integer(i64, i64),\n    |             ---  --- tuple variant has 2 fields\n...\n127 |                     Parameter::Integer((lower, upper)) => {\n    |                                        ^^^^^^^^^^^^^^ expected 2 fields, found 1\n    |\nhelp: use `_` to explicitly ignore each field\n    |\n127 |                     Parameter::Integer((lower, upper), _) => {\n    |                                                      +++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"use `_` to explicitly ignore each field","rendered":null,"spans":[{"byte_end":4146,"byte_start":4146,"column_end":54,"column_start":54,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":null,"line_end":127,"line_start":127,"suggested_replacement":", _","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":54,"highlight_start":54,"text":"                    Parameter::Integer((lower, upper)) => {"}]}]}],"code":{"code":"E0023","explanation":"A pattern attempted to extract an incorrect number of fields from a variant.\n\nErroneous code example:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\nmatch x {\n    Fruit::Apple(a) => {}, // error!\n    _ => {}\n}\n```\n\nA pattern used to match against an enum variant must provide a sub-pattern for\neach field of the enum variant.\n\nHere the `Apple` variant has two fields, and should be matched against like so:\n\n```\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Correct.\nmatch x {\n    Fruit::Apple(a, b) => {},\n    _ => {}\n}\n```\n\nMatching with the wrong number of fields has no sensible interpretation:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Incorrect.\nmatch x {\n    Fruit::Apple(a) => {},\n    Fruit::Apple(a, b, c) => {},\n}\n```\n\nCheck how many fields the enum was declared with and ensure that your pattern\nuses the same number.\n"},"level":"error","message":"this pattern has 1 field, but the corresponding tuple variant has 2 fields","spans":[{"byte_end":4146,"byte_start":4132,"column_end":54,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":true,"label":"expected 2 fields, found 1","line_end":127,"line_start":127,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":40,"text":"                    Parameter::Integer((lower, upper)) => {"}]},{"byte_end":1798,"byte_start":1795,"column_end":16,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"","line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":13,"text":"    Integer(i64, i64),"}]},{"byte_end":1803,"byte_start":1800,"column_end":21,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/global/bayesian.rs","is_primary":false,"label":"tuple variant has 2 fields","line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":18,"text":"    Integer(i64, i64),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `SobolState` has no field named `_dimension`\n  --> scirs2-optimize/src/global/differential_evolution.rs:53:13\n   |\n53 |             _dimension,\n   |             ^^^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n53 -             _dimension,\n53 +             dimension,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":1888,"byte_start":1878,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":53,"line_start":53,"suggested_replacement":"dimension","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":13,"text":"            _dimension,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `SobolState` has no field named `_dimension`","spans":[{"byte_end":1888,"byte_start":1878,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":"unknown field","line_end":53,"line_start":53,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":13,"text":"            _dimension,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/global/differential_evolution.rs:518:47\n    |\n518 |             mutant[i] = self.ensure_bounds(i..mutant[i]);\n    |                                               ^^^^^^^^^ expected `usize`, found `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":17577,"byte_start":17568,"column_end":56,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":"expected `usize`, found `f64`","line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":47,"text":"            mutant[i] = self.ensure_bounds(i..mutant[i]);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/global/differential_evolution.rs:518:30\n    |\n518 |             mutant[i] = self.ensure_bounds(i..mutant[i]);\n    |                              ^^^^^^^^^^^^^-------------- argument #2 of type `f64` is missing\n    |\nnote: expected `usize`, found `Range<usize>`\n   --> scirs2-optimize/src/global/differential_evolution.rs:518:44\n    |\n518 |             mutant[i] = self.ensure_bounds(i..mutant[i]);\n    |                                            ^^^^^^^^^^^^\n    = note: expected type `usize`\n             found struct `std::ops::Range<usize>`\nnote: method defined here\n   --> scirs2-optimize/src/global/differential_evolution.rs:407:8\n    |\n407 |     fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {\n    |        ^^^^^^^^^^^^^            ----------  --------\nhelp: provide the argument\n    |\n518 -             mutant[i] = self.ensure_bounds(i..mutant[i]);\n518 +             mutant[i] = self.ensure_bounds(/* usize */, /* f64 */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `usize`, found `Range<usize>`","rendered":null,"spans":[{"byte_end":17577,"byte_start":17565,"column_end":56,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":44,"text":"            mutant[i] = self.ensure_bounds(i..mutant[i]);"}]}]},{"children":[],"code":null,"level":"note","message":"expected type `usize`\n found struct `std::ops::Range<usize>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":12908,"byte_start":12898,"column_end":43,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"","line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":33,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]},{"byte_end":12918,"byte_start":12910,"column_end":53,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"","line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":45,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]},{"byte_end":12886,"byte_start":12873,"column_end":21,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":8,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":17578,"byte_start":17564,"column_end":57,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":518,"line_start":518,"suggested_replacement":"(/* usize */, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":57,"highlight_start":43,"text":"            mutant[i] = self.ensure_bounds(i..mutant[i]);"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":17578,"byte_start":17564,"column_end":57,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"argument #2 of type `f64` is missing","line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":43,"text":"            mutant[i] = self.ensure_bounds(i..mutant[i]);"}]},{"byte_end":17564,"byte_start":17551,"column_end":43,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":30,"text":"            mutant[i] = self.ensure_bounds(i..mutant[i]);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/global/differential_evolution.rs:563:46\n    |\n563 |             trial[i] = self.ensure_bounds(i..trial[i]);\n    |                                              ^^^^^^^^ expected `usize`, found `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":19183,"byte_start":19175,"column_end":54,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":"expected `usize`, found `f64`","line_end":563,"line_start":563,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":46,"text":"            trial[i] = self.ensure_bounds(i..trial[i]);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/global/differential_evolution.rs:563:29\n    |\n563 |             trial[i] = self.ensure_bounds(i..trial[i]);\n    |                             ^^^^^^^^^^^^^------------- argument #2 of type `f64` is missing\n    |\nnote: expected `usize`, found `Range<usize>`\n   --> scirs2-optimize/src/global/differential_evolution.rs:563:43\n    |\n563 |             trial[i] = self.ensure_bounds(i..trial[i]);\n    |                                           ^^^^^^^^^^^\n    = note: expected type `usize`\n             found struct `std::ops::Range<usize>`\nnote: method defined here\n   --> scirs2-optimize/src/global/differential_evolution.rs:407:8\n    |\n407 |     fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {\n    |        ^^^^^^^^^^^^^            ----------  --------\nhelp: provide the argument\n    |\n563 -             trial[i] = self.ensure_bounds(i..trial[i]);\n563 +             trial[i] = self.ensure_bounds(/* usize */, /* f64 */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `usize`, found `Range<usize>`","rendered":null,"spans":[{"byte_end":19183,"byte_start":19172,"column_end":54,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":563,"line_start":563,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":43,"text":"            trial[i] = self.ensure_bounds(i..trial[i]);"}]}]},{"children":[],"code":null,"level":"note","message":"expected type `usize`\n found struct `std::ops::Range<usize>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":12908,"byte_start":12898,"column_end":43,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"","line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":33,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]},{"byte_end":12918,"byte_start":12910,"column_end":53,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"","line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":45,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]},{"byte_end":12886,"byte_start":12873,"column_end":21,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":407,"line_start":407,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":8,"text":"    fn ensure_bounds(&mut self, idx: usize, val: f64) -> f64 {"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":19184,"byte_start":19171,"column_end":55,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":563,"line_start":563,"suggested_replacement":"(/* usize */, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":55,"highlight_start":42,"text":"            trial[i] = self.ensure_bounds(i..trial[i]);"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":19184,"byte_start":19171,"column_end":55,"column_start":42,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":false,"label":"argument #2 of type `f64` is missing","line_end":563,"line_start":563,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":42,"text":"            trial[i] = self.ensure_bounds(i..trial[i]);"}]},{"byte_end":19171,"byte_start":19158,"column_end":42,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/global/differential_evolution.rs","is_primary":true,"label":null,"line_end":563,"line_start":563,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":29,"text":"            trial[i] = self.ensure_bounds(i..trial[i]);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope\n  --> scirs2-optimize/src/global/dual_annealing.rs:81:27\n   |\n81 |         let rng = StdRng::seed_from_u64(seed);\n   |                           ^^^^^^^^^^^^^ function or associated item not found in `StdRng`\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it\n   |\n7  + use rand::SeedableRng;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it","rendered":null,"spans":[{"byte_end":248,"byte_start":248,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/global/dual_annealing.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":"use rand::SeedableRng;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::error::OptimizeError;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope","spans":[{"byte_end":2359,"byte_start":2346,"column_end":40,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/global/dual_annealing.rs","is_primary":true,"label":"function or associated item not found in `StdRng`","line_end":81,"line_start":81,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":27,"text":"        let rng = StdRng::seed_from_u64(seed);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope\n  --> scirs2-optimize/src/global/particle_swarm.rs:98:31\n   |\n98 |         let mut rng = StdRng::seed_from_u64(seed);\n   |                               ^^^^^^^^^^^^^ function or associated item not found in `StdRng`\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it\n   |\n8  + use rand::SeedableRng;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"trait `SeedableRng` which provides `seed_from_u64` is implemented but not in scope; perhaps you want to import it","rendered":null,"spans":[{"byte_end":367,"byte_start":367,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/global/particle_swarm.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":"use rand::SeedableRng;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::error::OptimizeError;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `seed_from_u64` found for struct `StdRng` in the current scope","spans":[{"byte_end":2645,"byte_start":2632,"column_end":44,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/global/particle_swarm.rs","is_primary":true,"label":"function or associated item not found in `StdRng`","line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":31,"text":"        let mut rng = StdRng::seed_from_u64(seed);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0063]: missing field `velocity` in initializer of `Particle`\n   --> scirs2-optimize/src/global/particle_swarm.rs:127:28\n    |\n127 |             particles.push(Particle {\n    |                            ^^^^^^^^ missing `velocity`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","message":"missing field `velocity` in initializer of `Particle`","spans":[{"byte_end":3671,"byte_start":3663,"column_end":36,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/global/particle_swarm.rs","is_primary":true,"label":"missing `velocity`","line_end":127,"line_start":127,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":28,"text":"            particles.push(Particle {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `particle_swarm::ParticleSwarm<F>` has no field named `_func`\n   --> scirs2-optimize/src/global/particle_swarm.rs:135:13\n    |\n135 |             _func,\n    |             ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n135 -             _func,\n135 +             func,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3863,"byte_start":3858,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/particle_swarm.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"func","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":18,"highlight_start":13,"text":"            _func,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `particle_swarm::ParticleSwarm<F>` has no field named `_func`","spans":[{"byte_end":3863,"byte_start":3858,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/global/particle_swarm.rs","is_primary":true,"label":"unknown field","line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":13,"text":"            _func,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `AccelerationManager` has no field named `_config`\n    --> scirs2-optimize/src/gpu/acceleration.rs:1851:16\n     |\n1851 |         Self { _config }\n     |                ^^^^^^^ unknown field\n     |\nhelp: a field with a similar name exists\n     |\n1851 -         Self { _config }\n1851 +         Self { config }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":67474,"byte_start":67467,"column_end":23,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":true,"label":null,"line_end":1851,"line_start":1851,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":16,"text":"        Self { _config }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `AccelerationManager` has no field named `_config`","spans":[{"byte_end":67474,"byte_start":67467,"column_end":23,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":true,"label":"unknown field","line_end":1851,"line_start":1851,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"        Self { _config }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n  --> scirs2-optimize/src/gpu/cuda_kernels.rs:44:31\n   |\n44 |         let kernel = _context.compile(kernel_source)?;\n   |                               ^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":1499,"byte_start":1492,"column_end":38,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/gpu/cuda_kernels.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":44,"line_start":44,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"        let kernel = _context.compile(kernel_source)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n  --> scirs2-optimize/src/gpu/cuda_kernels.rs:99:31\n   |\n99 |         let kernel = _context.compile(kernel_source)?;\n   |                               ^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":3217,"byte_start":3210,"column_end":38,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/gpu/cuda_kernels.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":99,"line_start":99,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"        let kernel = _context.compile(kernel_source)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/cuda_kernels.rs:159:31\n    |\n159 |         let kernel = _context.compile(kernel_source)?;\n    |                               ^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":5135,"byte_start":5128,"column_end":38,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/gpu/cuda_kernels.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":159,"line_start":159,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"        let kernel = _context.compile(kernel_source)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/cuda_kernels.rs:214:31\n    |\n214 |         let kernel = _context.compile(kernel_source)?;\n    |                               ^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":6786,"byte_start":6779,"column_end":38,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/gpu/cuda_kernels.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":214,"line_start":214,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"        let kernel = _context.compile(kernel_source)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `memory_management::GpuMemoryPool` has no field named `_context`\n  --> scirs2-optimize/src/gpu/memory_management.rs:38:13\n   |\n38 |             _context,\n   |             ^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n38 -             _context,\n38 +             context,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":1318,"byte_start":1310,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"context","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _context,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `memory_management::GpuMemoryPool` has no field named `_context`","spans":[{"byte_end":1318,"byte_start":1310,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"unknown field","line_end":38,"line_start":38,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _context,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `scirs2_core::GpuBuffer<u8>` doesn't implement `std::fmt::Debug`\n   --> scirs2-optimize/src/gpu/memory_management.rs:178:5\n    |\n174 | #[derive(Debug)]\n    |          ----- in this derive macro expansion\n...\n178 |     gpu_buffer: Option<OptimGpuBuffer<u8>>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `scirs2_core::GpuBuffer<u8>` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n    |\n    = help: the trait `std::fmt::Debug` is not implemented for `scirs2_core::GpuBuffer<u8>`\n    = help: the trait `std::fmt::Debug` is implemented for `Option<T>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the trait `std::fmt::Debug` is not implemented for `scirs2_core::GpuBuffer<u8>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the trait `std::fmt::Debug` is implemented for `Option<T>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`scirs2_core::GpuBuffer<u8>` doesn't implement `std::fmt::Debug`","spans":[{"byte_end":6057,"byte_start":6019,"column_end":43,"column_start":5,"expansion":{"def_site_span":{"byte_end":34084,"byte_start":34069,"column_end":20,"column_start":5,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/fmt/mod.rs","is_primary":false,"label":null,"line_end":907,"line_start":907,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"#[derive(Debug)]","span":{"byte_end":5949,"byte_start":5944,"column_end":15,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":null,"line_end":174,"line_start":174,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":10,"text":"#[derive(Debug)]"}]}},"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"`scirs2_core::GpuBuffer<u8>` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`","line_end":178,"line_start":178,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":5,"text":"    gpu_buffer: Option<OptimGpuBuffer<u8>>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `cast_type` found for reference `&scirs2_core::GpuBuffer<u8>` in the current scope\n   --> scirs2-optimize/src/gpu/memory_management.rs:200:18\n    |\n199 | /             buffer\n200 | |                 .cast_type::<T>()\n    | |                 -^^^^^^^^^ method not found in `&GpuBuffer<u8>`\n    | |_________________|\n    |\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `cast_type` found for reference `&scirs2_core::GpuBuffer<u8>` in the current scope","spans":[{"byte_end":6641,"byte_start":6617,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":"","line_end":200,"line_start":199,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":13,"text":"            buffer"},{"highlight_end":18,"highlight_start":1,"text":"                .cast_type::<T>()"}]},{"byte_end":6650,"byte_start":6641,"column_end":27,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"method not found in `&GpuBuffer<u8>`","line_end":200,"line_start":200,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":18,"text":"                .cast_type::<T>()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/memory_management.rs:201:59\n    |\n201 |                 .map_err(|e| ScirsError::ComputationError(format!(\"Type casting failed: {}\", e)))\n    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3962,"byte_start":3901,"column_end":74,"column_start":13,"expansion":{"def_site_span":{"byte_end":3826,"byte_start":3807,"column_end":20,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":false,"label":null,"line_end":105,"line_start":105,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"format!","span":{"byte_end":6753,"byte_start":6716,"column_end":96,"column_start":59,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":null,"line_end":201,"line_start":201,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":96,"highlight_start":59,"text":"                .map_err(|e| ScirsError::ComputationError(format!(\"Type casting failed: {}\", e)))"}]}},"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":108,"line_start":108,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/memory_management.rs:204:17\n    |\n203 |             Err(ScirsError::InvalidInput(\n    |                 ------------------------ arguments to this enum variant are incorrect\n204 |                 \"Memory block not available\".to_string(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\nnote: tuple variant defined here\n   --> /Users/kitasan/work/scirs/scirs2-core/src/error/error.rs:206:5\n    |\n206 |     InvalidInput(ErrorContext),\n    |     ^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":5323,"byte_start":5311,"column_end":17,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/error/error.rs","is_primary":true,"label":null,"line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"    InvalidInput(ErrorContext),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":6871,"byte_start":6831,"column_end":57,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":204,"line_start":204,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":17,"text":"                \"Memory block not available\".to_string(),"}]},{"byte_end":6813,"byte_start":6789,"column_end":41,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":203,"line_start":203,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":17,"text":"            Err(ScirsError::InvalidInput("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no variant or associated item named `OutOfMemory` found for enum `CoreError` in the current scope\n    --> scirs2-optimize/src/gpu/memory_management.rs:239:25\n     |\n239  |         Err(ScirsError::OutOfMemory(\n     |                         ^^^^^^^^^^^ variant or associated item not found in `CoreError`\n     |\nnote: if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`\n    --> /Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs:1567:5\n     |\n1567 |     pub fn scheduler_error(message: &str) -> Self {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`","rendered":null,"spans":[{"byte_end":48387,"byte_start":48342,"column_end":50,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs","is_primary":true,"label":null,"line_end":1567,"line_start":1567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":5,"text":"    pub fn scheduler_error(message: &str) -> Self {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no variant or associated item named `OutOfMemory` found for enum `CoreError` in the current scope","spans":[{"byte_end":7844,"byte_start":7833,"column_end":36,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"variant or associated item not found in `CoreError`","line_end":239,"line_start":239,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":25,"text":"        Err(ScirsError::OutOfMemory("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `from_buffer` found for struct `scirs2_core::GpuBuffer` in the current scope\n   --> scirs2-optimize/src/gpu/memory_management.rs:263:24\n    |\n263 |         OptimGpuArray::from_buffer(buffer, dimensions)\n    |                        ^^^^^^^^^^^ function or associated item not found in `GpuBuffer<_>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `from_buffer` found for struct `scirs2_core::GpuBuffer` in the current scope","spans":[{"byte_end":8715,"byte_start":8704,"column_end":35,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"function or associated item not found in `GpuBuffer<_>`","line_end":263,"line_start":263,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":24,"text":"        OptimGpuArray::from_buffer(buffer, dimensions)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/memory_management.rs:264:55\n    |\n264 |             .map_err(|e| ScirsError::ComputationError(format!(\"Array creation failed: {}\", e)))\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3962,"byte_start":3901,"column_end":74,"column_start":13,"expansion":{"def_site_span":{"byte_end":3826,"byte_start":3807,"column_end":20,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":false,"label":null,"line_end":105,"line_start":105,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"format!","span":{"byte_end":8829,"byte_start":8790,"column_end":94,"column_start":55,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":null,"line_end":264,"line_start":264,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":55,"text":"            .map_err(|e| ScirsError::ComputationError(format!(\"Array creation failed: {}\", e)))"}]}},"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":108,"line_start":108,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `MemoryOptimizer` has no field named `_config`\n   --> scirs2-optimize/src/gpu/memory_management.rs:453:17\n    |\n453 |                 _config,\n    |                 ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n453 -                 _config,\n453 +                 config,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":14349,"byte_start":14342,"column_end":24,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":null,"line_end":453,"line_start":453,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":24,"highlight_start":17,"text":"                _config,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `MemoryOptimizer` has no field named `_config`","spans":[{"byte_end":14349,"byte_start":14342,"column_end":24,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"unknown field","line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":17,"text":"                _config,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `supports_tensor_cores` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n  --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:54:21\n   |\n54 |         if !context.supports_tensor_cores()? {\n   |                     ^^^^^^^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `supports_tensor_cores` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":1778,"byte_start":1757,"column_end":42,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":21,"text":"        if !context.supports_tensor_cores()? {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no variant or associated item named `NotSupported` found for enum `CoreError` in the current scope\n    --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:55:36\n     |\n55   |             return Err(ScirsError::NotSupported(\n     |                                    ^^^^^^^^^^^^ variant or associated item not found in `CoreError`\n     |\nnote: if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`\n    --> /Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs:1567:5\n     |\n1567 |     pub fn scheduler_error(message: &str) -> Self {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`","rendered":null,"spans":[{"byte_end":48387,"byte_start":48342,"column_end":50,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs","is_primary":true,"label":null,"line_end":1567,"line_start":1567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":5,"text":"    pub fn scheduler_error(message: &str) -> Self {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no variant or associated item named `NotSupported` found for enum `CoreError` in the current scope","spans":[{"byte_end":1831,"byte_start":1819,"column_end":48,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"variant or associated item not found in `CoreError`","line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":36,"text":"            return Err(ScirsError::NotSupported("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:196:17\n    |\n196 |         context.compile_kernel(kernel_name, &kernel_source)\n    |                 ^^^^^^^^^^^^^^ method not found in `&Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":8001,"byte_start":7987,"column_end":31,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `&Arc<GpuContext>`","line_end":196,"line_start":196,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":17,"text":"        context.compile_kernel(kernel_name, &kernel_source)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:273:17\n    |\n273 |         context.compile_kernel(\"tensor_core_batch_gemm\", kernel_source)\n    |                 ^^^^^^^^^^^^^^ method not found in `&Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":11268,"byte_start":11254,"column_end":31,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `&Arc<GpuContext>`","line_end":273,"line_start":273,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":17,"text":"        context.compile_kernel(\"tensor_core_batch_gemm\", kernel_source)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:328:17\n    |\n328 |         context.compile_kernel(\"tensor_core_gradient_computation\", kernel_source)\n    |                 ^^^^^^^^^^^^^^ method not found in `&Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compile_kernel` found for reference `&std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":13661,"byte_start":13647,"column_end":31,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `&Arc<GpuContext>`","line_end":328,"line_start":328,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":17,"text":"        context.compile_kernel(\"tensor_core_gradient_computation\", kernel_source)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:345:17\n    |\n344 |             return Err(ScirsError::InvalidInput(\n    |                        ------------------------ arguments to this enum variant are incorrect\n345 |                 \"Matrix dimensions don't match for multiplication\".to_string(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\nnote: tuple variant defined here\n   --> /Users/kitasan/work/scirs/scirs2-core/src/error/error.rs:206:5\n    |\n206 |     InvalidInput(ErrorContext),\n    |     ^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":5323,"byte_start":5311,"column_end":17,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/error/error.rs","is_primary":true,"label":null,"line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"    InvalidInput(ErrorContext),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14176,"byte_start":14114,"column_end":79,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":17,"text":"                \"Matrix dimensions don't match for multiplication\".to_string(),"}]},{"byte_end":14096,"byte_start":14072,"column_end":48,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":344,"line_start":344,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":24,"text":"            return Err(ScirsError::InvalidInput("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:351:39\n    |\n351 |             let a_fp16 = self.context.convert_to_fp16(a)?;\n    |                                       ^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":14346,"byte_start":14331,"column_end":54,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":351,"line_start":351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":39,"text":"            let a_fp16 = self.context.convert_to_fp16(a)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:352:39\n    |\n352 |             let b_fp16 = self.context.convert_to_fp16(b)?;\n    |                                       ^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":14405,"byte_start":14390,"column_end":54,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":352,"line_start":352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":39,"text":"            let b_fp16 = self.context.convert_to_fp16(b)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:360:30\n    |\n360 |             self.gemm_kernel.launch(\n    |             -----------------^^^^^^ method not found in `GpuKernel`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope","spans":[{"byte_end":14694,"byte_start":14677,"column_end":30,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":360,"line_start":360,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":13,"text":"            self.gemm_kernel.launch("}]},{"byte_end":14700,"byte_start":14694,"column_end":36,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `GpuKernel`","line_end":360,"line_start":360,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":30,"text":"            self.gemm_kernel.launch("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:382:30\n    |\n382 |             self.gemm_kernel.launch(\n    |             -----------------^^^^^^ method not found in `GpuKernel`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope","spans":[{"byte_end":15436,"byte_start":15419,"column_end":30,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":382,"line_start":382,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":13,"text":"            self.gemm_kernel.launch("}]},{"byte_end":15442,"byte_start":15436,"column_end":36,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `GpuKernel`","line_end":382,"line_start":382,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":30,"text":"            self.gemm_kernel.launch("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:389:21\n    |\n389 |                     &(m as i32),\n    |                     ^^^^^^^^^^^ expected `*const f64`, found `&i32`\n    |\n    = note: expected raw pointer `*const f64`\n                 found reference `&i32`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected raw pointer `*const f64`\n     found reference `&i32`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":15684,"byte_start":15673,"column_end":32,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `*const f64`, found `&i32`","line_end":389,"line_start":389,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":21,"text":"                    &(m as i32),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:415:17\n    |\n414 |             return Err(ScirsError::InvalidInput(\n    |                        ------------------------ arguments to this enum variant are incorrect\n415 |                 \"Batch sizes must match\".to_string(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\nnote: tuple variant defined here\n   --> /Users/kitasan/work/scirs/scirs2-core/src/error/error.rs:206:5\n    |\n206 |     InvalidInput(ErrorContext),\n    |     ^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":5323,"byte_start":5311,"column_end":17,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/error/error.rs","is_primary":true,"label":null,"line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"    InvalidInput(ErrorContext),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":16428,"byte_start":16392,"column_end":53,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":415,"line_start":415,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":17,"text":"                \"Batch sizes must match\".to_string(),"}]},{"byte_end":16374,"byte_start":16350,"column_end":48,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":414,"line_start":414,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":24,"text":"            return Err(ScirsError::InvalidInput("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:428:17\n    |\n428 |             let (m, k1) = a_batch[i].shape();\n    |                 ^^^^^^^   ------------------ this expression has type `&[usize]`\n    |                 |\n    |                 expected `[usize]`, found `(_, _)`\n    |\n    = note: expected slice `[usize]`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected slice `[usize]`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":16780,"byte_start":16773,"column_end":24,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `[usize]`, found `(_, _)`","line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":17,"text":"            let (m, k1) = a_batch[i].shape();"}]},{"byte_end":16801,"byte_start":16783,"column_end":45,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"this expression has type `&[usize]`","line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":27,"text":"            let (m, k1) = a_batch[i].shape();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:429:17\n    |\n429 |             let (k2, n) = b_batch[i].shape();\n    |                 ^^^^^^^   ------------------ this expression has type `&[usize]`\n    |                 |\n    |                 expected `[usize]`, found `(_, _)`\n    |\n    = note: expected slice `[usize]`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected slice `[usize]`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":16826,"byte_start":16819,"column_end":24,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `[usize]`, found `(_, _)`","line_end":429,"line_start":429,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":17,"text":"            let (k2, n) = b_batch[i].shape();"}]},{"byte_end":16847,"byte_start":16829,"column_end":45,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"this expression has type `&[usize]`","line_end":429,"line_start":429,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":27,"text":"            let (k2, n) = b_batch[i].shape();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:432:53\n    |\n432 |                   return Err(ScirsError::InvalidInput(format!(\n    |  _____________________________________________________^\n433 | |                     \"Matrix dimensions don't match for _batch {}\",\n434 | |                     i\n435 | |                 )));\n    | |_________________^ expected `ErrorContext`, found `String`\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3962,"byte_start":3901,"column_end":74,"column_start":13,"expansion":{"def_site_span":{"byte_end":3826,"byte_start":3807,"column_end":20,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":false,"label":null,"line_end":105,"line_start":105,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"format!","span":{"byte_end":17043,"byte_start":16928,"column_end":18,"column_start":53,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":null,"line_end":435,"line_start":432,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":53,"text":"                return Err(ScirsError::InvalidInput(format!("},{"highlight_end":67,"highlight_start":1,"text":"                    \"Matrix dimensions don't match for _batch {}\","},{"highlight_end":22,"highlight_start":1,"text":"                    i"},{"highlight_end":18,"highlight_start":1,"text":"                )));"}]}},"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":108,"line_start":108,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:447:39\n    |\n447 |         let gpu_a_ptrs = self.context.upload_ptr_array(&a_ptrs)?;\n    |                                       ^^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17411,"byte_start":17395,"column_end":55,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":447,"line_start":447,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":39,"text":"        let gpu_a_ptrs = self.context.upload_ptr_array(&a_ptrs)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:448:39\n    |\n448 |         let gpu_b_ptrs = self.context.upload_ptr_array(&b_ptrs)?;\n    |                                       ^^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17477,"byte_start":17461,"column_end":55,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":448,"line_start":448,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":39,"text":"        let gpu_b_ptrs = self.context.upload_ptr_array(&b_ptrs)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:449:39\n    |\n449 |         let gpu_c_ptrs = self.context.upload_ptr_array(&c_ptrs)?;\n    |                                       ^^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_ptr_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17543,"byte_start":17527,"column_end":55,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":449,"line_start":449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":39,"text":"        let gpu_c_ptrs = self.context.upload_ptr_array(&c_ptrs)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:450:40\n    |\n450 |         let gpu_m_array = self.context.upload_array(&Array1::from(m_array))?;\n    |                                        ^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17606,"byte_start":17594,"column_end":52,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":450,"line_start":450,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":40,"text":"        let gpu_m_array = self.context.upload_array(&Array1::from(m_array))?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:451:40\n    |\n451 |         let gpu_n_array = self.context.upload_array(&Array1::from(n_array))?;\n    |                                        ^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17684,"byte_start":17672,"column_end":52,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":451,"line_start":451,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":40,"text":"        let gpu_n_array = self.context.upload_array(&Array1::from(n_array))?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:452:40\n    |\n452 |         let gpu_k_array = self.context.upload_array(&Array1::from(k_array))?;\n    |                                        ^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17762,"byte_start":17750,"column_end":52,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":452,"line_start":452,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":40,"text":"        let gpu_k_array = self.context.upload_array(&Array1::from(k_array))?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:453:44\n    |\n453 |         let gpu_alpha_array = self.context.upload_array(&Array1::from(\n    |                               -------------^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17832,"byte_start":17819,"column_end":44,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":31,"text":"        let gpu_alpha_array = self.context.upload_array(&Array1::from("}]},{"byte_end":17844,"byte_start":17832,"column_end":56,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":44,"text":"        let gpu_alpha_array = self.context.upload_array(&Array1::from("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:456:43\n    |\n456 |         let gpu_beta_array = self.context.upload_array(&Array1::from(\n    |                              -------------^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `upload_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":17986,"byte_start":17973,"column_end":43,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":456,"line_start":456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":30,"text":"        let gpu_beta_array = self.context.upload_array(&Array1::from("}]},{"byte_end":17998,"byte_start":17986,"column_end":55,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":456,"line_start":456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":43,"text":"        let gpu_beta_array = self.context.upload_array(&Array1::from("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:472:32\n    |\n472 |         self.batch_gemm_kernel.launch(\n    |         -----------------------^^^^^^ method not found in `GpuKernel`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope","spans":[{"byte_end":18504,"byte_start":18481,"column_end":32,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":472,"line_start":472,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":9,"text":"        self.batch_gemm_kernel.launch("}]},{"byte_end":18510,"byte_start":18504,"column_end":38,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `GpuKernel`","line_end":472,"line_start":472,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":32,"text":"        self.batch_gemm_kernel.launch("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:498:13\n    |\n498 |         let (n_points, n_dims) = jacobian.shape();\n    |             ^^^^^^^^^^^^^^^^^^   ---------------- this expression has type `&[usize]`\n    |             |\n    |             expected `[usize]`, found `(_, _)`\n    |\n    = note: expected slice `[usize]`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected slice `[usize]`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":19278,"byte_start":19260,"column_end":31,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"expected `[usize]`, found `(_, _)`","line_end":498,"line_start":498,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":13,"text":"        let (n_points, n_dims) = jacobian.shape();"}]},{"byte_end":19297,"byte_start":19281,"column_end":50,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"this expression has type `&[usize]`","line_end":498,"line_start":498,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":34,"text":"        let (n_points, n_dims) = jacobian.shape();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `allocate_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:499:38\n    |\n499 |         let gradients = self.context.allocate_array::<f64>(&[n_dims, 1])?;\n    |                                      ^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `allocate_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":19350,"byte_start":19336,"column_end":52,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":499,"line_start":499,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":38,"text":"        let gradients = self.context.allocate_array::<f64>(&[n_dims, 1])?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:503:46\n    |\n503 |             let jacobian_fp16 = self.context.convert_to_fp16(jacobian)?;\n    |                                              ^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":19523,"byte_start":19508,"column_end":61,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":503,"line_start":503,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":46,"text":"            let jacobian_fp16 = self.context.convert_to_fp16(jacobian)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:504:47\n    |\n504 |             let residuals_fp16 = self.context.convert_to_fp16(residuals)?;\n    |                                               ^^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `convert_to_fp16` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":19597,"byte_start":19582,"column_end":62,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":504,"line_start":504,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":47,"text":"            let residuals_fp16 = self.context.convert_to_fp16(residuals)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:510:34\n    |\n510 |             self.gradient_kernel.launch(\n    |             ---------------------^^^^^^ method not found in `GpuKernel`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `launch` found for struct `scirs2_core::GpuKernel` in the current scope","spans":[{"byte_end":19794,"byte_start":19773,"column_end":34,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":false,"label":"","line_end":510,"line_start":510,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":13,"text":"            self.gradient_kernel.launch("}]},{"byte_end":19800,"byte_start":19794,"column_end":40,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `GpuKernel`","line_end":510,"line_start":510,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":34,"text":"            self.gradient_kernel.launch("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `dot` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:532:50\n    |\n532 |             let grad_norm_squared = self.context.dot(gradients, gradients)?;\n    |                                                  ^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `dot` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":20553,"byte_start":20550,"column_end":53,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":532,"line_start":532,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":50,"text":"            let grad_norm_squared = self.context.dot(gradients, gradients)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `scale_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:537:30\n    |\n537 |                 self.context.scale_array(gradients, scale_factor)?;\n    |                              ^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `scale_array` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":20784,"byte_start":20773,"column_end":41,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":537,"line_start":537,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":30,"text":"                self.context.scale_array(gradients, scale_factor)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `has_nan_or_inf` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope\n   --> scirs2-optimize/src/gpu/tensor_core_optimization.rs:556:22\n    |\n556 |         self.context.has_nan_or_inf(tensor)\n    |                      ^^^^^^^^^^^^^^ method not found in `Arc<GpuContext>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `has_nan_or_inf` found for struct `std::sync::Arc<scirs2_core::GpuContext>` in the current scope","spans":[{"byte_end":21358,"byte_start":21344,"column_end":36,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/gpu/tensor_core_optimization.rs","is_primary":true,"label":"method not found in `Arc<GpuContext>`","line_end":556,"line_start":556,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":22,"text":"        self.context.has_nan_or_inf(tensor)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `scirs2_core::GpuContext` doesn't implement `std::fmt::Debug`\n  --> scirs2-optimize/src/gpu/mod.rs:28:5\n   |\n25 | #[derive(Debug, Clone)]\n   |          ----- in this derive macro expansion\n...\n28 |     pub context: GpuContext,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^ `scirs2_core::GpuContext` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n   |\n   = help: the trait `std::fmt::Debug` is not implemented for `scirs2_core::GpuContext`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the trait `std::fmt::Debug` is not implemented for `scirs2_core::GpuContext`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`scirs2_core::GpuContext` doesn't implement `std::fmt::Debug`","spans":[{"byte_end":1012,"byte_start":989,"column_end":28,"column_start":5,"expansion":{"def_site_span":{"byte_end":34084,"byte_start":34069,"column_end":20,"column_start":5,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/fmt/mod.rs","is_primary":false,"label":null,"line_end":907,"line_start":907,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"#[derive(Debug)]","span":{"byte_end":913,"byte_start":908,"column_end":15,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":false,"label":null,"line_end":25,"line_start":25,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":10,"text":"#[derive(Debug, Clone)]"}]}},"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"`scirs2_core::GpuContext` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`","line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":5,"text":"    pub context: GpuContext,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `scirs2_core::GpuContext: Clone` is not satisfied\n  --> scirs2-optimize/src/gpu/mod.rs:28:5\n   |\n25 | #[derive(Debug, Clone)]\n   |                 ----- in this derive macro expansion\n...\n28 |     pub context: GpuContext,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `scirs2_core::GpuContext`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `scirs2_core::GpuContext: Clone` is not satisfied","spans":[{"byte_end":1012,"byte_start":989,"column_end":28,"column_start":5,"expansion":{"def_site_span":{"byte_end":5973,"byte_start":5958,"column_end":16,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/clone.rs","is_primary":false,"label":null,"line_end":183,"line_start":183,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"#[derive(Clone)]","span":{"byte_end":920,"byte_start":915,"column_end":22,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":false,"label":null,"line_end":25,"line_start":25,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":17,"text":"#[derive(Debug, Clone)]"}]}},"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"the trait `Clone` is not implemented for `scirs2_core::GpuContext`","line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":5,"text":"    pub context: GpuContext,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no variant or associated item named `NotImplemented` found for enum `CoreError` in the current scope\n    --> scirs2-optimize/src/gpu/mod.rs:75:25\n     |\n75   |         Err(ScirsError::NotImplemented(\n     |                         ^^^^^^^^^^^^^^ variant or associated item not found in `CoreError`\n     |\nnote: if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`\n    --> /Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs:1567:5\n     |\n1567 |     pub fn scheduler_error(message: &str) -> Self {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"if you're trying to build a new `CoreError`, consider using `scirs2_core::parallel::scheduler::<impl CoreError>::scheduler_error` which returns `CoreError`","rendered":null,"spans":[{"byte_end":48387,"byte_start":48342,"column_end":50,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/parallel/scheduler.rs","is_primary":true,"label":null,"line_end":1567,"line_start":1567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":5,"text":"    pub fn scheduler_error(message: &str) -> Self {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no variant or associated item named `NotImplemented` found for enum `CoreError` in the current scope","spans":[{"byte_end":2639,"byte_start":2625,"column_end":39,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"variant or associated item not found in `CoreError`","line_end":75,"line_start":75,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":25,"text":"        Err(ScirsError::NotImplemented("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `clone` found for struct `scirs2_core::GpuContext` in the current scope\n  --> scirs2-optimize/src/gpu/mod.rs:96:48\n   |\n96 |         let context = Arc::new(_config.context.clone());\n   |                                                ^^^^^ method not found in `GpuContext`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `clone` found for struct `scirs2_core::GpuContext` in the current scope","spans":[{"byte_end":3226,"byte_start":3221,"column_end":53,"column_start":48,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"method not found in `GpuContext`","line_end":96,"line_start":96,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":48,"text":"        let context = Arc::new(_config.context.clone());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `zeros` found for struct `scirs2_core::GpuBuffer` in the current scope\n   --> scirs2-optimize/src/gpu/mod.rs:131:44\n    |\n131 |         let mut gpu_array = OptimGpuArray::zeros(&self.context, [shape.0, shape.1])?;\n    |                                            ^^^^^ function or associated item not found in `GpuBuffer<_>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `zeros` found for struct `scirs2_core::GpuBuffer` in the current scope","spans":[{"byte_end":4238,"byte_start":4233,"column_end":49,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"function or associated item not found in `GpuBuffer<_>`","line_end":131,"line_start":131,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":44,"text":"        let mut gpu_array = OptimGpuArray::zeros(&self.context, [shape.0, shape.1])?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `shape` found for reference `&scirs2_core::GpuBuffer<T>` in the current scope\n   --> scirs2-optimize/src/gpu/mod.rs:145:30\n    |\n145 |         let shape = gpu_data.shape();\n    |                              ^^^^^ method not found in `&GpuBuffer<T>`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `shape` found for reference `&scirs2_core::GpuBuffer<T>` in the current scope","spans":[{"byte_end":4728,"byte_start":4723,"column_end":35,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"method not found in `&GpuBuffer<T>`","line_end":145,"line_start":145,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":30,"text":"        let shape = gpu_data.shape();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/mod.rs:154:55\n    |\n154 |             .map_err(|e| ScirsError::ComputationError(format!(\"Shape error: {}\", e)))\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3962,"byte_start":3901,"column_end":74,"column_start":13,"expansion":{"def_site_span":{"byte_end":3826,"byte_start":3807,"column_end":20,"column_start":1,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":false,"label":null,"line_end":105,"line_start":105,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"format!","span":{"byte_end":5118,"byte_start":5089,"column_end":84,"column_start":55,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":false,"label":null,"line_end":154,"line_start":154,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":55,"text":"            .map_err(|e| ScirsError::ComputationError(format!(\"Shape error: {}\", e)))"}]}},"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/alloc/src/macros.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":108,"line_start":108,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/mod.rs:184:17\n    |\n183 |             return Err(ScirsError::InvalidInput(\n    |                        ------------------------ arguments to this enum variant are incorrect\n184 |                 \"Function does not support GPU acceleration\".to_string(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\nnote: tuple variant defined here\n   --> /Users/kitasan/work/scirs/scirs2-core/src/error/error.rs:206:5\n    |\n206 |     InvalidInput(ErrorContext),\n    |     ^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":5323,"byte_start":5311,"column_end":17,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/error/error.rs","is_primary":true,"label":null,"line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"    InvalidInput(ErrorContext),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":6073,"byte_start":6017,"column_end":73,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":184,"line_start":184,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":17,"text":"                \"Function does not support GPU acceleration\".to_string(),"}]},{"byte_end":5999,"byte_start":5975,"column_end":48,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":183,"line_start":183,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":24,"text":"            return Err(ScirsError::InvalidInput("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/gpu/mod.rs:207:17\n    |\n206 |             return Err(ScirsError::InvalidInput(\n    |                        ------------------------ arguments to this enum variant are incorrect\n207 |                 \"Function does not support GPU acceleration\".to_string(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorContext`, found `String`\n    |\nnote: tuple variant defined here\n   --> /Users/kitasan/work/scirs/scirs2-core/src/error/error.rs:206:5\n    |\n206 |     InvalidInput(ErrorContext),\n    |     ^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":5323,"byte_start":5311,"column_end":17,"column_start":5,"expansion":null,"file_name":"/Users/kitasan/work/scirs/scirs2-core/src/error/error.rs","is_primary":true,"label":null,"line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"    InvalidInput(ErrorContext),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":6796,"byte_start":6740,"column_end":73,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"expected `ErrorContext`, found `String`","line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":17,"text":"                \"Function does not support GPU acceleration\".to_string(),"}]},{"byte_end":6722,"byte_start":6698,"column_end":48,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":206,"line_start":206,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":24,"text":"            return Err(ScirsError::InvalidInput("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `GpuParticleSwarm` has no field named `_context`\n   --> scirs2-optimize/src/gpu/mod.rs:470:17\n    |\n470 |                 _context,\n    |                 ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n470 -                 _context,\n470 +                 context,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":15467,"byte_start":15459,"column_end":25,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":null,"line_end":470,"line_start":470,"suggested_replacement":"context","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":25,"highlight_start":17,"text":"                _context,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `GpuParticleSwarm` has no field named `_context`","spans":[{"byte_end":15467,"byte_start":15459,"column_end":25,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"unknown field","line_end":470,"line_start":470,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":17,"text":"                _context,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied\n   --> scirs2-optimize/src/gpu/mod.rs:614:32\n    |\n614 |                     velocities[[i..j]] = self.w * velocities[[i, j]]\n    |                                ^^^^^^ the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`\n    |\n    = help: the following other types implement trait `NdIndex<E>`:\n              `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n              `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n              `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n              `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n              `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n              `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n              `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n              `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n              `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`\n    = note: required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `NdIndex<E>`:\n  `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n  `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n  `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n  `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n  `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n  `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n  `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n  `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n  `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied","spans":[{"byte_end":20415,"byte_start":20409,"column_end":38,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/gpu/mod.rs","is_primary":true,"label":"the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`","line_end":614,"line_start":614,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":32,"text":"                    velocities[[i..j]] = self.w * velocities[[i, j]]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `JitCompiler` has no field named `_options`\n   --> scirs2-optimize/src/jit_optimization.rs:137:13\n    |\n137 |             _options,\n    |             ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n137 -             _options,\n137 +             options,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":4391,"byte_start":4383,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":137,"line_start":137,"suggested_replacement":"options","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `JitCompiler` has no field named `_options`","spans":[{"byte_end":4391,"byte_start":4383,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"unknown field","line_end":137,"line_start":137,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `generate_signature` found for mutable reference `&mut JitCompiler` in the current scope\n   --> scirs2-optimize/src/jit_optimization.rs:156:30\n    |\n156 |         let signature = self.generate_signature(&fun, n_vars);\n    |                         -----^^^^^^^^^^^^^^^^^^--------------\n    |                         |    |\n    |                         |    this is an associated function, not a method\n    |                         help: use associated function syntax instead: `JitCompiler::generate_signature(&fun, n_vars)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `JitCompiler`\n   --> scirs2-optimize/src/jit_optimization.rs:215:5\n    |\n215 | /     fn generate_signature<F>(&self_fun: &F, n_vars: usize) -> u64\n216 | |     where\n217 | |         F: Fn(&ArrayView1<f64>) -> f64,\n    | |_______________________________________^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `JitCompiler`","rendered":null,"spans":[{"byte_end":7022,"byte_start":6911,"column_end":40,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":217,"line_start":215,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":5,"text":"    fn generate_signature<F>(&self_fun: &F, n_vars: usize) -> u64"},{"highlight_end":10,"highlight_start":1,"text":"    where"},{"highlight_end":40,"highlight_start":1,"text":"        F: Fn(&ArrayView1<f64>) -> f64,"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":4976,"byte_start":4939,"column_end":62,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":156,"line_start":156,"suggested_replacement":"JitCompiler::generate_signature(&fun, n_vars)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":25,"text":"        let signature = self.generate_signature(&fun, n_vars);"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `generate_signature` found for mutable reference `&mut JitCompiler` in the current scope","spans":[{"byte_end":4962,"byte_start":4944,"column_end":48,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":156,"line_start":156,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":30,"text":"        let signature = self.generate_signature(&fun, n_vars);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0614]: type `F` cannot be dereferenced\n   --> scirs2-optimize/src/jit_optimization.rs:227:29\n    |\n227 |         (std::ptr::addr_of!(*self_fun) as usize).hash(&mut hasher);\n    |                             ^^^^^^^^^ can't be dereferenced\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0614","explanation":"Attempted to dereference a variable which cannot be dereferenced.\n\nErroneous code example:\n\n```compile_fail,E0614\nlet y = 0u32;\n*y; // error: type `u32` cannot be dereferenced\n```\n\nOnly types implementing `std::ops::Deref` can be dereferenced (such as `&T`).\nExample:\n\n```\nlet y = 0u32;\nlet x = &y;\n// So here, `x` is a `&u32`, so we can dereference it:\n*x; // ok!\n```\n"},"level":"error","message":"type `F` cannot be dereferenced","spans":[{"byte_end":7483,"byte_start":7474,"column_end":38,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"can't be dereferenced","line_end":227,"line_start":227,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":29,"text":"        (std::ptr::addr_of!(*self_fun) as usize).hash(&mut hasher);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `is_sum_of_squares` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope\n   --> scirs2-optimize/src/jit_optimization.rs:463:24\n    |\n463 |         } else if self.is_sum_of_squares(&values) {\n    |                   -----^^^^^^^^^^^^^^^^^---------\n    |                   |    |\n    |                   |    this is an associated function, not a method\n    |                   help: use associated function syntax instead: `jit_optimization::PatternDetector::is_sum_of_squares(&values)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `jit_optimization::PatternDetector`\n   --> scirs2-optimize/src/jit_optimization.rs:502:5\n    |\n502 |     fn is_sum_of_squares(&self_values: &[f64]) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `jit_optimization::PatternDetector`","rendered":null,"spans":[{"byte_end":17200,"byte_start":17150,"column_end":55,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":502,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":5,"text":"    fn is_sum_of_squares(&self_values: &[f64]) -> bool {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15825,"byte_start":15794,"column_end":50,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":463,"line_start":463,"suggested_replacement":"jit_optimization::PatternDetector::is_sum_of_squares(&values)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":19,"text":"        } else if self.is_sum_of_squares(&values) {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `is_sum_of_squares` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope","spans":[{"byte_end":15816,"byte_start":15799,"column_end":41,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":463,"line_start":463,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":24,"text":"        } else if self.is_sum_of_squares(&values) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `is_separable` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope\n   --> scirs2-optimize/src/jit_optimization.rs:465:24\n    |\n465 |         } else if self.is_separable(fun, n_vars)? {\n    |                   -----^^^^^^^^^^^^-------------\n    |                   |    |\n    |                   |    this is an associated function, not a method\n    |                   help: use associated function syntax instead: `jit_optimization::PatternDetector::is_separable(fun, n_vars)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `jit_optimization::PatternDetector`\n   --> scirs2-optimize/src/jit_optimization.rs:508:5\n    |\n508 | /     fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>\n509 | |     where\n510 | |         F: Fn(&ArrayView1<f64>) -> f64,\n    | |_______________________________________^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `jit_optimization::PatternDetector`","rendered":null,"spans":[{"byte_end":17502,"byte_start":17374,"column_end":40,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":510,"line_start":508,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":5,"text":"    fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>"},{"highlight_end":10,"highlight_start":1,"text":"    where"},{"highlight_end":40,"highlight_start":1,"text":"        F: Fn(&ArrayView1<f64>) -> f64,"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":15922,"byte_start":15892,"column_end":49,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":465,"line_start":465,"suggested_replacement":"jit_optimization::PatternDetector::is_separable(fun, n_vars)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":19,"text":"        } else if self.is_separable(fun, n_vars)? {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `is_separable` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope","spans":[{"byte_end":15909,"byte_start":15897,"column_end":36,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":465,"line_start":465,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":24,"text":"        } else if self.is_separable(fun, n_vars)? {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `detect_polynomial_degree` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope\n   --> scirs2-optimize/src/jit_optimization.rs:467:43\n    |\n467 |         } else if let Some(degree) = self.detect_polynomial_degree(&values) {\n    |                                      -----^^^^^^^^^^^^^^^^^^^^^^^^---------\n    |                                      |    |\n    |                                      |    this is an associated function, not a method\n    |                                      help: use associated function syntax instead: `jit_optimization::PatternDetector::detect_polynomial_degree(&values)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `jit_optimization::PatternDetector`\n   --> scirs2-optimize/src/jit_optimization.rs:518:5\n    |\n518 |     fn detect_polynomial_degree(&self_values: &[f64]) -> Option<usize> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: there is a method `detect_pattern` with a similar name, but with different arguments\n   --> scirs2-optimize/src/jit_optimization.rs:441:5\n    |\n441 | /     pub fn detect_pattern<F>(\n442 | |         &mut self,\n443 | |         fun: &F,\n444 | |         n_vars: usize,\n445 | |     ) -> Result<FunctionPattern, OptimizeError>\n446 | |     where\n447 | |         F: Fn(&ArrayView1<f64>) -> f64,\n    | |_______________________________________^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `jit_optimization::PatternDetector`","rendered":null,"spans":[{"byte_end":17785,"byte_start":17719,"column_end":71,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":5,"text":"    fn detect_polynomial_degree(&self_values: &[f64]) -> Option<usize> {"}]}]},{"children":[],"code":null,"level":"help","message":"there is a method `detect_pattern` with a similar name, but with different arguments","rendered":null,"spans":[{"byte_end":15305,"byte_start":15123,"column_end":40,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":447,"line_start":441,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":5,"text":"    pub fn detect_pattern<F>("},{"highlight_end":19,"highlight_start":1,"text":"        &mut self,"},{"highlight_end":17,"highlight_start":1,"text":"        fun: &F,"},{"highlight_end":23,"highlight_start":1,"text":"        n_vars: usize,"},{"highlight_end":48,"highlight_start":1,"text":"    ) -> Result<FunctionPattern, OptimizeError>"},{"highlight_end":10,"highlight_start":1,"text":"    where"},{"highlight_end":40,"highlight_start":1,"text":"        F: Fn(&ArrayView1<f64>) -> f64,"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":16044,"byte_start":16006,"column_end":76,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"jit_optimization::PatternDetector::detect_polynomial_degree(&values)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":38,"text":"        } else if let Some(degree) = self.detect_polynomial_degree(&values) {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `detect_polynomial_degree` found for mutable reference `&mut jit_optimization::PatternDetector` in the current scope","spans":[{"byte_end":16035,"byte_start":16011,"column_end":67,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":467,"line_start":467,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":43,"text":"        } else if let Some(degree) = self.detect_polynomial_degree(&values) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the size for values of type `[f64]` cannot be known at compilation time\n   --> scirs2-optimize/src/jit_optimization.rs:502:27\n    |\n502 |     fn is_sum_of_squares(&self_values: &[f64]) -> bool {\n    |                           ^^^^^^^^^^^ doesn't have a size known at compile-time\n    |\n    = help: the trait `Sized` is not implemented for `[f64]`\n    = note: all local variables must have a statically known size\n    = help: unsized locals are gated as an unstable feature\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the trait `Sized` is not implemented for `[f64]`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"all local variables must have a statically known size","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"unsized locals are gated as an unstable feature","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the size for values of type `[f64]` cannot be known at compilation time","spans":[{"byte_end":17183,"byte_start":17172,"column_end":38,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"doesn't have a size known at compile-time","line_end":502,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":27,"text":"    fn is_sum_of_squares(&self_values: &[f64]) -> bool {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the size for values of type `[f64]` cannot be known at compilation time\n   --> scirs2-optimize/src/jit_optimization.rs:518:34\n    |\n518 |     fn detect_polynomial_degree(&self_values: &[f64]) -> Option<usize> {\n    |                                  ^^^^^^^^^^^ doesn't have a size known at compile-time\n    |\n    = help: the trait `Sized` is not implemented for `[f64]`\n    = note: all local variables must have a statically known size\n    = help: unsized locals are gated as an unstable feature\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the trait `Sized` is not implemented for `[f64]`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"all local variables must have a statically known size","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"unsized locals are gated as an unstable feature","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the size for values of type `[f64]` cannot be known at compilation time","spans":[{"byte_end":17759,"byte_start":17748,"column_end":45,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":"doesn't have a size known at compile-time","line_end":518,"line_start":518,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":34,"text":"    fn detect_polynomial_degree(&self_values: &[f64]) -> Option<usize> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:500:33\n    |\n500 |                 regularization: 1e-6 + rand::rng().gen_range(0.0..1e-3)..,\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `f64`, found `RangeFrom<{float}>`\n    |\n    = note: expected type `f64`\n             found struct `std::ops::RangeFrom<{float}>`\nhelp: remove the unnecessary `.` operator for a floating point literal\n    |\n500 -                 regularization: 1e-6 + rand::rng().gen_range(0.0..1e-3)..,\n500 +                 regularization: 1e-6 + rand::rng().gen_range(0.0..1e-3).,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected type `f64`\n found struct `std::ops::RangeFrom<{float}>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unnecessary `.` operator for a floating point literal","rendered":null,"spans":[{"byte_end":15102,"byte_start":15100,"column_end":74,"column_start":72,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":500,"line_start":500,"suggested_replacement":".","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":74,"highlight_start":72,"text":"                regularization: 1e-6 + rand::rng().gen_range(0.0..1e-3)..,"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":15102,"byte_start":15061,"column_end":74,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":"expected `f64`, found `RangeFrom<{float}>`","line_end":500,"line_start":500,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":33,"text":"                regularization: 1e-6 + rand::rng().gen_range(0.0..1e-3)..,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `nrows` found for struct `ArrayBase<OwnedRepr<f64>, Dim<[usize; 3]>>` in the current scope\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:590:58\n    |\n590 |                 for j in 0..self.controller.lstm_weights.nrows() {\n    |                                                          ^^^^^\n    |\nhelp: there is a method `rows` with a similar name\n    |\n590 -                 for j in 0..self.controller.lstm_weights.nrows() {\n590 +                 for j in 0..self.controller.lstm_weights.rows() {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `rows` with a similar name","rendered":null,"spans":[{"byte_end":18453,"byte_start":18448,"column_end":63,"column_start":58,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":590,"line_start":590,"suggested_replacement":"rows","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":63,"highlight_start":58,"text":"                for j in 0..self.controller.lstm_weights.nrows() {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `nrows` found for struct `ArrayBase<OwnedRepr<f64>, Dim<[usize; 3]>>` in the current scope","spans":[{"byte_end":18453,"byte_start":18448,"column_end":63,"column_start":58,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":590,"line_start":590,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":58,"text":"                for j in 0..self.controller.lstm_weights.nrows() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `ncols` found for struct `ArrayBase<OwnedRepr<f64>, Dim<[usize; 3]>>` in the current scope\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:591:62\n    |\n591 |                     for k in 0..self.controller.lstm_weights.ncols() {\n    |                                                              ^^^^^\n    |\nhelp: there is a method `cos` with a similar name\n    |\n591 -                     for k in 0..self.controller.lstm_weights.ncols() {\n591 +                     for k in 0..self.controller.lstm_weights.cos() {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `cos` with a similar name","rendered":null,"spans":[{"byte_end":18524,"byte_start":18519,"column_end":67,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":591,"line_start":591,"suggested_replacement":"cos","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":67,"highlight_start":62,"text":"                    for k in 0..self.controller.lstm_weights.ncols() {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `ncols` found for struct `ArrayBase<OwnedRepr<f64>, Dim<[usize; 3]>>` in the current scope","spans":[{"byte_end":18524,"byte_start":18519,"column_end":67,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":591,"line_start":591,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":62,"text":"                    for k in 0..self.controller.lstm_weights.ncols() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:632:76\n    |\n632 |         let controller_influence = self.controller.controller_state.mean().unwrap_or(0.0);\n    |                                                                            ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":20216,"byte_start":20207,"column_end":85,"column_start":76,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":"method not found in `f64`","line_end":632,"line_start":632,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":85,"highlight_start":76,"text":"        let controller_influence = self.controller.controller_state.mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:305:59\n    |\n305 |         let transformer_output = self.transformer.forward(&state_encoding)?;\n    |                                                   ------- ^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                                                   |\n    |                                                   arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:664:12\n    |\n664 |     pub fn forward(&mut self, input_sequence: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {\n    |            ^^^^^^^            --------------------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":20923,"byte_start":20891,"column_end":63,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"","line_end":664,"line_start":664,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":31,"text":"    pub fn forward(&mut self, input_sequence: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]},{"byte_end":20879,"byte_start":20872,"column_end":19,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":null,"line_end":664,"line_start":664,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    pub fn forward(&mut self, input_sequence: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":8867,"byte_start":8852,"column_end":74,"column_start":59,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":305,"line_start":305,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":59,"text":"        let transformer_output = self.transformer.forward(&state_encoding)?;"}]},{"byte_end":8851,"byte_start":8844,"column_end":58,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":305,"line_start":305,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":51,"text":"        let transformer_output = self.transformer.forward(&state_encoding)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:308:63\n    |\n308 |         let optimization_step = self.decode_optimization_step(&transformer_output)?;\n    |                                      ------------------------ ^^^^^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                                      |\n    |                                      arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:398:8\n    |\n398 |     fn decode_optimization_step(\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^\n399 |         &self,\n400 |         transformer_output: &ArrayView2<f64>,\n    |         ------------------------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":11987,"byte_start":11951,"column_end":45,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"","line_end":400,"line_start":400,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":9,"text":"        transformer_output: &ArrayView2<f64>,"}]},{"byte_end":11926,"byte_start":11902,"column_end":32,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":null,"line_end":398,"line_start":398,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":8,"text":"    fn decode_optimization_step("}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":8995,"byte_start":8976,"column_end":82,"column_start":63,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":308,"line_start":308,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":82,"highlight_start":63,"text":"        let optimization_step = self.decode_optimization_step(&transformer_output)?;"}]},{"byte_end":8975,"byte_start":8951,"column_end":62,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":308,"line_start":308,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":38,"text":"        let optimization_step = self.decode_optimization_step(&transformer_output)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:746:22\n    |\n746 |             .forward(&(input + &attention_output.view()))?;\n    |              ------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |              |\n    |              arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:989:12\n    |\n989 |     pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {\n    |            ^^^^^^^        -----------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":31521,"byte_start":31498,"column_end":50,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"","line_end":989,"line_start":989,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":27,"text":"    pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]},{"byte_end":31490,"byte_start":31483,"column_end":19,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":null,"line_end":989,"line_start":989,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":23855,"byte_start":23820,"column_end":57,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":746,"line_start":746,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":22,"text":"            .forward(&(input + &attention_output.view()))?;"}]},{"byte_end":23819,"byte_start":23812,"column_end":21,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":746,"line_start":746,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":14,"text":"            .forward(&(input + &attention_output.view()))?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:752:22\n    |\n752 |             .forward(&(&after_attention + &ff_output.view()))?;\n    |              ------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |              |\n    |              arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:989:12\n    |\n989 |     pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {\n    |            ^^^^^^^        -----------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":31521,"byte_start":31498,"column_end":50,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"","line_end":989,"line_start":989,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":27,"text":"    pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]},{"byte_end":31490,"byte_start":31483,"column_end":19,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":null,"line_end":989,"line_start":989,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    pub fn forward(&self, input: &ArrayView2<f64>) -> OptimizeResult<Array2<f64>> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":24097,"byte_start":24058,"column_end":61,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":752,"line_start":752,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":22,"text":"            .forward(&(&after_attention + &ff_output.view()))?;"}]},{"byte_end":24057,"byte_start":24050,"column_end":21,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":752,"line_start":752,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":14,"text":"            .forward(&(&after_attention + &ff_output.view()))?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n   --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:997:35\n    |\n997 |             let mean = row.mean().unwrap_or(0.0);\n    |                                   ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":31860,"byte_start":31851,"column_end":44,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"method not found in `f64`","line_end":997,"line_start":997,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":35,"text":"            let mean = row.mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n    --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:1118:43\n     |\n1118 |             features[2] = gradient.mean().unwrap_or(0.0).tanh(); // Gradient mean\n     |                                           ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":36418,"byte_start":36409,"column_end":52,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"method not found in `f64`","line_end":1118,"line_start":1118,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":43,"text":"            features[2] = gradient.mean().unwrap_or(0.0).tanh(); // Gradient mean"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n    --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:1236:60\n     |\n1236 |             new_focus[i] = attention_weights.row(i).mean().unwrap_or(0.0);\n     |                                                            ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":40549,"byte_start":40540,"column_end":69,"column_start":60,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"method not found in `f64`","line_end":1236,"line_start":1236,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":60,"text":"            new_focus[i] = attention_weights.row(i).mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`\n    --> scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs:1006:13\n     |\n1006 |         let mut params = Array1::zeros(self.param_dim);\n     |             ^^^^^^^^^^\n...\n1013 |             params[i] = params[i].tanh(); // Normalize to [-1, 1]\n     |                         --------- type must be known at this point\n     |\nhelp: consider giving `params` an explicit type, where the type for type parameter `A` is specified\n     |\n1006 |         let mut params: ArrayBase<OwnedRepr<A>, _> = Array1::zeros(self.param_dim);\n     |                       ++++++++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving `params` an explicit type, where the type for type parameter `A` is specified","rendered":null,"spans":[{"byte_end":31205,"byte_start":31205,"column_end":23,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":true,"label":null,"line_end":1006,"line_start":1006,"suggested_replacement":": ArrayBase<OwnedRepr<A>, _>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":23,"highlight_start":23,"text":"        let mut params = Array1::zeros(self.param_dim);"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`","spans":[{"byte_end":31545,"byte_start":31536,"column_end":34,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":false,"label":"type must be known at this point","line_end":1013,"line_start":1013,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":25,"text":"            params[i] = params[i].tanh(); // Normalize to [-1, 1]"}]},{"byte_end":31205,"byte_start":31195,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":true,"label":null,"line_end":1006,"line_start":1006,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":13,"text":"        let mut params = Array1::zeros(self.param_dim);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0063]: missing fields `constr`, `hess`, `jac` and 5 other fields in initializer of `OptimizeResults<f64>`\n   --> scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs:762:12\n    |\n762 |         Ok(OptimizeResults::<f64> {\n    |            ^^^^^^^^^^^^^^^^^^^^^^ missing `constr`, `hess`, `jac` and 5 other fields\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","message":"missing fields `constr`, `hess`, `jac` and 5 other fields in initializer of `OptimizeResults<f64>`","spans":[{"byte_end":22866,"byte_start":22844,"column_end":34,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":true,"label":"missing `constr`, `hess`, `jac` and 5 other fields","line_end":762,"line_start":762,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":12,"text":"        Ok(OptimizeResults::<f64> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0433]: failed to resolve: use of unresolved module or unlinked crate `libm`\n   --> scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs:901:22\n    |\n901 |         0.5 * (1.0 + libm::erf(x / 2.0_f64.sqrt()))\n    |                      ^^^^ use of unresolved module or unlinked crate `libm`\n    |\n    = help: if you wanted to use a crate named `libm`, use `cargo add libm` to add it to your `Cargo.toml`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if you wanted to use a crate named `libm`, use `cargo add libm` to add it to your `Cargo.toml`","rendered":null,"spans":[]}],"code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","message":"failed to resolve: use of unresolved module or unlinked crate `libm`","spans":[{"byte_end":27538,"byte_start":27534,"column_end":26,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":true,"label":"use of unresolved module or unlinked crate `libm`","line_end":901,"line_start":901,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":22,"text":"        0.5 * (1.0 + libm::erf(x / 2.0_f64.sqrt()))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:497:64\n    |\n497 |         let network_output = self.optimization_network.forward(&state_features)?;\n    |                                                        ------- ^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                                                        |\n    |                                                        arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:940:12\n    |\n940 |     pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {\n    |            ^^^^^^^            -----------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":29513,"byte_start":29490,"column_end":54,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"","line_end":940,"line_start":940,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":31,"text":"    pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {"}]},{"byte_end":29478,"byte_start":29471,"column_end":19,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":940,"line_start":940,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14300,"byte_start":14285,"column_end":79,"column_start":64,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":497,"line_start":497,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":64,"text":"        let network_output = self.optimization_network.forward(&state_features)?;"}]},{"byte_end":14284,"byte_start":14277,"column_end":63,"column_start":56,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":497,"line_start":497,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":56,"text":"        let network_output = self.optimization_network.forward(&state_features)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:782:74\n    |\n782 |                 let predicted_action = self.optimization_network.forward(state)?;\n    |                                                                  ------- ^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                                                                  |\n    |                                                                  arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:940:12\n    |\n940 |     pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {\n    |            ^^^^^^^            -----------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":29513,"byte_start":29490,"column_end":54,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"","line_end":940,"line_start":940,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":31,"text":"    pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {"}]},{"byte_end":29478,"byte_start":29471,"column_end":19,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":940,"line_start":940,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    pub fn forward(&mut self, input: &ArrayView1<f64>) -> OptimizeResult<Array1<f64>> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":24348,"byte_start":24343,"column_end":79,"column_start":74,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":782,"line_start":782,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":74,"text":"                let predicted_action = self.optimization_network.forward(state)?;"}]},{"byte_end":24342,"byte_start":24335,"column_end":73,"column_start":66,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":782,"line_start":782,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":66,"text":"                let predicted_action = self.optimization_network.forward(state)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `neural_adaptive_optimizer::OptimizationNetwork` has no field named `_architecture`\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:935:13\n    |\n935 |             _architecture,\n    |             ^^^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n935 -             _architecture,\n935 +             architecture,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":29404,"byte_start":29391,"column_end":26,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":935,"line_start":935,"suggested_replacement":"architecture","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":26,"highlight_start":13,"text":"            _architecture,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `neural_adaptive_optimizer::OptimizationNetwork` has no field named `_architecture`","spans":[{"byte_end":29404,"byte_start":29391,"column_end":26,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"unknown field","line_end":935,"line_start":935,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":13,"text":"            _architecture,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `neural_adaptive_optimizer::NeuralLayer` has no field named `activation_size`\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:996:13\n    |\n996 |             activation_size: output_size,\n    |             ^^^^^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n996 -             activation_size: output_size,\n996 +             activation: output_size,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":31469,"byte_start":31454,"column_end":28,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":996,"line_start":996,"suggested_replacement":"activation","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":28,"highlight_start":13,"text":"            activation_size: output_size,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `neural_adaptive_optimizer::NeuralLayer` has no field named `activation_size`","spans":[{"byte_end":31469,"byte_start":31454,"column_end":28,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"unknown field","line_end":996,"line_start":996,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":13,"text":"            activation_size: output_size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `ProgressIndicator` has no field named `_name`\n    --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:1445:13\n     |\n1445 |             _name,\n     |             ^^^^^ unknown field\n     |\nhelp: a field with a similar name exists\n     |\n1445 -             _name,\n1445 +             name,\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":45929,"byte_start":45924,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":1445,"line_start":1445,"suggested_replacement":"name","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":18,"highlight_start":13,"text":"            _name,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `ProgressIndicator` has no field named `_name`","spans":[{"byte_end":45929,"byte_start":45924,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"unknown field","line_end":1445,"line_start":1445,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":13,"text":"            _name,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `_value` on type `&mut ProgressIndicator`\n    --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:1455:14\n     |\n1455 |         self._value = new_value;\n     |              ^^^^^^ unknown field\n     |\nhelp: a field with a similar name exists\n     |\n1455 -         self._value = new_value;\n1455 +         self.value = new_value;\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":46184,"byte_start":46178,"column_end":20,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"value","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":14,"text":"        self._value = new_value;"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `_value` on type `&mut ProgressIndicator`","spans":[{"byte_end":46184,"byte_start":46178,"column_end":20,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"unknown field","line_end":1455,"line_start":1455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":14,"text":"        self._value = new_value;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n   --> scirs2-optimize/src/learned_optimizers/mod.rs:378:40\n    |\n378 |                 let mean = next.mean().unwrap_or(0.0);\n    |                                        ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":11577,"byte_start":11568,"column_end":49,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/mod.rs","is_primary":true,"label":"method not found in `f64`","line_end":378,"line_start":378,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":40,"text":"                let mean = next.mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> scirs2-optimize/src/least_squares/robust.rs:88:15\n   |\n88 |     fn weight(&self_r: f64) -> f64 {\n   |               ^^^^^^^  --- expected due to this\n   |               |\n   |               expected `f64`, found `&_`\n   |\n   = note:   expected type `f64`\n           found reference `&_`\nhelp: to take parameter `self_r` by reference, move `&` to the type\n   |\n88 -     fn weight(&self_r: f64) -> f64 {\n88 +     fn weight(self_r: &f64) -> f64 {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"  expected type `f64`\nfound reference `&_`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"to take parameter `self_r` by reference, move `&` to the type","rendered":null,"spans":[{"byte_end":2505,"byte_start":2504,"column_end":16,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":15,"text":"    fn weight(&self_r: f64) -> f64 {"}]},{"byte_end":2513,"byte_start":2513,"column_end":24,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":24,"highlight_start":24,"text":"    fn weight(&self_r: f64) -> f64 {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":2511,"byte_start":2504,"column_end":22,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":"expected `f64`, found `&_`","line_end":88,"line_start":88,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":15,"text":"    fn weight(&self_r: f64) -> f64 {"}]},{"byte_end":2516,"byte_start":2513,"column_end":27,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":false,"label":"expected due to this","line_end":88,"line_start":88,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":24,"text":"    fn weight(&self_r: f64) -> f64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> scirs2-optimize/src/least_squares/robust.rs:92:26\n   |\n92 |     fn weight_derivative(&self_r: f64) -> f64 {\n   |                          ^^^^^^^  --- expected due to this\n   |                          |\n   |                          expected `f64`, found `&_`\n   |\n   = note:   expected type `f64`\n           found reference `&_`\nhelp: to take parameter `self_r` by reference, move `&` to the type\n   |\n92 -     fn weight_derivative(&self_r: f64) -> f64 {\n92 +     fn weight_derivative(self_r: &f64) -> f64 {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"  expected type `f64`\nfound reference `&_`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"to take parameter `self_r` by reference, move `&` to the type","rendered":null,"spans":[{"byte_end":2572,"byte_start":2571,"column_end":27,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":null,"line_end":92,"line_start":92,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":26,"text":"    fn weight_derivative(&self_r: f64) -> f64 {"}]},{"byte_end":2580,"byte_start":2580,"column_end":35,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":null,"line_end":92,"line_start":92,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":35,"text":"    fn weight_derivative(&self_r: f64) -> f64 {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":2578,"byte_start":2571,"column_end":33,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":"expected `f64`, found `&_`","line_end":92,"line_start":92,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":26,"text":"    fn weight_derivative(&self_r: f64) -> f64 {"}]},{"byte_end":2583,"byte_start":2580,"column_end":38,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":false,"label":"expected due to this","line_end":92,"line_start":92,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":35,"text":"    fn weight_derivative(&self_r: f64) -> f64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `HuberLoss` has no field named `_delta`\n   --> scirs2-optimize/src/least_squares/robust.rs:113:21\n    |\n113 |         HuberLoss { _delta }\n    |                     ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n113 -         HuberLoss { _delta }\n113 +         HuberLoss { delta }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3222,"byte_start":3216,"column_end":27,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"delta","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":21,"text":"        HuberLoss { _delta }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `HuberLoss` has no field named `_delta`","spans":[{"byte_end":3222,"byte_start":3216,"column_end":27,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/robust.rs","is_primary":true,"label":"unknown field","line_end":113,"line_start":113,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":21,"text":"        HuberLoss { _delta }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `least_squares::sparse::SparseMatrix` has no field named `_nrows`\n  --> scirs2-optimize/src/least_squares/sparse.rs:33:13\n   |\n33 |             _nrows,\n   |             ^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n33 -             _nrows,\n33 +             nrows,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":1110,"byte_start":1104,"column_end":19,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/sparse.rs","is_primary":true,"label":null,"line_end":33,"line_start":33,"suggested_replacement":"nrows","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":19,"highlight_start":13,"text":"            _nrows,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `least_squares::sparse::SparseMatrix` has no field named `_nrows`","spans":[{"byte_end":1110,"byte_start":1104,"column_end":19,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/least_squares/sparse.rs","is_primary":true,"label":"unknown field","line_end":33,"line_start":33,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":13,"text":"            _nrows,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `neural_integration::NeuralOptimizer<F>` has no field named `_method`\n   --> scirs2-optimize/src/neural_integration.rs:124:13\n    |\n124 |             _method,\n    |             ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n124 -             _method,\n124 +             method,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3803,"byte_start":3796,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neural_integration.rs","is_primary":true,"label":null,"line_end":124,"line_start":124,"suggested_replacement":"method","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _method,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `neural_integration::NeuralOptimizer<F>` has no field named `_method`","spans":[{"byte_end":3803,"byte_start":3796,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neural_integration.rs","is_primary":true,"label":"unknown field","line_end":124,"line_start":124,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _method,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `NeuralTrainer<F>` has no field named `_optimizer`\n   --> scirs2-optimize/src/neural_integration.rs:418:13\n    |\n418 |             _optimizer,\n    |             ^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n418 -             _optimizer,\n418 +             optimizer,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":14518,"byte_start":14508,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neural_integration.rs","is_primary":true,"label":null,"line_end":418,"line_start":418,"suggested_replacement":"optimizer","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":13,"text":"            _optimizer,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `NeuralTrainer<F>` has no field named `_optimizer`","spans":[{"byte_end":14518,"byte_start":14508,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neural_integration.rs","is_primary":true,"label":"unknown field","line_end":418,"line_start":418,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":13,"text":"            _optimizer,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`\n  --> scirs2-optimize/src/neuromorphic/liquid_state_machines.rs:65:13\n   |\n65 |         let mut new_state = Array1::zeros(self.reservoir_size);\n   |             ^^^^^^^^^^^^^\n...\n83 |             new_state[i] = new_state[i].tanh();\n   |                            ------------ type must be known at this point\n   |\nhelp: consider giving `new_state` an explicit type, where the type for type parameter `A` is specified\n   |\n65 |         let mut new_state: ArrayBase<OwnedRepr<A>, _> = Array1::zeros(self.reservoir_size);\n   |                          ++++++++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving `new_state` an explicit type, where the type for type parameter `A` is specified","rendered":null,"spans":[{"byte_end":2077,"byte_start":2077,"column_end":26,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/liquid_state_machines.rs","is_primary":true,"label":null,"line_end":65,"line_start":65,"suggested_replacement":": ArrayBase<OwnedRepr<A>, _>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":26,"highlight_start":26,"text":"        let mut new_state = Array1::zeros(self.reservoir_size);"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`","spans":[{"byte_end":2704,"byte_start":2692,"column_end":40,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/liquid_state_machines.rs","is_primary":false,"label":"type must be known at this point","line_end":83,"line_start":83,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":28,"text":"            new_state[i] = new_state[i].tanh();"}]},{"byte_end":2077,"byte_start":2064,"column_end":26,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/liquid_state_machines.rs","is_primary":true,"label":null,"line_end":65,"line_start":65,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":13,"text":"        let mut new_state = Array1::zeros(self.reservoir_size);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `Memristor` has no field named `_params`\n   --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:101:13\n    |\n101 |             _params,\n    |             ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n101 -             _params,\n101 +             params,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3202,"byte_start":3195,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"params","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _params,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `Memristor` has no field named `_params`","spans":[{"byte_end":3202,"byte_start":3195,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"unknown field","line_end":101,"line_start":101,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _params,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `simd_dot_product` found for type `f64` in the current scope\n   --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:397:28\n    |\n397 |                 sum = f64::simd_dot_product(&g_array.view(), input);\n    |                            ^^^^^^^^^^^^^^^^ function or associated item not found in `f64`\n    |\nhelp: there is an associated function `simd_dot` with a similar name\n    |\n397 -                 sum = f64::simd_dot_product(&g_array.view(), input);\n397 +                 sum = f64::simd_dot(&g_array.view(), input);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is an associated function `simd_dot` with a similar name","rendered":null,"spans":[{"byte_end":13345,"byte_start":13329,"column_end":44,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":397,"line_start":397,"suggested_replacement":"simd_dot","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":44,"highlight_start":28,"text":"                sum = f64::simd_dot_product(&g_array.view(), input);"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `simd_dot_product` found for type `f64` in the current scope","spans":[{"byte_end":13345,"byte_start":13329,"column_end":44,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"function or associated item not found in `f64`","line_end":397,"line_start":397,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":28,"text":"                sum = f64::simd_dot_product(&g_array.view(), input);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `_nit` on type `&mut MemristiveOptimizer`\n   --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:666:18\n    |\n666 |             self._nit += 1;\n    |                  ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n666 -             self._nit += 1;\n666 +             self.nit += 1;\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":22215,"byte_start":22211,"column_end":22,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":666,"line_start":666,"suggested_replacement":"nit","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":22,"highlight_start":18,"text":"            self._nit += 1;"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `_nit` on type `&mut MemristiveOptimizer`","spans":[{"byte_end":22215,"byte_start":22211,"column_end":22,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"unknown field","line_end":666,"line_start":666,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":18,"text":"            self._nit += 1;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `_nit` on type `&mut MemristiveOptimizer`\n   --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:678:23\n    |\n678 |             nit: self._nit,\n    |                       ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n678 -             nit: self._nit,\n678 +             nit: self.nit,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":22574,"byte_start":22570,"column_end":27,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":678,"line_start":678,"suggested_replacement":"nit","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":23,"text":"            nit: self._nit,"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `_nit` on type `&mut MemristiveOptimizer`","spans":[{"byte_end":22574,"byte_start":22570,"column_end":27,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"unknown field","line_end":678,"line_start":678,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":23,"text":"            nit: self._nit,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0063]: missing fields `constr`, `hess`, `jac` and 5 other fields in initializer of `OptimizeResults<f64>`\n   --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:674:12\n    |\n674 |         Ok(OptimizeResults::<f64> {\n    |            ^^^^^^^^^^^^^^^^^^^^^^ missing `constr`, `hess`, `jac` and 5 other fields\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","message":"missing fields `constr`, `hess`, `jac` and 5 other fields in initializer of `OptimizeResults<f64>`","spans":[{"byte_end":22413,"byte_start":22391,"column_end":34,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"missing `constr`, `hess`, `jac` and 5 other fields","line_end":674,"line_start":674,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":12,"text":"        Ok(OptimizeResults::<f64> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0631]: type mismatch in function arguments\n    --> scirs2-optimize/src/neuromorphic/memristive_optimization.rs:709:61\n     |\n709  |         let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);\n     |                                                   ----      ^^^^^^^^\n     |                                                   |         |\n     |                                                   |         expected due to this\n     |                                                   |         found signature defined here\n     |                                                   required by a bound introduced by this call\n     |\n     = note: expected function signature `fn(_, &_) -> _`\n                found function signature `fn(_, _) -> _`\nnote: required by a bound in `ndarray::impl_methods::<impl ArrayBase<S, D>>::fold`\n    --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_methods.rs:2693:12\n     |\n2691 |     pub fn fold<'a, F, B>(&'a self, init: B, f: F) -> B\n     |            ---- required by a bound in this associated function\n2692 |     where\n2693 |         F: FnMut(B, &'a A) -> B,\n     |            ^^^^^^^^^^^^^^^^^^^^ required by this bound in `ndarray::impl_methods::<impl ArrayBase<S, D>>::fold`\nhelp: consider wrapping the function in a closure\n     |\n709  |         let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, |arg0: f64, other: &f64| f64::max(arg0, *other));\n     |                                                             ++++++++++++++++++++++++         ++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected function signature `fn(_, &_) -> _`\n   found function signature `fn(_, _) -> _`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `ndarray::impl_methods::<impl ArrayBase<S, D>>::fold`","rendered":null,"spans":[{"byte_end":94217,"byte_start":94213,"column_end":16,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_methods.rs","is_primary":false,"label":"required by a bound in this associated function","line_end":2691,"line_start":2691,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":12,"text":"    pub fn fold<'a, F, B>(&'a self, init: B, f: F) -> B"}]},{"byte_end":94299,"byte_start":94279,"column_end":32,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_methods.rs","is_primary":true,"label":"required by this bound in `ndarray::impl_methods::<impl ArrayBase<S, D>>::fold`","line_end":2693,"line_start":2693,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":12,"text":"        F: FnMut(B, &'a A) -> B,"}]}]},{"children":[],"code":null,"level":"help","message":"consider wrapping the function in a closure","rendered":null,"spans":[{"byte_end":23621,"byte_start":23621,"column_end":61,"column_start":61,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":709,"line_start":709,"suggested_replacement":"|arg0: f64, other: &f64| ","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":61,"highlight_start":61,"text":"        let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);"}]},{"byte_end":23629,"byte_start":23629,"column_end":69,"column_start":69,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":null,"line_end":709,"line_start":709,"suggested_replacement":"(arg0, *other)","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":69,"highlight_start":69,"text":"        let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);"}]}]}],"code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","message":"type mismatch in function arguments","spans":[{"byte_end":23629,"byte_start":23621,"column_end":69,"column_start":61,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"expected due to this","line_end":709,"line_start":709,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":61,"text":"        let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);"}]},{"byte_end":23629,"byte_start":23621,"column_end":69,"column_start":61,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":true,"label":"found signature defined here","line_end":709,"line_start":709,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":61,"text":"        let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);"}]},{"byte_end":23615,"byte_start":23611,"column_end":55,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/memristive_optimization.rs","is_primary":false,"label":"required by a bound introduced by this call","line_end":709,"line_start":709,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":51,"text":"        let max_grad = gradient.mapv(|x| x.abs()).fold(0.0, f64::max);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `_state` on type `&mut NeuralODE`\n  --> scirs2-optimize/src/neuromorphic/neural_ode_optimization.rs:73:14\n   |\n73 |         self._state = initial_state.to_owned();\n   |              ^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n73 -         self._state = initial_state.to_owned();\n73 +         self.state = initial_state.to_owned();\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":2118,"byte_start":2112,"column_end":20,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/neural_ode_optimization.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":"state","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":14,"text":"        self._state = initial_state.to_owned();"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `_state` on type `&mut NeuralODE`","spans":[{"byte_end":2118,"byte_start":2112,"column_end":20,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/neural_ode_optimization.rs","is_primary":true,"label":"unknown field","line_end":73,"line_start":73,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":14,"text":"        self._state = initial_state.to_owned();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `Synapse` has no field named `_source`\n   --> scirs2-optimize/src/neuromorphic/spiking_networks.rs:140:13\n    |\n140 |             _source,\n    |             ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n140 -             _source,\n140 +             source,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":4373,"byte_start":4366,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/spiking_networks.rs","is_primary":true,"label":null,"line_end":140,"line_start":140,"suggested_replacement":"source","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _source,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `Synapse` has no field named `_source`","spans":[{"byte_end":4373,"byte_start":4366,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/spiking_networks.rs","is_primary":true,"label":"unknown field","line_end":140,"line_start":140,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _source,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `SpikingNeuralNetwork` has no field named `_config`\n   --> scirs2-optimize/src/neuromorphic/spiking_networks.rs:236:13\n    |\n236 |             _config,\n    |             ^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n236 -             _config,\n236 +             config,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":7453,"byte_start":7446,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/spiking_networks.rs","is_primary":true,"label":null,"line_end":236,"line_start":236,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `SpikingNeuralNetwork` has no field named `_config`","spans":[{"byte_end":7453,"byte_start":7446,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/spiking_networks.rs","is_primary":true,"label":"unknown field","line_end":236,"line_start":236,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `AdvancedAdvancedSTDP` has no field named `_eta_ltp`\n   --> scirs2-optimize/src/neuromorphic/stdp_learning.rs:108:13\n    |\n108 |             _eta_ltp,\n    |             ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n108 -             _eta_ltp,\n108 +             eta_ltp,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3207,"byte_start":3199,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":108,"line_start":108,"suggested_replacement":"eta_ltp","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _eta_ltp,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `AdvancedAdvancedSTDP` has no field named `_eta_ltp`","spans":[{"byte_end":3207,"byte_start":3199,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":"unknown field","line_end":108,"line_start":108,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _eta_ltp,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `STDPLearningRule` has no field named `_learning_rate`\n   --> scirs2-optimize/src/neuromorphic/stdp_learning.rs:393:13\n    |\n393 |             _learning_rate,\n    |             ^^^^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n393 -             _learning_rate,\n393 +             learning_rate,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":12937,"byte_start":12923,"column_end":27,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":393,"line_start":393,"suggested_replacement":"learning_rate","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":13,"text":"            _learning_rate,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `STDPLearningRule` has no field named `_learning_rate`","spans":[{"byte_end":12937,"byte_start":12923,"column_end":27,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":"unknown field","line_end":393,"line_start":393,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":13,"text":"            _learning_rate,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `_nit` on type `&mut AdvancedSTDPNetwork`\n   --> scirs2-optimize/src/neuromorphic/stdp_learning.rs:601:18\n    |\n601 |             self._nit = iteration + 1;\n    |                  ^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n601 -             self._nit = iteration + 1;\n601 +             self.nit = iteration + 1;\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":19403,"byte_start":19399,"column_end":22,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":"nit","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":22,"highlight_start":18,"text":"            self._nit = iteration + 1;"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `_nit` on type `&mut AdvancedSTDPNetwork`","spans":[{"byte_end":19403,"byte_start":19399,"column_end":22,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":"unknown field","line_end":601,"line_start":601,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":18,"text":"            self._nit = iteration + 1;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `NeuromorphicNetwork` has no field named `_parameters`\n   --> scirs2-optimize/src/neuromorphic/mod.rs:202:13\n    |\n202 |             _parameters: Array1::zeros(num_parameters),\n    |             ^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n202 -             _parameters: Array1::zeros(num_parameters),\n202 +             parameters: Array1::zeros(num_parameters),\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":6656,"byte_start":6645,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"parameters","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: Array1::zeros(num_parameters),"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `NeuromorphicNetwork` has no field named `_parameters`","spans":[{"byte_end":6656,"byte_start":6645,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":"unknown field","line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: Array1::zeros(num_parameters),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/neuromorphic/mod.rs:286:37\n    |\n286 |                 && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)\n    |                                     ^^^^^^^^^^^^^-------------------------------------------------- argument #2 of type `f64` is missing\n    |\nnote: expected `f64`, found `Range<f64>`\n   --> scirs2-optimize/src/neuromorphic/mod.rs:286:51\n    |\n286 |                 && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected type `f64`\n             found struct `std::ops::Range<f64>`\nnote: method defined here\n   --> scirs2-optimize/src/neuromorphic/mod.rs:129:12\n    |\n129 |     pub fn is_refractory(&self, current_time: f64, refractory_period: f64) -> bool {\n    |            ^^^^^^^^^^^^^        -----------------  ----------------------\nhelp: remove the unnecessary `.` operator for a floating point literal\n    |\n286 -                 && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)\n286 +                 && !self.neurons[i].is_refractory(self.current_time.self.config.refractory_period)\n    |\nhelp: provide the argument\n    |\n286 -                 && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)\n286 +                 && !self.neurons[i].is_refractory(/* f64 */, /* f64 */)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `f64`, found `Range<f64>`","rendered":null,"spans":[{"byte_end":9829,"byte_start":9781,"column_end":99,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":51,"text":"                && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)"}]}]},{"children":[],"code":null,"level":"note","message":"expected type `f64`\n found struct `std::ops::Range<f64>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":4246,"byte_start":4229,"column_end":50,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":false,"label":"","line_end":129,"line_start":129,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":33,"text":"    pub fn is_refractory(&self, current_time: f64, refractory_period: f64) -> bool {"}]},{"byte_end":4270,"byte_start":4248,"column_end":74,"column_start":52,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":false,"label":"","line_end":129,"line_start":129,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":52,"text":"    pub fn is_refractory(&self, current_time: f64, refractory_period: f64) -> bool {"}]},{"byte_end":4221,"byte_start":4208,"column_end":25,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":129,"line_start":129,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":12,"text":"    pub fn is_refractory(&self, current_time: f64, refractory_period: f64) -> bool {"}]}]},{"children":[],"code":null,"level":"help","message":"remove the unnecessary `.` operator for a floating point literal","rendered":null,"spans":[{"byte_end":9800,"byte_start":9798,"column_end":70,"column_start":68,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":".","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":70,"highlight_start":68,"text":"                && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":9830,"byte_start":9780,"column_end":100,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"(/* f64 */, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":100,"highlight_start":50,"text":"                && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":9830,"byte_start":9780,"column_end":100,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":false,"label":"argument #2 of type `f64` is missing","line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":50,"text":"                && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)"}]},{"byte_end":9780,"byte_start":9767,"column_end":50,"column_start":37,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":37,"text":"                && !self.neurons[i].is_refractory(self.current_time..self.config.refractory_period)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `ParallelMultiStart<F>` has no field named `_objective`\n   --> scirs2-optimize/src/parallel/mod.rs:186:13\n    |\n186 |             _objective,\n    |             ^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n186 -             _objective,\n186 +             objective,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":5221,"byte_start":5211,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/parallel/mod.rs","is_primary":true,"label":null,"line_end":186,"line_start":186,"suggested_replacement":"objective","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":13,"text":"            _objective,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `ParallelMultiStart<F>` has no field named `_objective`","spans":[{"byte_end":5221,"byte_start":5211,"column_end":23,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/parallel/mod.rs","is_primary":true,"label":"unknown field","line_end":186,"line_start":186,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":13,"text":"            _objective,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/quantum_inspired.rs:106:13\n    |\n106 |             Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))\n    |             ^^^^^^^^^^^^-------------------------------------------------------------------- argument #2 of type `f64` is missing\n    |\nnote: expected `f64`, found `Range<{float}>`\n   --> scirs2-optimize/src/quantum_inspired.rs:106:26\n    |\n106 |             Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected type `f64`\n             found struct `std::ops::Range<{float}>`\nnote: associated function defined here\n   --> scirs2-optimize/src/quantum_inspired.rs:27:12\n    |\n27  |     pub fn new(_real: f64, imag: f64) -> Self {\n    |            ^^^ ----------  ---------\nhelp: remove the unnecessary `.` operator for a floating point literal\n    |\n106 -             Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))\n106 +             Complex::new(rand::rng().gen_range(-1.0..1.0).rand::rng().gen_range(-1.0..1.0))\n    |\nhelp: provide the argument\n    |\n106 -             Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))\n106 +             Complex::new(/* f64 */, /* f64 */)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `f64`, found `Range<{float}>`","rendered":null,"spans":[{"byte_end":3101,"byte_start":3035,"column_end":92,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":92,"highlight_start":26,"text":"            Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))"}]}]},{"children":[],"code":null,"level":"note","message":"expected type `f64`\n found struct `std::ops::Range<{float}>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":880,"byte_start":870,"column_end":26,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":16,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]},{"byte_end":891,"byte_start":882,"column_end":37,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":28,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]},{"byte_end":869,"byte_start":866,"column_end":15,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":12,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]}]},{"children":[],"code":null,"level":"help","message":"remove the unnecessary `.` operator for a floating point literal","rendered":null,"spans":[{"byte_end":3069,"byte_start":3067,"column_end":60,"column_start":58,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":".","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":60,"highlight_start":58,"text":"            Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":3102,"byte_start":3034,"column_end":93,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":"(/* f64 */, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":93,"highlight_start":25,"text":"            Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this function takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":3102,"byte_start":3034,"column_end":93,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"argument #2 of type `f64` is missing","line_end":106,"line_start":106,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":93,"highlight_start":25,"text":"            Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))"}]},{"byte_end":3034,"byte_start":3022,"column_end":25,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":13,"text":"            Complex::new(rand::rng().gen_range(-1.0..1.0)..rand::rng().gen_range(-1.0..1.0))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0271]: type mismatch resolving `<Range<usize> as ShapeBuilder>::Dim == Dim<[usize; 2]>`\n   --> scirs2-optimize/src/quantum_inspired.rs:120:50\n    |\n120 |         let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {\n    |                            --------------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Dim<[usize; 2]>`, found `Range<usize>`\n    |                            |\n    |                            required by a bound introduced by this call\n    |\n    = note: expected struct `Dim<[usize; 2]>`\n               found struct `std::ops::Range<usize>`\nnote: required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs:410:26\n    |\n408 |     pub fn from_shape_fn<Sh, F>(shape: Sh, f: F) -> Self\n    |            ------------- required by a bound in this associated function\n409 |     where\n410 |         Sh: ShapeBuilder<Dim = D>,\n    |                          ^^^^^^^ required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected struct `Dim<[usize; 2]>`\n   found struct `std::ops::Range<usize>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`","rendered":null,"spans":[{"byte_end":13092,"byte_start":13079,"column_end":25,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":false,"label":"required by a bound in this associated function","line_end":408,"line_start":408,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":12,"text":"    pub fn from_shape_fn<Sh, F>(shape: Sh, f: F) -> Self"}]},{"byte_end":13167,"byte_start":13160,"column_end":33,"column_start":26,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":true,"label":"required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`","line_end":410,"line_start":410,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":26,"text":"        Sh: ShapeBuilder<Dim = D>,"}]}]}],"code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","message":"type mismatch resolving `<Range<usize> as ShapeBuilder>::Dim == Dim<[usize; 2]>`","spans":[{"byte_end":3508,"byte_start":3480,"column_end":78,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"expected `Dim<[usize; 2]>`, found `Range<usize>`","line_end":120,"line_start":120,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":50,"text":"        let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {"}]},{"byte_end":3479,"byte_start":3458,"column_end":49,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"required by a bound introduced by this call","line_end":120,"line_start":120,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":28,"text":"        let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `std::ops::Range<usize>: ShapeBuilder` is not satisfied\n   --> scirs2-optimize/src/quantum_inspired.rs:120:50\n    |\n120 |         let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {\n    |                            --------------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ndarray::Dimension` is not implemented for `std::ops::Range<usize>`\n    |                            |\n    |                            required by a bound introduced by this call\n    |\n    = help: the following other types implement trait `ndarray::Dimension`:\n              Dim<IxDynImpl>\n              Dim<[usize; 0]>\n              Dim<[usize; 1]>\n              Dim<[usize; 2]>\n              Dim<[usize; 3]>\n              Dim<[usize; 4]>\n              Dim<[usize; 5]>\n              Dim<[usize; 6]>\n    = note: required for `std::ops::Range<usize>` to implement `IntoDimension`\n    = note: required for `std::ops::Range<usize>` to implement `ShapeBuilder`\nnote: required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs:410:13\n    |\n408 |     pub fn from_shape_fn<Sh, F>(shape: Sh, f: F) -> Self\n    |            ------------- required by a bound in this associated function\n409 |     where\n410 |         Sh: ShapeBuilder<Dim = D>,\n    |             ^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `ndarray::Dimension`:\n  Dim<IxDynImpl>\n  Dim<[usize; 0]>\n  Dim<[usize; 1]>\n  Dim<[usize; 2]>\n  Dim<[usize; 3]>\n  Dim<[usize; 4]>\n  Dim<[usize; 5]>\n  Dim<[usize; 6]>","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::ops::Range<usize>` to implement `IntoDimension`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::ops::Range<usize>` to implement `ShapeBuilder`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`","rendered":null,"spans":[{"byte_end":13092,"byte_start":13079,"column_end":25,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":false,"label":"required by a bound in this associated function","line_end":408,"line_start":408,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":12,"text":"    pub fn from_shape_fn<Sh, F>(shape: Sh, f: F) -> Self"}]},{"byte_end":13168,"byte_start":13147,"column_end":34,"column_start":13,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":true,"label":"required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::from_shape_fn`","line_end":410,"line_start":410,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":13,"text":"        Sh: ShapeBuilder<Dim = D>,"}]}]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `std::ops::Range<usize>: ShapeBuilder` is not satisfied","spans":[{"byte_end":3508,"byte_start":3480,"column_end":78,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"the trait `ndarray::Dimension` is not implemented for `std::ops::Range<usize>`","line_end":120,"line_start":120,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":50,"text":"        let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {"}]},{"byte_end":3479,"byte_start":3458,"column_end":49,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"required by a bound introduced by this call","line_end":120,"line_start":120,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":28,"text":"        let basis_states = Array2::from_shape_fn((actual_states.._num_params), |_| {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/quantum_inspired.rs:286:27\n    |\n286 |             *amp = *amp + Complex::new(noise_real..noise_imag);\n    |                           ^^^^^^^^^^^^------------------------ argument #2 of type `f64` is missing\n    |\nnote: expected `f64`, found `Range<f64>`\n   --> scirs2-optimize/src/quantum_inspired.rs:286:40\n    |\n286 |             *amp = *amp + Complex::new(noise_real..noise_imag);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected type `f64`\n             found struct `std::ops::Range<f64>`\nnote: associated function defined here\n   --> scirs2-optimize/src/quantum_inspired.rs:27:12\n    |\n27  |     pub fn new(_real: f64, imag: f64) -> Self {\n    |            ^^^ ----------  ---------\nhelp: remove the unnecessary `.` operator for a floating point literal\n    |\n286 -             *amp = *amp + Complex::new(noise_real..noise_imag);\n286 +             *amp = *amp + Complex::new(noise_real.noise_imag);\n    |\nhelp: provide the argument\n    |\n286 -             *amp = *amp + Complex::new(noise_real..noise_imag);\n286 +             *amp = *amp + Complex::new(/* f64 */, /* f64 */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `f64`, found `Range<f64>`","rendered":null,"spans":[{"byte_end":9239,"byte_start":9217,"column_end":62,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":40,"text":"            *amp = *amp + Complex::new(noise_real..noise_imag);"}]}]},{"children":[],"code":null,"level":"note","message":"expected type `f64`\n found struct `std::ops::Range<f64>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":880,"byte_start":870,"column_end":26,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":16,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]},{"byte_end":891,"byte_start":882,"column_end":37,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":28,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]},{"byte_end":869,"byte_start":866,"column_end":15,"column_start":12,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":12,"text":"    pub fn new(_real: f64, imag: f64) -> Self {"}]}]},{"children":[],"code":null,"level":"help","message":"remove the unnecessary `.` operator for a floating point literal","rendered":null,"spans":[{"byte_end":9229,"byte_start":9227,"column_end":52,"column_start":50,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":".","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":52,"highlight_start":50,"text":"            *amp = *amp + Complex::new(noise_real..noise_imag);"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":9240,"byte_start":9216,"column_end":63,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"(/* f64 */, /* f64 */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":63,"highlight_start":39,"text":"            *amp = *amp + Complex::new(noise_real..noise_imag);"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this function takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":9240,"byte_start":9216,"column_end":63,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"argument #2 of type `f64` is missing","line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":39,"text":"            *amp = *amp + Complex::new(noise_real..noise_imag);"}]},{"byte_end":9216,"byte_start":9204,"column_end":39,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":27,"text":"            *amp = *amp + Complex::new(noise_real..noise_imag);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied\n   --> scirs2-optimize/src/quantum_inspired.rs:336:35\n    |\n336 |                 self.basis_states[[i..j]] += perturbation;\n    |                                   ^^^^^^ the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`\n    |\n    = help: the following other types implement trait `NdIndex<E>`:\n              `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n              `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n              `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n              `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n              `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n              `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n              `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n              `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n              `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`\n    = note: required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `NdIndex<E>`:\n  `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n  `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n  `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n  `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n  `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n  `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n  `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n  `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n  `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied","spans":[{"byte_end":11179,"byte_start":11173,"column_end":41,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`","line_end":336,"line_start":336,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":35,"text":"                self.basis_states[[i..j]] += perturbation;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied\n   --> scirs2-optimize/src/quantum_inspired.rs:366:35\n    |\n366 |                 self.basis_states[[source_state..j]] += tunnel_distance;\n    |                                   ^^^^^^^^^^^^^^^^^ the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`\n    |\n    = help: the following other types implement trait `NdIndex<E>`:\n              `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n              `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n              `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n              `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n              `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n              `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n              `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n              `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n              `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`\n    = note: required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `NdIndex<E>`:\n  `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n  `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n  `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n  `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n  `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n  `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n  `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n  `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n  `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied","spans":[{"byte_end":12254,"byte_start":12237,"column_end":52,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`","line_end":366,"line_start":366,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":35,"text":"                self.basis_states[[source_state..j]] += tunnel_distance;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/quantum_inspired.rs:547:69\n    |\n547 |                 self.compute_finite_difference_gradient(&objective, &candidate_params)?;\n    |                      ----------------------------------             ^^^^^^^^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                      |\n    |                      arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/quantum_inspired.rs:618:8\n    |\n618 |     fn compute_finite_difference_gradient<F>(\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n621 |         params: &ArrayView1<f64>,\n    |         ------------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":21270,"byte_start":21246,"column_end":33,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":621,"line_start":621,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":9,"text":"        params: &ArrayView1<f64>,"}]},{"byte_end":21195,"byte_start":21161,"column_end":42,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":618,"line_start":618,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":8,"text":"    fn compute_finite_difference_gradient<F>("}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":18586,"byte_start":18569,"column_end":86,"column_start":69,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":547,"line_start":547,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":69,"text":"                self.compute_finite_difference_gradient(&objective, &candidate_params)?;"}]},{"byte_end":18556,"byte_start":18522,"column_end":56,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":547,"line_start":547,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":22,"text":"                self.compute_finite_difference_gradient(&objective, &candidate_params)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `num_qubits` on type `&mut quantum_inspired::QuantumInspiredOptimizer`\n   --> scirs2-optimize/src/quantum_inspired.rs:606:41\n    |\n606 |             nfev: self.iteration * self.num_qubits, // Iteration count times qubits\n    |                                         ^^^^^^^^^^ unknown field\n    |\nhelp: one of the expressions' fields has a field of the same name\n    |\n606 |             nfev: self.iteration * self.quantum_state.num_qubits, // Iteration count times qubits\n    |                                         ++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"one of the expressions' fields has a field of the same name","rendered":null,"spans":[{"byte_end":20895,"byte_start":20895,"column_end":41,"column_start":41,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":606,"line_start":606,"suggested_replacement":"quantum_state.","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":41,"highlight_start":41,"text":"            nfev: self.iteration * self.num_qubits, // Iteration count times qubits"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `num_qubits` on type `&mut quantum_inspired::QuantumInspiredOptimizer`","spans":[{"byte_end":20905,"byte_start":20895,"column_end":51,"column_start":41,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"unknown field","line_end":606,"line_start":606,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":41,"text":"            nfev: self.iteration * self.num_qubits, // Iteration count times qubits"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/quantum_inspired.rs:768:77\n    |\n768 |                     particle.compute_finite_difference_gradient(&objective, &candidate)?;\n    |                              ----------------------------------             ^^^^^^^^^^ expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`\n    |                              |\n    |                              arguments to this method are incorrect\n    |\n    = note: expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n               found reference `&ArrayBase<OwnedRepr<f64>, _>`\nnote: method defined here\n   --> scirs2-optimize/src/quantum_inspired.rs:618:8\n    |\n618 |     fn compute_finite_difference_gradient<F>(\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n621 |         params: &ArrayView1<f64>,\n    |         ------------------------\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&ArrayBase<ViewRepr<&f64>, _>`\n   found reference `&ArrayBase<OwnedRepr<f64>, _>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":21270,"byte_start":21246,"column_end":33,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"","line_end":621,"line_start":621,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":9,"text":"        params: &ArrayView1<f64>,"}]},{"byte_end":21195,"byte_start":21161,"column_end":42,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":618,"line_start":618,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":8,"text":"    fn compute_finite_difference_gradient<F>("}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":26307,"byte_start":26297,"column_end":87,"column_start":77,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"expected `&ArrayBase<ViewRepr<&f64>, ...>`, found `&ArrayBase<OwnedRepr<f64>, ...>`","line_end":768,"line_start":768,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":77,"text":"                    particle.compute_finite_difference_gradient(&objective, &candidate)?;"}]},{"byte_end":26284,"byte_start":26250,"column_end":64,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":false,"label":"arguments to this method are incorrect","line_end":768,"line_start":768,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":30,"text":"                    particle.compute_finite_difference_gradient(&objective, &candidate)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied\n   --> scirs2-optimize/src/quantum_inspired.rs:777:65\n    |\n777 | ...                   particle.quantum_state.basis_states[[state_idx..i]] = (1.0\n    |                                                           ^^^^^^^^^^^^^^ the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`\n    |\n    = help: the following other types implement trait `NdIndex<E>`:\n              `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n              `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n              `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n              `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n              `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n              `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n              `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n              `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n              `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`\n    = note: required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the following other types implement trait `NdIndex<E>`:\n  `&[usize]` implements `NdIndex<Dim<IxDynImpl>>`\n  `[usize; 0]` implements `NdIndex<Dim<[usize; 0]>>`\n  `[usize; 1]` implements `NdIndex<Dim<[usize; 1]>>`\n  `[usize; 2]` implements `NdIndex<Dim<[usize; 2]>>`\n  `[usize; 3]` implements `NdIndex<Dim<[usize; 3]>>`\n  `[usize; 4]` implements `NdIndex<Dim<[usize; 4]>>`\n  `[usize; 5]` implements `NdIndex<Dim<[usize; 5]>>`\n  `[usize; 6]` implements `NdIndex<Dim<[usize; 6]>>`\n  `[usize; N]` implements `NdIndex<Dim<IxDynImpl>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>` to implement `std::ops::Index<[std::ops::Range<usize>; 1]>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"the trait bound `[std::ops::Range<usize>; 1]: NdIndex<Dim<[usize; 2]>>` is not satisfied","spans":[{"byte_end":26867,"byte_start":26853,"column_end":79,"column_start":65,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":"the trait `NdIndex<Dim<[usize; 2]>>` is not implemented for `[std::ops::Range<usize>; 1]`","line_end":777,"line_start":777,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":65,"text":"                            particle.quantum_state.basis_states[[state_idx..i]] = (1.0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0283]: type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:205:13\n    |\n205 |         let mut hidden_gradient = Array1::zeros(self.hidden_size);\n    |             ^^^^^^^^^^^^^^^^^^^   ------------------------------- type must be known at this point\n    |\n    = note: cannot satisfy `_: Clone`\nnote: required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::zeros`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs:339:12\n    |\n337 |     pub fn zeros<Sh>(shape: Sh) -> Self\n    |            ----- required by a bound in this associated function\n338 |     where\n339 |         A: Clone + Zero,\n    |            ^^^^^ required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::zeros`\nhelp: consider giving `hidden_gradient` an explicit type, where the type for type parameter `A` is specified\n    |\n205 |         let mut hidden_gradient: ArrayBase<OwnedRepr<A>, _> = Array1::zeros(self.hidden_size);\n    |                                ++++++++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"cannot satisfy `_: Clone`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required by a bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::zeros`","rendered":null,"spans":[{"byte_end":10766,"byte_start":10761,"column_end":17,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":false,"label":"required by a bound in this associated function","line_end":337,"line_start":337,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":12,"text":"    pub fn zeros<Sh>(shape: Sh) -> Self"}]},{"byte_end":10816,"byte_start":10811,"column_end":17,"column_start":12,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/impl_constructors.rs","is_primary":true,"label":"required by this bound in `ndarray::impl_constructors::<impl ArrayBase<S, D>>::zeros`","line_end":339,"line_start":339,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":12,"text":"        A: Clone + Zero,"}]}]},{"children":[],"code":null,"level":"help","message":"consider giving `hidden_gradient` an explicit type, where the type for type parameter `A` is specified","rendered":null,"spans":[{"byte_end":6254,"byte_start":6254,"column_end":32,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":": ArrayBase<OwnedRepr<A>, _>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":32,"highlight_start":32,"text":"        let mut hidden_gradient = Array1::zeros(self.hidden_size);"}]}]}],"code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","message":"type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`","spans":[{"byte_end":6288,"byte_start":6257,"column_end":66,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":false,"label":"type must be known at this point","line_end":205,"line_start":205,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":35,"text":"        let mut hidden_gradient = Array1::zeros(self.hidden_size);"}]},{"byte_end":6254,"byte_start":6235,"column_end":32,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":13,"text":"        let mut hidden_gradient = Array1::zeros(self.hidden_size);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0283]: type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:205:13\n    |\n205 |         let mut hidden_gradient = Array1::zeros(self.hidden_size);\n    |             ^^^^^^^^^^^^^^^^^^^\n...\n208 |                 hidden_gradient[j] += output_raw_gradient[i] * self.output_weights[[i, j]];\n    |                                    -- type must be known at this point\n    |\n    = note: multiple `impl`s satisfying `_: AddAssign<f64>` found in the following crates: `core`, `ndarray`, `num_complex`, `zerocopy`:\n            - impl AddAssign for f64;\n            - impl<A, S, D> AddAssign<A> for ArrayBase<S, D>\n              where <S as RawData>::Elem == A, A: ndarray::ScalarOperand, A: AddAssign, S: DataMut, D: ndarray::Dimension;\n            - impl<O> AddAssign<f64> for zerocopy::byteorder::F64<O>\n              where O: zerocopy::byteorder::ByteOrder;\n            - impl<T> AddAssign<T> for num_complex::Complex<T>\n              where T: Clone, T: NumAssign;\nhelp: consider giving `hidden_gradient` an explicit type, where the type for type parameter `A` is specified\n    |\n205 |         let mut hidden_gradient: ArrayBase<OwnedRepr<A>, _> = Array1::zeros(self.hidden_size);\n    |                                ++++++++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"multiple `impl`s satisfying `_: AddAssign<f64>` found in the following crates: `core`, `ndarray`, `num_complex`, `zerocopy`:\n- impl AddAssign for f64;\n- impl<A, S, D> AddAssign<A> for ArrayBase<S, D>\n  where <S as RawData>::Elem == A, A: ndarray::ScalarOperand, A: AddAssign, S: DataMut, D: ndarray::Dimension;\n- impl<O> AddAssign<f64> for zerocopy::byteorder::F64<O>\n  where O: zerocopy::byteorder::ByteOrder;\n- impl<T> AddAssign<T> for num_complex::Complex<T>\n  where T: Clone, T: NumAssign;","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider giving `hidden_gradient` an explicit type, where the type for type parameter `A` is specified","rendered":null,"spans":[{"byte_end":6254,"byte_start":6254,"column_end":32,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":": ArrayBase<OwnedRepr<A>, _>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":32,"highlight_start":32,"text":"        let mut hidden_gradient = Array1::zeros(self.hidden_size);"}]}]}],"code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","message":"type annotations needed for `ArrayBase<OwnedRepr<_>, Dim<[usize; 1]>>`","spans":[{"byte_end":6409,"byte_start":6407,"column_end":38,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":false,"label":"type must be known at this point","line_end":208,"line_start":208,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":36,"text":"                hidden_gradient[j] += output_raw_gradient[i] * self.output_weights[[i, j]];"}]},{"byte_end":6254,"byte_start":6235,"column_end":32,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":null,"line_end":205,"line_start":205,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":13,"text":"        let mut hidden_gradient = Array1::zeros(self.hidden_size);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0283]: type annotations needed\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:225:45\n    |\n225 |                 self.hidden_weights[[i, j]] -= learning_rate * hidden_gradient[i] * input[j];\n    |                                             ^^ cannot infer type\n    |\n    = note: multiple `impl`s satisfying `f64: SubAssign<_>` found in the following crates: `core`, `zerocopy`:\n            - impl SubAssign for f64;\n            - impl SubAssign<&f64> for f64;\n            - impl<O> SubAssign<zerocopy::byteorder::F64<O>> for f64\n              where O: zerocopy::byteorder::ByteOrder;\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"multiple `impl`s satisfying `f64: SubAssign<_>` found in the following crates: `core`, `zerocopy`:\n- impl SubAssign for f64;\n- impl SubAssign<&f64> for f64;\n- impl<O> SubAssign<zerocopy::byteorder::F64<O>> for f64\n  where O: zerocopy::byteorder::ByteOrder;","rendered":null,"spans":[]}],"code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":7122,"byte_start":7120,"column_end":47,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":"cannot infer type","line_end":225,"line_start":225,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":45,"text":"                self.hidden_weights[[i, j]] -= learning_rate * hidden_gradient[i] * input[j];"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0283]: type annotations needed\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:225:83\n    |\n225 |                 self.hidden_weights[[i, j]] -= learning_rate * hidden_gradient[i] * input[j];\n    |                                                                                   ^ cannot infer type\n    |\nnote: multiple `impl`s satisfying `_: std::ops::Mul<f64>` found\n   --> scirs2-optimize/src/automatic_differentiation/dual_numbers.rs:232:1\n    |\n232 | impl Mul<f64> for Dual {\n    | ^^^^^^^^^^^^^^^^^^^^^^\n...\n476 | impl Mul<f64> for MultiDual {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: scirs2-optimize/src/automatic_differentiation/forward_mode.rs:262:1\n    |\n262 | impl std::ops::Mul<f64> for SecondOrderDual {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: scirs2-optimize/src/automatic_differentiation/reverse_mode.rs:471:1\n    |\n471 | impl std::ops::Mul<f64> for ReverseVariable {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: scirs2-optimize/src/quantum_inspired.rs:63:1\n    |\n63  | impl std::ops::Mul<f64> for Complex {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: and more `impl`s found in the following crates: `core`, `scirs2_core`, `wide`:\n            - impl std::ops::Mul for f64;\n            - impl std::ops::Mul<f64> for Angle64;\n            - impl std::ops::Mul<f64> for wide::f64x2_::f64x2;\n            - impl std::ops::Mul<f64> for wide::f64x4_::f64x4;\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"multiple `impl`s satisfying `_: std::ops::Mul<f64>` found","rendered":null,"spans":[{"byte_end":5476,"byte_start":5454,"column_end":23,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/dual_numbers.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":1,"text":"impl Mul<f64> for Dual {"}]},{"byte_end":11053,"byte_start":11026,"column_end":28,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/dual_numbers.rs","is_primary":true,"label":null,"line_end":476,"line_start":476,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":1,"text":"impl Mul<f64> for MultiDual {"}]},{"byte_end":7415,"byte_start":7372,"column_end":44,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/forward_mode.rs","is_primary":true,"label":null,"line_end":262,"line_start":262,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":1,"text":"impl std::ops::Mul<f64> for SecondOrderDual {"}]},{"byte_end":12734,"byte_start":12691,"column_end":44,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/automatic_differentiation/reverse_mode.rs","is_primary":true,"label":null,"line_end":471,"line_start":471,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":1,"text":"impl std::ops::Mul<f64> for ReverseVariable {"}]},{"byte_end":1711,"byte_start":1676,"column_end":36,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/quantum_inspired.rs","is_primary":true,"label":null,"line_end":63,"line_start":63,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":1,"text":"impl std::ops::Mul<f64> for Complex {"}]}]},{"children":[],"code":null,"level":"note","message":"and more `impl`s found in the following crates: `core`, `scirs2_core`, `wide`:\n- impl std::ops::Mul for f64;\n- impl std::ops::Mul<f64> for Angle64;\n- impl std::ops::Mul<f64> for wide::f64x2_::f64x2;\n- impl std::ops::Mul<f64> for wide::f64x4_::f64x4;","rendered":null,"spans":[]}],"code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":7159,"byte_start":7158,"column_end":84,"column_start":83,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":"cannot infer type","line_end":225,"line_start":225,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":83,"text":"                self.hidden_weights[[i, j]] -= learning_rate * hidden_gradient[i] * input[j];"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0283]: type annotations needed\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:227:33\n    |\n227 |             self.hidden_bias[i] -= learning_rate * hidden_gradient[i];\n    |                                 ^^ cannot infer type\n    |\n    = note: multiple `impl`s satisfying `f64: SubAssign<_>` found in the following crates: `core`, `zerocopy`:\n            - impl SubAssign for f64;\n            - impl SubAssign<&f64> for f64;\n            - impl<O> SubAssign<zerocopy::byteorder::F64<O>> for f64\n              where O: zerocopy::byteorder::ByteOrder;\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"multiple `impl`s satisfying `f64: SubAssign<_>` found in the following crates: `core`, `zerocopy`:\n- impl SubAssign for f64;\n- impl SubAssign<&f64> for f64;\n- impl<O> SubAssign<zerocopy::byteorder::F64<O>> for f64\n  where O: zerocopy::byteorder::ByteOrder;","rendered":null,"spans":[]}],"code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":7218,"byte_start":7216,"column_end":35,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":"cannot infer type","line_end":227,"line_start":227,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":33,"text":"            self.hidden_bias[i] -= learning_rate * hidden_gradient[i];"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:450:13\n    |\n450 |         let (_, policy_output) = self.actor.forward(&state_features.view());\n    |             ^^^^^^^^^^^^^^^^^^   ------------------------------------------ this expression has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<..., ...>, ...)`\n    |             |\n    |             expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-1606355436548891076.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-1606355436548891076.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14550,"byte_start":14532,"column_end":31,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":450,"line_start":450,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":13,"text":"        let (_, policy_output) = self.actor.forward(&state_features.view());"}]},{"byte_end":14595,"byte_start":14553,"column_end":76,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<..., ...>, ...)`","line_end":450,"line_start":450,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":34,"text":"        let (_, policy_output) = self.actor.forward(&state_features.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/reinforcement_learning/actor_critic.rs:544:17\n    |\n544 |             let (_, next_value) = self.critic.forward(&next_state_features.view());\n    |                 ^^^^^^^^^^^^^^^   ------------------------------------------------ this expression has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`\n    |                 |\n    |                 expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":17843,"byte_start":17828,"column_end":32,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":544,"line_start":544,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":17,"text":"            let (_, next_value) = self.critic.forward(&next_state_features.view());"}]},{"byte_end":17894,"byte_start":17846,"column_end":83,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/actor_critic.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`","line_end":544,"line_start":544,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":35,"text":"            let (_, next_value) = self.critic.forward(&next_state_features.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `bandit_optimization::BanditOptimizer` has no field named `_num_arms`\n  --> scirs2-optimize/src/reinforcement_learning/bandit_optimization.rs:27:13\n   |\n27 |             _num_arms,\n   |             ^^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n27 -             _num_arms,\n27 +             num_arms,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":718,"byte_start":709,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/bandit_optimization.rs","is_primary":true,"label":null,"line_end":27,"line_start":27,"suggested_replacement":"num_arms","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":22,"highlight_start":13,"text":"            _num_arms,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `bandit_optimization::BanditOptimizer` has no field named `_num_arms`","spans":[{"byte_end":718,"byte_start":709,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/bandit_optimization.rs","is_primary":true,"label":"unknown field","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":13,"text":"            _num_arms,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:69:45\n   |\n69 |                     meta_weights[[layer..i, j]] =\n   |                                             ^ expected `Range<usize>`, found `usize`\n   |\n   = note: expected struct `std::ops::Range<usize>`\n                found type `usize`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected struct `std::ops::Range<usize>`\n     found type `usize`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":2926,"byte_start":2925,"column_end":46,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"expected `Range<usize>`, found `usize`","line_end":69,"line_start":69,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":45,"text":"                    meta_weights[[layer..i, j]] ="}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:192:52\n    |\n192 |                 .insert(problem_class.to_string()..embedding.clone());\n    |                                                    ^^^^^^^^^^-----^^\n    |                                                    |         |\n    |                                                    |         help: try using a conversion method: `to_string`\n    |                                                    expected `String`, found `ArrayBase<OwnedRepr<{float}>, ...>`\n    |\n    = note: expected struct `std::string::String`\n               found struct `ArrayBase<OwnedRepr<{float}>, Dim<[usize; 1]>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected struct `std::string::String`\n   found struct `ArrayBase<OwnedRepr<{float}>, Dim<[usize; 1]>>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try using a conversion method","rendered":null,"spans":[{"byte_end":7457,"byte_start":7452,"column_end":67,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"to_string","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":67,"highlight_start":62,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":7459,"byte_start":7442,"column_end":69,"column_start":52,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"expected `String`, found `ArrayBase<OwnedRepr<{float}>, ...>`","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":52,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:192:18\n    |\n192 |                 .insert(problem_class.to_string()..embedding.clone());\n    |                  ^^^^^^---------------------------------------------- argument #2 of type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>` is missing\n    |\nnote: expected `String`, found `Range<String>`\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:192:25\n    |\n192 |                 .insert(problem_class.to_string()..embedding.clone());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected struct `std::string::String`\n               found struct `std::ops::Range<std::string::String>`\nnote: method defined here\n   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/collections/hash/map.rs:1203:12\nhelp: provide the argument\n    |\n192 -                 .insert(problem_class.to_string()..embedding.clone());\n192 +                 .insert(/* std::string::String */, /* ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `String`, found `Range<String>`","rendered":null,"spans":[{"byte_end":7459,"byte_start":7415,"column_end":69,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":25,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]}]},{"children":[],"code":null,"level":"note","message":"expected struct `std::string::String`\n   found struct `std::ops::Range<std::string::String>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":39767,"byte_start":39761,"column_end":18,"column_start":12,"expansion":null,"file_name":"/rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/collections/hash/map.rs","is_primary":true,"label":null,"line_end":1203,"line_start":1203,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":7460,"byte_start":7414,"column_end":70,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"(/* std::string::String */, /* ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":70,"highlight_start":24,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":7460,"byte_start":7414,"column_end":70,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":false,"label":"argument #2 of type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>` is missing","line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":24,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]},{"byte_end":7414,"byte_start":7408,"column_end":24,"column_start":18,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":18,"text":"                .insert(problem_class.to_string()..embedding.clone());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `MetaExperienceBuffer` has no field named `_max_size`\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:401:13\n    |\n401 |             _max_size,\n    |             ^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n401 -             _max_size,\n401 +             max_size,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":14561,"byte_start":14552,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":401,"line_start":401,"suggested_replacement":"max_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":22,"highlight_start":13,"text":"            _max_size,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `MetaExperienceBuffer` has no field named `_max_size`","spans":[{"byte_end":14561,"byte_start":14552,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"unknown field","line_end":401,"line_start":401,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":13,"text":"            _max_size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `extract_meta_state_features` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:769:51\n    |\n769 |         let (state_features, meta_context) = self.extract_meta_state_features(state, problem_class);\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `extract_meta_state_features` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":28989,"byte_start":28962,"column_end":78,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`","line_end":769,"line_start":769,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":51,"text":"        let (state_features, meta_context) = self.extract_meta_state_features(state, problem_class);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `decode_meta_action` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:773:14\n    |\n773 |         self.decode_meta_action(&policy_output.view(), &meta_output.view())\n    |              ^^^^^^^^^^^^^^^^^^\n    |\nhelp: there is a method `select_action` with a similar name, but with different arguments\n   --> scirs2-optimize/src/reinforcement_learning/mod.rs:159:5\n    |\n159 |     fn select_action(&mut self, state: &OptimizationState) -> OptimizationAction;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `select_action` with a similar name, but with different arguments","rendered":null,"spans":[{"byte_end":5032,"byte_start":4955,"column_end":82,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/mod.rs","is_primary":true,"label":null,"line_end":159,"line_start":159,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":82,"highlight_start":5,"text":"    fn select_action(&mut self, state: &OptimizationState) -> OptimizationAction;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `decode_meta_action` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":29201,"byte_start":29183,"column_end":32,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":773,"line_start":773,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":14,"text":"        self.decode_meta_action(&policy_output.view(), &meta_output.view())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:776:15\n    |\n776 |     fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {\n    |               ^^^^^^^^^^^^^^^^^^^^  ----------- expected due to this\n    |               |\n    |               types differ in mutability\n    |\n    = note:      expected reference `&reinforcement_learning::Experience`\n            found mutable reference `&mut _`\nnote: to declare a mutable parameter use: `mut self_experience`\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:776:15\n    |\n776 |     fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {\n    |               ^^^^^^^^^^^^^^^^^^^^\nhelp: to take parameter `self_experience` by reference, move `&mut` to the type\n    |\n776 -     fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {\n776 +     fn update(self_experience: &mut &Experience) -> Result<(), OptimizeError> {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"     expected reference `&reinforcement_learning::Experience`\nfound mutable reference `&mut _`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"to declare a mutable parameter use: `mut self_experience`","rendered":null,"spans":[{"byte_end":29287,"byte_start":29267,"column_end":35,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":776,"line_start":776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":15,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]}]},{"children":[],"code":null,"level":"help","message":"to take parameter `self_experience` by reference, move `&mut` to the type","rendered":null,"spans":[{"byte_end":29272,"byte_start":29267,"column_end":20,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":776,"line_start":776,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":15,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]},{"byte_end":29289,"byte_start":29289,"column_end":37,"column_start":37,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":null,"line_end":776,"line_start":776,"suggested_replacement":"&mut ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":37,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":29287,"byte_start":29267,"column_end":35,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"types differ in mutability","line_end":776,"line_start":776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":15,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]},{"byte_end":29300,"byte_start":29289,"column_end":48,"column_start":37,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":false,"label":"expected due to this","line_end":776,"line_start":776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":37,"text":"    fn update(&mut self_experience: &Experience) -> Result<(), OptimizeError> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `classify_problem` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:789:34\n    |\n789 |         let problem_class = self.classify_problem(objective, initial_params);\n    |                                  ^^^^^^^^^^^^^^^^ method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `classify_problem` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":29694,"byte_start":29678,"column_end":50,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`","line_end":789,"line_start":789,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":34,"text":"        let problem_class = self.classify_problem(objective, initial_params);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `compute_meta_gradients` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:956:43\n    |\n956 |                 let meta_gradients = self.compute_meta_gradients(&meta_batch);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^ method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `compute_meta_gradients` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":35995,"byte_start":35973,"column_end":65,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`","line_end":956,"line_start":956,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":43,"text":"                let meta_gradients = self.compute_meta_gradients(&meta_batch);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `update_meta_stats` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n   --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:973:26\n    |\n973 |                     self.update_meta_stats(\n    |                     -----^^^^^^^^^^^^^^^^^ method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `update_meta_stats` found for mutable reference `&mut AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":36640,"byte_start":36635,"column_end":26,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":false,"label":"","line_end":973,"line_start":973,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":21,"text":"                    self.update_meta_stats("}]},{"byte_end":36657,"byte_start":36640,"column_end":43,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"method not found in `&mut AdvancedAdvancedPolicyGradientOptimizer`","line_end":973,"line_start":973,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":26,"text":"                    self.update_meta_stats("}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no function or associated item named `new` found for struct `AdvancedAdvancedPolicyGradientOptimizer` in the current scope\n    --> scirs2-optimize/src/reinforcement_learning/policy_gradient.rs:1022:66\n     |\n270  | pub struct AdvancedAdvancedPolicyGradientOptimizer {\n     | -------------------------------------------------- function or associated item `new` not found for this struct\n...\n1022 |     let mut optimizer = AdvancedAdvancedPolicyGradientOptimizer::new(\n     |                                                                  ^^^ function or associated item not found in `AdvancedAdvancedPolicyGradientOptimizer`\n     |\n     = help: items from traits can only be used if the trait is implemented and in scope\n     = note: the following traits define an item `new`, perhaps you need to implement one of them:\n             candidate #1: `DualNumber`\n             candidate #2: `DataOwned`\n             candidate #3: `UniformSampler`\n             candidate #4: `argmin::core::State`\n             candidate #5: `rand::distributions::uniform::UniformSampler`\n             candidate #6: `typenum::marker_traits::Bit`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is implemented and in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the following traits define an item `new`, perhaps you need to implement one of them:\ncandidate #1: `DualNumber`\ncandidate #2: `DataOwned`\ncandidate #3: `UniformSampler`\ncandidate #4: `argmin::core::State`\ncandidate #5: `rand::distributions::uniform::UniformSampler`\ncandidate #6: `typenum::marker_traits::Bit`","rendered":null,"spans":[]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no function or associated item named `new` found for struct `AdvancedAdvancedPolicyGradientOptimizer` in the current scope","spans":[{"byte_end":38289,"byte_start":38286,"column_end":69,"column_start":66,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":true,"label":"function or associated item not found in `AdvancedAdvancedPolicyGradientOptimizer`","line_end":1022,"line_start":1022,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":66,"text":"    let mut optimizer = AdvancedAdvancedPolicyGradientOptimizer::new("}]},{"byte_end":10504,"byte_start":10454,"column_end":51,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/policy_gradient.rs","is_primary":false,"label":"function or associated item `new` not found for this struct","line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":1,"text":"pub struct AdvancedAdvancedPolicyGradientOptimizer {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `q_learning_optimization::QLearningOptimizer` has no field named `_config`\n  --> scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs:34:13\n   |\n34 |             _config,\n   |             ^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n34 -             _config,\n34 +             config,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":1100,"byte_start":1093,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `q_learning_optimization::QLearningOptimizer` has no field named `_config`","spans":[{"byte_end":1100,"byte_start":1093,"column_end":20,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":"unknown field","line_end":34,"line_start":34,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            _config,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs:107:54\n    |\n107 |             let mut best_q = self.get_q_value(state..&best_action);\n    |                                                      ^^^^^^^^^^^^ expected `&OptimizationState`, found `&OptimizationAction`\n    |\n    = note: expected reference `&reinforcement_learning::OptimizationState`\n               found reference `&reinforcement_learning::OptimizationAction`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected reference `&reinforcement_learning::OptimizationState`\n   found reference `&reinforcement_learning::OptimizationAction`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3827,"byte_start":3815,"column_end":66,"column_start":54,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":"expected `&OptimizationState`, found `&OptimizationAction`","line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":54,"text":"            let mut best_q = self.get_q_value(state..&best_action);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this method takes 2 arguments but 1 argument was supplied\n   --> scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs:107:35\n    |\n107 |             let mut best_q = self.get_q_value(state..&best_action);\n    |                                   ^^^^^^^^^^^--------------------- argument #2 of type `&reinforcement_learning::OptimizationAction` is missing\n    |\nnote: expected `&OptimizationState`, found `Range<&OptimizationState>`\n   --> scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs:107:47\n    |\n107 |             let mut best_q = self.get_q_value(state..&best_action);\n    |                                               ^^^^^^^^^^^^^^^^^^^\n    = note: expected reference `&reinforcement_learning::OptimizationState`\n                  found struct `std::ops::Range<&reinforcement_learning::OptimizationState>`\nnote: method defined here\n   --> scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs:60:8\n    |\n60  |     fn get_q_value(&self, state: &OptimizationState, action: &OptimizationAction) -> f64 {\n    |        ^^^^^^^^^^^        -------------------------  ---------------------------\nhelp: provide the argument\n    |\n107 -             let mut best_q = self.get_q_value(state..&best_action);\n107 +             let mut best_q = self.get_q_value(/* &reinforcement_learning::OptimizationState */, /* &reinforcement_learning::OptimizationAction */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `&OptimizationState`, found `Range<&OptimizationState>`","rendered":null,"spans":[{"byte_end":3827,"byte_start":3808,"column_end":66,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":47,"text":"            let mut best_q = self.get_q_value(state..&best_action);"}]}]},{"children":[],"code":null,"level":"note","message":"expected reference `&reinforcement_learning::OptimizationState`\n      found struct `std::ops::Range<&reinforcement_learning::OptimizationState>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"method defined here","rendered":null,"spans":[{"byte_end":2140,"byte_start":2115,"column_end":52,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":false,"label":"","line_end":60,"line_start":60,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":27,"text":"    fn get_q_value(&self, state: &OptimizationState, action: &OptimizationAction) -> f64 {"}]},{"byte_end":2169,"byte_start":2142,"column_end":81,"column_start":54,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":false,"label":"","line_end":60,"line_start":60,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":81,"highlight_start":54,"text":"    fn get_q_value(&self, state: &OptimizationState, action: &OptimizationAction) -> f64 {"}]},{"byte_end":2107,"byte_start":2096,"column_end":19,"column_start":8,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":null,"line_end":60,"line_start":60,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":8,"text":"    fn get_q_value(&self, state: &OptimizationState, action: &OptimizationAction) -> f64 {"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":3828,"byte_start":3807,"column_end":67,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":"(/* &reinforcement_learning::OptimizationState */, /* &reinforcement_learning::OptimizationAction */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":67,"highlight_start":46,"text":"            let mut best_q = self.get_q_value(state..&best_action);"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this method takes 2 arguments but 1 argument was supplied","spans":[{"byte_end":3828,"byte_start":3807,"column_end":67,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":false,"label":"argument #2 of type `&reinforcement_learning::OptimizationAction` is missing","line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":46,"text":"            let mut best_q = self.get_q_value(state..&best_action);"}]},{"byte_end":3807,"byte_start":3796,"column_end":46,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/q_learning_optimization.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":35,"text":"            let mut best_q = self.get_q_value(state..&best_action);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `ExperienceBuffer` has no field named `_max_size`\n   --> scirs2-optimize/src/reinforcement_learning/mod.rs:259:13\n    |\n259 |             _max_size,\n    |             ^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n259 -             _max_size,\n259 +             max_size,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":7755,"byte_start":7746,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/mod.rs","is_primary":true,"label":null,"line_end":259,"line_start":259,"suggested_replacement":"max_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":22,"highlight_start":13,"text":"            _max_size,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `ExperienceBuffer` has no field named `_max_size`","spans":[{"byte_end":7755,"byte_start":7746,"column_end":22,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/reinforcement_learning/mod.rs","is_primary":true,"label":"unknown field","line_end":259,"line_start":259,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":13,"text":"            _max_size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed\n   --> scirs2-optimize/src/roots.rs:979:33\n    |\n979 |         let neg_jtf = jtf.mapv(|x| -x);\n    |                                 ^  -- type must be known at this point\n    |\nhelp: consider giving this closure parameter an explicit type\n    |\n979 |         let neg_jtf = jtf.mapv(|x: /* Type */| -x);\n    |                                  ++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving this closure parameter an explicit type","rendered":null,"spans":[{"byte_end":29378,"byte_start":29378,"column_end":34,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/roots.rs","is_primary":true,"label":null,"line_end":979,"line_start":979,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":34,"highlight_start":34,"text":"        let neg_jtf = jtf.mapv(|x| -x);"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":29382,"byte_start":29380,"column_end":38,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/roots.rs","is_primary":false,"label":"type must be known at this point","line_end":979,"line_start":979,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":36,"text":"        let neg_jtf = jtf.mapv(|x| -x);"}]},{"byte_end":29378,"byte_start":29377,"column_end":34,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/roots.rs","is_primary":true,"label":null,"line_end":979,"line_start":979,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":33,"text":"        let neg_jtf = jtf.mapv(|x| -x);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `_iter` found for struct `ArrayBase` in the current scope\n   --> scirs2-optimize/src/roots_krylov.rs:186:28\n    |\n186 |     let r_norm_initial = r._iter().map(|&ri| ri.powi(2)).sum::<f64>().sqrt();\n    |                            ^^^^^\n    |\nhelp: there is a method `iter` with a similar name\n    |\n186 -     let r_norm_initial = r._iter().map(|&ri| ri.powi(2)).sum::<f64>().sqrt();\n186 +     let r_norm_initial = r.iter().map(|&ri| ri.powi(2)).sum::<f64>().sqrt();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `iter` with a similar name","rendered":null,"spans":[{"byte_end":5974,"byte_start":5969,"column_end":33,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/roots_krylov.rs","is_primary":true,"label":null,"line_end":186,"line_start":186,"suggested_replacement":"iter","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":33,"highlight_start":28,"text":"    let r_norm_initial = r._iter().map(|&ri| ri.powi(2)).sum::<f64>().sqrt();"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `_iter` found for struct `ArrayBase` in the current scope","spans":[{"byte_end":5974,"byte_start":5969,"column_end":33,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/roots_krylov.rs","is_primary":true,"label":null,"line_end":186,"line_start":186,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":28,"text":"    let r_norm_initial = r._iter().map(|&ri| ri.powi(2)).sum::<f64>().sqrt();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `_iter` found for struct `ArrayBase` in the current scope\n   --> scirs2-optimize/src/roots_krylov.rs:229:14\n    |\n228 |           let w_norm = w_regularized\n    |  ______________________-\n229 | |             ._iter()\n    | |_____________-^^^^^\n    |\nhelp: there is a method `iter` with a similar name\n    |\n229 -             ._iter()\n229 +             .iter()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `iter` with a similar name","rendered":null,"spans":[{"byte_end":7366,"byte_start":7361,"column_end":19,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/roots_krylov.rs","is_primary":true,"label":null,"line_end":229,"line_start":229,"suggested_replacement":"iter","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":19,"highlight_start":14,"text":"            ._iter()"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `_iter` found for struct `ArrayBase` in the current scope","spans":[{"byte_end":7361,"byte_start":7334,"column_end":14,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/roots_krylov.rs","is_primary":false,"label":"","line_end":229,"line_start":228,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":22,"text":"        let w_norm = w_regularized"},{"highlight_end":14,"highlight_start":1,"text":"            ._iter()"}]},{"byte_end":7366,"byte_start":7361,"column_end":19,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/roots_krylov.rs","is_primary":true,"label":null,"line_end":229,"line_start":229,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":14,"text":"            ._iter()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/scalar.rs:152:9\n    |\n152 |       let (a_b, c) = if let Some(bracket) = options.bracket {\n    |  _________^^^^^^^^___-\n    | |         |\n    | |         expected a tuple with 3 elements, found one with 2 elements\n153 | |         bracket\n154 | |     } else {\n...   |\n158 | |         bracket_minimum(&_fun, x0, x1)?\n159 | |     };\n    | |_____- this expression has type `(f64, f64, f64)`\n    |\n    = note: expected tuple `(f64, f64, f64)`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(f64, f64, f64)`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":4119,"byte_start":4111,"column_end":17,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":152,"line_start":152,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":9,"text":"    let (a_b, c) = if let Some(bracket) = options.bracket {"}]},{"byte_end":4323,"byte_start":4122,"column_end":6,"column_start":20,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":false,"label":"this expression has type `(f64, f64, f64)`","line_end":159,"line_start":152,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":20,"text":"    let (a_b, c) = if let Some(bracket) = options.bracket {"},{"highlight_end":16,"highlight_start":1,"text":"        bracket"},{"highlight_end":13,"highlight_start":1,"text":"    } else {"},{"highlight_end":42,"highlight_start":1,"text":"        // Use simple bracketing strategy"},{"highlight_end":22,"highlight_start":1,"text":"        let x0 = 0.0;"},{"highlight_end":22,"highlight_start":1,"text":"        let x1 = 1.0;"},{"highlight_end":40,"highlight_start":1,"text":"        bracket_minimum(&_fun, x0, x1)?"},{"highlight_end":6,"highlight_start":1,"text":"    };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `ScalarOptimizeResult` has no field named `x_fun`\n   --> scirs2-optimize/src/scalar.rs:185:17\n    |\n185 |                 x_fun: fx,\n    |                 ^^^^^ `ScalarOptimizeResult` does not have this field\n    |\n    = note: available fields are: `x`, `fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"available fields are: `x`, `fun`","rendered":null,"spans":[]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `ScalarOptimizeResult` has no field named `x_fun`","spans":[{"byte_end":4971,"byte_start":4966,"column_end":22,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":"`ScalarOptimizeResult` does not have this field","line_end":185,"line_start":185,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":17,"text":"                x_fun: fx,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0689]: can't call method `abs` on ambiguous numeric type `{float}`\n   --> scirs2-optimize/src/scalar.rs:194:14\n    |\n194 |         if e.abs() > tol1 {\n    |              ^^^\n    |\nhelp: you must specify a type for this binding, like `f32`\n    |\n173 |     let mut e: f32 = 0.0;\n    |              +++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"you must specify a type for this binding, like `f32`","rendered":null,"spans":[{"byte_end":4616,"byte_start":4616,"column_end":14,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":173,"line_start":173,"suggested_replacement":": f32","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":14,"highlight_start":14,"text":"    let mut e = 0.0;"}]}]}],"code":{"code":"E0689","explanation":"A method was called on an ambiguous numeric type.\n\nErroneous code example:\n\n```compile_fail,E0689\n2.0.neg(); // error!\n```\n\nThis error indicates that the numeric value for the method being passed exists\nbut the type of the numeric value or binding could not be identified.\n\nThe error happens on numeric literals and on numeric bindings without an\nidentified concrete type:\n\n```compile_fail,E0689\nlet x = 2.0;\nx.neg();  // same error as above\n```\n\nBecause of this, you must give the numeric literal or binding a type:\n\n```\nuse std::ops::Neg;\n\nlet _ = 2.0_f32.neg(); // ok!\nlet x: f32 = 2.0;\nlet _ = x.neg(); // ok!\nlet _ = (2.0 as f32).neg(); // ok!\n```\n"},"level":"error","message":"can't call method `abs` on ambiguous numeric type `{float}`","spans":[{"byte_end":5219,"byte_start":5216,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"        if e.abs() > tol1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0689]: can't call method `abs` on ambiguous numeric type `{float}`\n   --> scirs2-optimize/src/scalar.rs:340:14\n    |\n340 |         if e.abs() > tol1 {\n    |              ^^^\n    |\nhelp: you must specify a type for this binding, like `f32`\n    |\n318 |     let mut e: f32 = 0.0;\n    |              +++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"you must specify a type for this binding, like `f32`","rendered":null,"spans":[{"byte_end":8293,"byte_start":8293,"column_end":14,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":318,"line_start":318,"suggested_replacement":": f32","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":14,"highlight_start":14,"text":"    let mut e = 0.0;"}]}]}],"code":{"code":"E0689","explanation":"A method was called on an ambiguous numeric type.\n\nErroneous code example:\n\n```compile_fail,E0689\n2.0.neg(); // error!\n```\n\nThis error indicates that the numeric value for the method being passed exists\nbut the type of the numeric value or binding could not be identified.\n\nThe error happens on numeric literals and on numeric bindings without an\nidentified concrete type:\n\n```compile_fail,E0689\nlet x = 2.0;\nx.neg();  // same error as above\n```\n\nBecause of this, you must give the numeric literal or binding a type:\n\n```\nuse std::ops::Neg;\n\nlet _ = 2.0_f32.neg(); // ok!\nlet x: f32 = 2.0;\nlet _ = x.neg(); // ok!\nlet _ = (2.0 as f32).neg(); // ok!\n```\n"},"level":"error","message":"can't call method `abs` on ambiguous numeric type `{float}`","spans":[{"byte_end":8924,"byte_start":8921,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"        if e.abs() > tol1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/scalar.rs:441:9\n    |\n441 |       let (a_b, c) = if let Some(bracket) = options.bracket {\n    |  _________^^^^^^^^___-\n    | |         |\n    | |         expected a tuple with 3 elements, found one with 2 elements\n442 | |         bracket\n443 | |     } else {\n444 | |         let x0 = 0.0;\n445 | |         let x1 = 1.0;\n446 | |         bracket_minimum(&fun, x0, x1)?\n447 | |     };\n    | |_____- this expression has type `(f64, f64, f64)`\n    |\n    = note: expected tuple `(f64, f64, f64)`\n               found tuple `(_, _)`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(f64, f64, f64)`\n   found tuple `(_, _)`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":11328,"byte_start":11320,"column_end":17,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":441,"line_start":441,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":9,"text":"    let (a_b, c) = if let Some(bracket) = options.bracket {"}]},{"byte_end":11489,"byte_start":11331,"column_end":6,"column_start":20,"expansion":null,"file_name":"scirs2-optimize/src/scalar.rs","is_primary":false,"label":"this expression has type `(f64, f64, f64)`","line_end":447,"line_start":441,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":20,"text":"    let (a_b, c) = if let Some(bracket) = options.bracket {"},{"highlight_end":16,"highlight_start":1,"text":"        bracket"},{"highlight_end":13,"highlight_start":1,"text":"    } else {"},{"highlight_end":22,"highlight_start":1,"text":"        let x0 = 0.0;"},{"highlight_end":22,"highlight_start":1,"text":"        let x1 = 1.0;"},{"highlight_end":39,"highlight_start":1,"text":"        bracket_minimum(&fun, x0, x1)?"},{"highlight_end":6,"highlight_start":1,"text":"    };"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/hessian.rs:194:9\n    |\n194 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":6652,"byte_start":6640,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":6670,"byte_start":6655,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/hessian.rs:341:9\n    |\n341 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":11541,"byte_start":11529,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":341,"line_start":341,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":11559,"byte_start":11544,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":341,"line_start":341,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/hessian.rs:515:9\n    |\n515 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":17594,"byte_start":17582,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":515,"line_start":515,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":17612,"byte_start":17597,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/hessian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":515,"line_start":515,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/jacobian.rs:130:9\n    |\n130 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":4409,"byte_start":4397,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":130,"line_start":130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":4427,"byte_start":4412,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":130,"line_start":130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/jacobian.rs:243:9\n    |\n243 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":8337,"byte_start":8325,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":243,"line_start":243,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":8355,"byte_start":8340,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":243,"line_start":243,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/sparse_numdiff/jacobian.rs:365:9\n    |\n365 |     let (rows, cols) = sparsity.find();\n    |         ^^^^^^^^^^^^   --------------- this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`\n    |         |\n    |         expected a tuple with 3 elements, found one with 2 elements\n    |\n    = note: expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n               found tuple `(_, _)`\n    = note: the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'\n    = note: consider using `--verbose` to print the full type name to the console\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected tuple `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>)`\n   found tuple `(_, _)`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the full name for the type has been written to '/Users/kitasan/work/scirs/target/debug/deps/scirs2_optimize-4e4e7ff380752bc4.long-type-3960574743571310921.txt'","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"consider using `--verbose` to print the full type name to the console","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":12662,"byte_start":12650,"column_end":21,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":true,"label":"expected a tuple with 3 elements, found one with 2 elements","line_end":365,"line_start":365,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"    let (rows, cols) = sparsity.find();"}]},{"byte_end":12680,"byte_start":12665,"column_end":39,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/sparse_numdiff/jacobian.rs","is_primary":false,"label":"this expression has type `(ArrayBase<OwnedRepr<usize>, Dim<[usize; 1]>>, ..., ...)`","line_end":365,"line_start":365,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":24,"text":"    let (rows, cols) = sparsity.find();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n   --> scirs2-optimize/src/stochastic/adamw.rs:178:43\n    |\n178 |                 let v_mean = v_hat.mean().unwrap_or(0.0);\n    |                                           ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":6581,"byte_start":6572,"column_end":52,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":"method not found in `f64`","line_end":178,"line_start":178,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":43,"text":"                let v_mean = v_hat.mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `_min` found for type `usize` in the current scope\n   --> scirs2-optimize/src/stochastic/adamw.rs:265:62\n    |\n265 |         let cycle_end = (cycle_start + current_cycle_length)._min(total_max_iter);\n    |                                                              ^^^^\n    |\nhelp: there is a method `min` with a similar name\n    |\n265 -         let cycle_end = (cycle_start + current_cycle_length)._min(total_max_iter);\n265 +         let cycle_end = (cycle_start + current_cycle_length).min(total_max_iter);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `min` with a similar name","rendered":null,"spans":[{"byte_end":9478,"byte_start":9474,"column_end":66,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":"min","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":66,"highlight_start":62,"text":"        let cycle_end = (cycle_start + current_cycle_length)._min(total_max_iter);"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `_min` found for type `usize` in the current scope","spans":[{"byte_end":9478,"byte_start":9474,"column_end":66,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":62,"text":"        let cycle_end = (cycle_start + current_cycle_length)._min(total_max_iter);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `unconstrained::result::OptimizeResult<f64>` has no field named `_func_evals`\n   --> scirs2-optimize/src/stochastic/adamw.rs:311:9\n    |\n311 |         _func_evals: 0, // Would need to track across cycles\n    |         ^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n311 -         _func_evals: 0, // Would need to track across cycles\n311 +         func_evals: 0, // Would need to track across cycles\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":10900,"byte_start":10889,"column_end":20,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":311,"line_start":311,"suggested_replacement":"func_evals","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":9,"text":"        _func_evals: 0, // Would need to track across cycles"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `unconstrained::result::OptimizeResult<f64>` has no field named `_func_evals`","spans":[{"byte_end":10900,"byte_start":10889,"column_end":20,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":"unknown field","line_end":311,"line_start":311,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":9,"text":"        _func_evals: 0, // Would need to track across cycles"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `_min` found for type `{integer}` in the current scope\n   --> scirs2-optimize/src/stochastic/adamw.rs:343:54\n    |\n343 |     let batch_size = options.batch_size.unwrap_or(32._min(num_samples / 10));\n    |                                                      ^^^^ method not found in `{integer}`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `_min` found for type `{integer}` in the current scope","spans":[{"byte_end":11855,"byte_start":11851,"column_end":58,"column_start":54,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":"method not found in `{integer}`","line_end":343,"line_start":343,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":54,"text":"    let batch_size = options.batch_size.unwrap_or(32._min(num_samples / 10));"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `_min` found for type `usize` in the current scope\n   --> scirs2-optimize/src/stochastic/adamw.rs:344:40\n    |\n344 |     let actual_batch_size = batch_size._min(num_samples);\n    |                                        ^^^^\n    |\nhelp: there is a method `min` with a similar name\n    |\n344 -     let actual_batch_size = batch_size._min(num_samples);\n344 +     let actual_batch_size = batch_size.min(num_samples);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `min` with a similar name","rendered":null,"spans":[{"byte_end":11919,"byte_start":11915,"column_end":44,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":344,"line_start":344,"suggested_replacement":"min","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":44,"highlight_start":40,"text":"    let actual_batch_size = batch_size._min(num_samples);"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `_min` found for type `usize` in the current scope","spans":[{"byte_end":11919,"byte_start":11915,"column_end":44,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":344,"line_start":344,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":40,"text":"    let actual_batch_size = batch_size._min(num_samples);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `unconstrained::result::OptimizeResult<f64>` has no field named `_func_evals`\n   --> scirs2-optimize/src/stochastic/adamw.rs:404:9\n    |\n404 |         _func_evals: 0,\n    |         ^^^^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n404 -         _func_evals: 0,\n404 +         func_evals: 0,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":14106,"byte_start":14095,"column_end":20,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":null,"line_end":404,"line_start":404,"suggested_replacement":"func_evals","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":20,"highlight_start":9,"text":"        _func_evals: 0,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `unconstrained::result::OptimizeResult<f64>` has no field named `_func_evals`","spans":[{"byte_end":14106,"byte_start":14095,"column_end":20,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/adamw.rs","is_primary":true,"label":"unknown field","line_end":404,"line_start":404,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":9,"text":"        _func_evals: 0,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `f64` in the current scope\n   --> scirs2-optimize/src/stochastic/rmsprop.rs:197:60\n    |\n197 |                 let rms_norm = s.mapv(|s| s.sqrt()).mean().unwrap_or(0.0);\n    |                                                            ^^^^^^^^^ method not found in `f64`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `f64` in the current scope","spans":[{"byte_end":7011,"byte_start":7002,"column_end":69,"column_start":60,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/rmsprop.rs","is_primary":true,"label":"method not found in `f64`","line_end":197,"line_start":197,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":60,"text":"                let rms_norm = s.mapv(|s| s.sqrt()).mean().unwrap_or(0.0);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `InMemoryDataProvider` has no field named `_data`\n   --> scirs2-optimize/src/stochastic/mod.rs:118:16\n    |\n118 |         Self { _data }\n    |                ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n118 -         Self { _data }\n118 +         Self { data }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3368,"byte_start":3363,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/mod.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"data","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _data }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `InMemoryDataProvider` has no field named `_data`","spans":[{"byte_end":3368,"byte_start":3363,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/mod.rs","is_primary":true,"label":"unknown field","line_end":118,"line_start":118,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _data }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `BatchGradientWrapper<F, G>` has no field named `_func`\n   --> scirs2-optimize/src/stochastic/mod.rs:157:16\n    |\n157 |         Self { _func, grad }\n    |                ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n157 -         Self { _func, grad }\n157 +         Self { func, grad }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":4347,"byte_start":4342,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/mod.rs","is_primary":true,"label":null,"line_end":157,"line_start":157,"suggested_replacement":"func","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _func, grad }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `BatchGradientWrapper<F, G>` has no field named `_func`","spans":[{"byte_end":4347,"byte_start":4342,"column_end":21,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/stochastic/mod.rs","is_primary":true,"label":"unknown field","line_end":157,"line_start":157,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":16,"text":"        Self { _func, grad }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `hessian` found for type parameter `T` in the current scope\n   --> scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs:647:51\n    |\n471 | impl<T: StreamingObjective> AdvancedAdaptiveStreamingOptimizer<T> {\n    |      - method `hessian` not found for this type parameter\n...\n647 |             if let Some(hessian) = self.objective.hessian(&self.parameters.view(), data_point) {\n    |                                                   ^^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in the trait `StreamingObjective`\n   --> scirs2-optimize/src/streaming/mod.rs:196:5\n    |\n196 | /     fn hessian(\n197 | |         &self_parameters: &ArrayView1<f64>,\n198 | |         _data_point: &StreamingDataPoint,\n199 | |     ) -> Option<Array2<f64>> {\n    | |____________________________^\n    = help: items from traits can only be used if the type parameter is bounded by the trait\nhelp: use associated function syntax instead\n    |\n647 -             if let Some(hessian) = self.objective.hessian(&self.parameters.view(), data_point) {\n647 +             if let Some(hessian) = T::hessian(&self.parameters.view(), data_point) {\n    |\nhelp: the following trait defines an item `hessian`, perhaps you need to restrict type parameter `T` with it:\n    |\n471 | impl<T: StreamingObjective + argmin::core::Hessian> AdvancedAdaptiveStreamingOptimizer<T> {\n    |                            +++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in the trait `StreamingObjective`","rendered":null,"spans":[{"byte_end":5949,"byte_start":5823,"column_end":29,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/streaming/mod.rs","is_primary":true,"label":null,"line_end":199,"line_start":196,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"    fn hessian("},{"highlight_end":44,"highlight_start":1,"text":"        &self_parameters: &ArrayView1<f64>,"},{"highlight_end":42,"highlight_start":1,"text":"        _data_point: &StreamingDataPoint,"},{"highlight_end":29,"highlight_start":1,"text":"    ) -> Option<Array2<f64>> {"}]}]},{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the type parameter is bounded by the trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":18659,"byte_start":18600,"column_end":95,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":null,"line_end":647,"line_start":647,"suggested_replacement":"T::hessian(&self.parameters.view(), data_point)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":95,"highlight_start":36,"text":"            if let Some(hessian) = self.objective.hessian(&self.parameters.view(), data_point) {"}]}]},{"children":[],"code":null,"level":"help","message":"the following trait defines an item `hessian`, perhaps you need to restrict type parameter `T` with it:","rendered":null,"spans":[{"byte_end":12088,"byte_start":12088,"column_end":27,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":null,"line_end":471,"line_start":471,"suggested_replacement":" + argmin::core::Hessian","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":27,"text":"impl<T: StreamingObjective> AdvancedAdaptiveStreamingOptimizer<T> {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `hessian` found for type parameter `T` in the current scope","spans":[{"byte_end":18622,"byte_start":18615,"column_end":58,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":647,"line_start":647,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":51,"text":"            if let Some(hessian) = self.objective.hessian(&self.parameters.view(), data_point) {"}]},{"byte_end":12068,"byte_start":12067,"column_end":7,"column_start":6,"expansion":null,"file_name":"scirs2-optimize/src/streaming/advanced_adaptive_streaming.rs","is_primary":false,"label":"method `hessian` not found for this type parameter","line_end":471,"line_start":471,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":"impl<T: StreamingObjective> AdvancedAdaptiveStreamingOptimizer<T> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `unwrap_or` found for type `usize` in the current scope\n   --> scirs2-optimize/src/streaming/incremental_newton.rs:162:52\n    |\n162 |             IncrementalNewtonMethod::LBFGS(m) => m.unwrap_or(10), // Default memory size\n    |                                                    ^^^^^^^^^ method not found in `usize`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `unwrap_or` found for type `usize` in the current scope","spans":[{"byte_end":5230,"byte_start":5221,"column_end":61,"column_start":52,"expansion":null,"file_name":"scirs2-optimize/src/streaming/incremental_newton.rs","is_primary":true,"label":"method not found in `usize`","line_end":162,"line_start":162,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":52,"text":"            IncrementalNewtonMethod::LBFGS(m) => m.unwrap_or(10), // Default memory size"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `hessian` found for type parameter `T` in the current scope\n   --> scirs2-optimize/src/streaming/incremental_newton.rs:248:40\n    |\n152 | impl<T: StreamingObjective> IncrementalNewton<T> {\n    |      - method `hessian` not found for this type parameter\n...\n248 |                         self.objective.hessian(&self.parameters.view(), &data_point)\n    |                                        ^^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in the trait `StreamingObjective`\n   --> scirs2-optimize/src/streaming/mod.rs:196:5\n    |\n196 | /     fn hessian(\n197 | |         &self_parameters: &ArrayView1<f64>,\n198 | |         _data_point: &StreamingDataPoint,\n199 | |     ) -> Option<Array2<f64>> {\n    | |____________________________^\n    = help: items from traits can only be used if the type parameter is bounded by the trait\nhelp: use associated function syntax instead\n    |\n248 -                         self.objective.hessian(&self.parameters.view(), &data_point)\n248 +                         T::hessian(&self.parameters.view(), &data_point)\n    |\nhelp: the following trait defines an item `hessian`, perhaps you need to restrict type parameter `T` with it:\n    |\n152 | impl<T: StreamingObjective + argmin::core::Hessian> IncrementalNewton<T> {\n    |                            +++++++++++++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in the trait `StreamingObjective`","rendered":null,"spans":[{"byte_end":5949,"byte_start":5823,"column_end":29,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/streaming/mod.rs","is_primary":true,"label":null,"line_end":199,"line_start":196,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"    fn hessian("},{"highlight_end":44,"highlight_start":1,"text":"        &self_parameters: &ArrayView1<f64>,"},{"highlight_end":42,"highlight_start":1,"text":"        _data_point: &StreamingDataPoint,"},{"highlight_end":29,"highlight_start":1,"text":"    ) -> Option<Array2<f64>> {"}]}]},{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the type parameter is bounded by the trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":8043,"byte_start":7983,"column_end":85,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/streaming/incremental_newton.rs","is_primary":true,"label":null,"line_end":248,"line_start":248,"suggested_replacement":"T::hessian(&self.parameters.view(), &data_point)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":85,"highlight_start":25,"text":"                        self.objective.hessian(&self.parameters.view(), &data_point)"}]}]},{"children":[],"code":null,"level":"help","message":"the following trait defines an item `hessian`, perhaps you need to restrict type parameter `T` with it:","rendered":null,"spans":[{"byte_end":4836,"byte_start":4836,"column_end":27,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/streaming/incremental_newton.rs","is_primary":true,"label":null,"line_end":152,"line_start":152,"suggested_replacement":" + argmin::core::Hessian","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":27,"text":"impl<T: StreamingObjective> IncrementalNewton<T> {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `hessian` found for type parameter `T` in the current scope","spans":[{"byte_end":8005,"byte_start":7998,"column_end":47,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/streaming/incremental_newton.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":248,"line_start":248,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":40,"text":"                        self.objective.hessian(&self.parameters.view(), &data_point)"}]},{"byte_end":4816,"byte_start":4815,"column_end":7,"column_start":6,"expansion":null,"file_name":"scirs2-optimize/src/streaming/incremental_newton.rs","is_primary":false,"label":"method `hessian` not found for this type parameter","line_end":152,"line_start":152,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":"impl<T: StreamingObjective> IncrementalNewton<T> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `real_time_estimation::RealTimeEstimator<T>` has no field named `_parameters`\n  --> scirs2-optimize/src/streaming/real_time_estimation.rs:76:13\n   |\n76 |             _parameters: initial_parameters,\n   |             ^^^^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n76 -             _parameters: initial_parameters,\n76 +             parameters: initial_parameters,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":2530,"byte_start":2519,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/streaming/real_time_estimation.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":"parameters","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: initial_parameters,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `real_time_estimation::RealTimeEstimator<T>` has no field named `_parameters`","spans":[{"byte_end":2530,"byte_start":2519,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/streaming/real_time_estimation.rs","is_primary":true,"label":"unknown field","line_end":76,"line_start":76,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: initial_parameters,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `streaming_trust_region::StreamingTrustRegion<T>` has no field named `_parameters`\n  --> scirs2-optimize/src/streaming/streaming_trust_region.rs:56:13\n   |\n56 |             _parameters: initial_parameters,\n   |             ^^^^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n56 -             _parameters: initial_parameters,\n56 +             parameters: initial_parameters,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":1826,"byte_start":1815,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/streaming/streaming_trust_region.rs","is_primary":true,"label":null,"line_end":56,"line_start":56,"suggested_replacement":"parameters","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: initial_parameters,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `streaming_trust_region::StreamingTrustRegion<T>` has no field named `_parameters`","spans":[{"byte_end":1826,"byte_start":1815,"column_end":24,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/streaming/streaming_trust_region.rs","is_primary":true,"label":"unknown field","line_end":56,"line_start":56,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":13,"text":"            _parameters: initial_parameters,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `AdaptiveToleranceState` has no field named `_options`\n  --> scirs2-optimize/src/unconstrained/adaptive_convergence.rs:98:13\n   |\n98 |             _options,\n   |             ^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n98 -             _options,\n98 +             options,\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":3522,"byte_start":3514,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/adaptive_convergence.rs","is_primary":true,"label":null,"line_end":98,"line_start":98,"suggested_replacement":"options","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `AdaptiveToleranceState` has no field named `_options`","spans":[{"byte_end":3522,"byte_start":3514,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/adaptive_convergence.rs","is_primary":true,"label":"unknown field","line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/advanced_line_search.rs:256:32\n    |\n256 |                 let grad_new = gradfun(&x_new.view());\n    |                                ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":7561,"byte_start":7554,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":256,"line_start":256,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":7561,"byte_start":7554,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":256,"line_start":256,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/advanced_line_search.rs:353:32\n    |\n353 |                 let grad_new = gradfun(&x_new.view());\n    |                                ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":10845,"byte_start":10838,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":353,"line_start":353,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":10845,"byte_start":10838,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":353,"line_start":353,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/advanced_line_search.rs:523:32\n    |\n523 |                 let grad_new = gradfun(&x_new.view());\n    |                                ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":16189,"byte_start":16182,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":523,"line_start":523,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":16189,"byte_start":16182,"column_end":39,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":523,"line_start":523,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":32,"text":"                let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/advanced_line_search.rs:648:24\n    |\n648 |         let grad_new = gradfun(&x_new.view());\n    |                        ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":19910,"byte_start":19903,"column_end":31,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":648,"line_start":648,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":24,"text":"        let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":19910,"byte_start":19903,"column_end":31,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":648,"line_start":648,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":24,"text":"        let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/advanced_line_search.rs:749:28\n    |\n749 |             let grad_new = gradfun(&x_new.view());\n    |                            ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":23003,"byte_start":22996,"column_end":35,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":749,"line_start":749,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":35,"highlight_start":28,"text":"            let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":23003,"byte_start":22996,"column_end":35,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/advanced_line_search.rs","is_primary":true,"label":null,"line_end":749,"line_start":749,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":28,"text":"            let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/callback_diagnostics.rs:299:14\n    |\n293 | fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |                            ---- `_fun` defined here\n...\n299 |     let f0 = fun(x);\n    |              ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n293 - fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n293 + fn finite_diff_gradient<F>(fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":8945,"byte_start":8941,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":true,"label":null,"line_end":293,"line_start":293,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":8945,"byte_start":8941,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":false,"label":"`_fun` defined here","line_end":293,"line_start":293,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]},{"byte_end":9122,"byte_start":9119,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":true,"label":null,"line_end":299,"line_start":299,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"    let f0 = fun(x);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/callback_diagnostics.rs:305:22\n    |\n293 | fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |                            ---- `_fun` defined here\n...\n305 |         let f_plus = fun(&x_pert.view());\n    |                      ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n293 - fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n293 + fn finite_diff_gradient<F>(fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":8945,"byte_start":8941,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":true,"label":null,"line_end":293,"line_start":293,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":8945,"byte_start":8941,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":false,"label":"`_fun` defined here","line_end":293,"line_start":293,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]},{"byte_end":9279,"byte_start":9276,"column_end":25,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/callback_diagnostics.rs","is_primary":true,"label":null,"line_end":305,"line_start":305,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":22,"text":"        let f_plus = fun(&x_pert.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `DiagnosticCollector` has no field named `_options`\n   --> scirs2-optimize/src/unconstrained/convergence_diagnostics.rs:353:13\n    |\n353 |             _options,\n    |             ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n353 -             _options,\n353 +             options,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":9512,"byte_start":9504,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/convergence_diagnostics.rs","is_primary":true,"label":null,"line_end":353,"line_start":353,"suggested_replacement":"options","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `DiagnosticCollector` has no field named `_options`","spans":[{"byte_end":9512,"byte_start":9504,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/convergence_diagnostics.rs","is_primary":true,"label":"unknown field","line_end":353,"line_start":353,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/line_search.rs:101:24\n    |\n101 |         let grad_new = gradfun(&x_new.view());\n    |                        ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":2485,"byte_start":2478,"column_end":31,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":24,"text":"        let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":2485,"byte_start":2478,"column_end":31,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":24,"text":"        let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/line_search.rs:156:28\n    |\n156 |             let grad_new = gradfun(&x_new.view());\n    |                            ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":3879,"byte_start":3872,"column_end":35,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":156,"line_start":156,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":35,"highlight_start":28,"text":"            let grad_new = gradfun(&x_new.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":3879,"byte_start":3872,"column_end":35,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/line_search.rs","is_primary":true,"label":null,"line_end":156,"line_start":156,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":28,"text":"            let grad_new = gradfun(&x_new.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `StreamingGradient` has no field named `_chunk_size`\n  --> scirs2-optimize/src/unconstrained/memory_efficient.rs:92:16\n   |\n92 |         Self { _chunk_size, eps }\n   |                ^^^^^^^^^^^ unknown field\n   |\nhelp: a field with a similar name exists\n   |\n92 -         Self { _chunk_size, eps }\n92 +         Self { chunk_size, eps }\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":2936,"byte_start":2925,"column_end":27,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/memory_efficient.rs","is_primary":true,"label":null,"line_end":92,"line_start":92,"suggested_replacement":"chunk_size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":16,"text":"        Self { _chunk_size, eps }"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `StreamingGradient` has no field named `_chunk_size`","spans":[{"byte_end":2936,"byte_start":2925,"column_end":27,"column_start":16,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/memory_efficient.rs","is_primary":true,"label":"unknown field","line_end":92,"line_start":92,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":16,"text":"        Self { _chunk_size, eps }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `VariableBlock` has no field named `_size`\n   --> scirs2-optimize/src/unconstrained/memory_efficient_sparse.rs:255:13\n    |\n255 |             _size,\n    |             ^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n255 -             _size,\n255 +             size,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":8932,"byte_start":8927,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/memory_efficient_sparse.rs","is_primary":true,"label":null,"line_end":255,"line_start":255,"suggested_replacement":"size","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":18,"highlight_start":13,"text":"            _size,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `VariableBlock` has no field named `_size`","spans":[{"byte_end":8932,"byte_start":8927,"column_end":18,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/memory_efficient_sparse.rs","is_primary":true,"label":"unknown field","line_end":255,"line_start":255,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":13,"text":"            _size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n  --> scirs2-optimize/src/unconstrained/nelder_mead.rs:52:35\n   |\n52 |     simplex.push((x0_vec.clone(), boundedfun(&x0_vec.view())));\n   |                                   ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":1616,"byte_start":1606,"column_end":45,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":52,"line_start":52,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":45,"highlight_start":35,"text":"    simplex.push((x0_vec.clone(), boundedfun(&x0_vec.view())));"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":1616,"byte_start":1606,"column_end":45,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":52,"line_start":52,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":35,"text":"    simplex.push((x0_vec.clone(), boundedfun(&x0_vec.view())));"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n  --> scirs2-optimize/src/unconstrained/nelder_mead.rs:68:35\n   |\n68 |         simplex.push((xi.clone(), boundedfun(&xi.view())));\n   |                                   ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":2077,"byte_start":2067,"column_end":45,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":68,"line_start":68,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":45,"highlight_start":35,"text":"        simplex.push((xi.clone(), boundedfun(&xi.view())));"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":2077,"byte_start":2067,"column_end":45,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":68,"line_start":68,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":35,"text":"        simplex.push((xi.clone(), boundedfun(&xi.view())));"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n   --> scirs2-optimize/src/unconstrained/nelder_mead.rs:101:19\n    |\n101 |         let fxr = boundedfun(&xr.view());\n    |                   ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":3071,"byte_start":3061,"column_end":29,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":29,"highlight_start":19,"text":"        let fxr = boundedfun(&xr.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":3071,"byte_start":3061,"column_end":29,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":19,"text":"        let fxr = boundedfun(&xr.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n   --> scirs2-optimize/src/unconstrained/nelder_mead.rs:113:23\n    |\n113 |             let fxe = boundedfun(&xe.view());\n    |                       ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":3489,"byte_start":3479,"column_end":33,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":33,"highlight_start":23,"text":"            let fxe = boundedfun(&xe.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":3489,"byte_start":3479,"column_end":33,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":23,"text":"            let fxe = boundedfun(&xe.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n   --> scirs2-optimize/src/unconstrained/nelder_mead.rs:143:32\n    |\n143 |             let fxc_contract = boundedfun(&xc_contract.view());\n    |                                ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":4674,"byte_start":4664,"column_end":42,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":143,"line_start":143,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":42,"highlight_start":32,"text":"            let fxc_contract = boundedfun(&xc_contract.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":4674,"byte_start":4664,"column_end":42,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":143,"line_start":143,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":32,"text":"            let fxc_contract = boundedfun(&xc_contract.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `boundedfun` in this scope\n   --> scirs2-optimize/src/unconstrained/nelder_mead.rs:161:36\n    |\n161 |                     simplex[i].1 = boundedfun(&simplex[i].0.view());\n    |                                    ^^^^^^^^^^ help: a local variable with a similar name exists: `bounded_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":5510,"byte_start":5500,"column_end":46,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":161,"line_start":161,"suggested_replacement":"bounded_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":46,"highlight_start":36,"text":"                    simplex[i].1 = boundedfun(&simplex[i].0.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `boundedfun` in this scope","spans":[{"byte_end":5510,"byte_start":5500,"column_end":46,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/nelder_mead.rs","is_primary":true,"label":null,"line_end":161,"line_start":161,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":36,"text":"                    simplex[i].1 = boundedfun(&simplex[i].0.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0560]: struct `RobustConvergenceState` has no field named `_options`\n   --> scirs2-optimize/src/unconstrained/robust_convergence.rs:164:13\n    |\n164 |             _options,\n    |             ^^^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n164 -             _options,\n164 +             options,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":5793,"byte_start":5785,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/robust_convergence.rs","is_primary":true,"label":null,"line_end":164,"line_start":164,"suggested_replacement":"options","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}],"code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","message":"struct `RobustConvergenceState` has no field named `_options`","spans":[{"byte_end":5793,"byte_start":5785,"column_end":21,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/robust_convergence.rs","is_primary":true,"label":"unknown field","line_end":164,"line_start":164,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            _options,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/simd_bfgs.rs:339:14\n    |\n332 | fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |                                    ---- `_fun` defined here\n...\n339 |     let f0 = fun(&x.view());\n    |              ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n332 - fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n332 + fn compute_gradient_finite_diff<F>(fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":11283,"byte_start":11279,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":true,"label":null,"line_end":332,"line_start":332,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":11283,"byte_start":11279,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":false,"label":"`_fun` defined here","line_end":332,"line_start":332,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]},{"byte_end":11501,"byte_start":11498,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":true,"label":null,"line_end":339,"line_start":339,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"    let f0 = fun(&x.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/simd_bfgs.rs:345:22\n    |\n332 | fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |                                    ---- `_fun` defined here\n...\n345 |         let f_plus = fun(&x_plus.view());\n    |                      ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n332 - fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n332 + fn compute_gradient_finite_diff<F>(fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":11283,"byte_start":11279,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":true,"label":null,"line_end":332,"line_start":332,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":11283,"byte_start":11279,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":false,"label":"`_fun` defined here","line_end":332,"line_start":332,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_gradient_finite_diff<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]},{"byte_end":11637,"byte_start":11634,"column_end":25,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/simd_bfgs.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":22,"text":"        let f_plus = fun(&x_plus.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/unconstrained/sparse_optimization.rs:427:65\n    |\n427 |             finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)\n    |                                                                 ^^^^^^^^^^^^^^ types differ in mutability\n    |\n    = note: expected mutable reference `&mut F`\n                       found reference `&ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected mutable reference `&mut F`\n           found reference `&ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>>`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":13278,"byte_start":13264,"column_end":79,"column_start":65,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":"types differ in mutability","line_end":427,"line_start":427,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":65,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> scirs2-optimize/src/unconstrained/sparse_optimization.rs:427:13\n    |\n427 |             finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                   -------- argument #2 of type `&ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>>` is missing\n    |\nnote: expected `&mut _`, found `Range<&mut F>`\n   --> scirs2-optimize/src/unconstrained/sparse_optimization.rs:427:47\n    |\n427 |             finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected mutable reference `&mut _`\n                          found struct `std::ops::Range<&mut F>`\nnote: function defined here\n   --> scirs2-optimize/src/unconstrained/sparse_optimization.rs:321:4\n    |\n321 | fn finite_difference_gradient_sparse<F, S>(\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n322 |     fun: &mut F,\n    |     -----------\n323 |     x: &ArrayView1<f64>,\n    |     -------------------\nhelp: consider mutably borrowing here\n    |\n427 |             finite_difference_gradient_sparse(&mut (&mut fun.clone()..&x_pert.view()), &options)\n    |                                               ++++++                                +\nhelp: provide the argument\n    |\n427 -             finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)\n427 +             finite_difference_gradient_sparse(/* fun */, /* &ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>> */, &options)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected `&mut _`, found `Range<&mut F>`","rendered":null,"spans":[{"byte_end":13278,"byte_start":13246,"column_end":79,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":47,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]}]},{"children":[],"code":null,"level":"note","message":"expected mutable reference `&mut _`\n              found struct `std::ops::Range<&mut F>`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"function defined here","rendered":null,"spans":[{"byte_end":10280,"byte_start":10269,"column_end":16,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":false,"label":"","line_end":322,"line_start":322,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":5,"text":"    fun: &mut F,"}]},{"byte_end":10305,"byte_start":10286,"column_end":24,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":false,"label":"","line_end":323,"line_start":323,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":5,"text":"    x: &ArrayView1<f64>,"}]},{"byte_end":10257,"byte_start":10224,"column_end":37,"column_start":4,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":321,"line_start":321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":4,"text":"fn finite_difference_gradient_sparse<F, S>("}]}]},{"children":[],"code":null,"level":"help","message":"consider mutably borrowing here","rendered":null,"spans":[{"byte_end":13246,"byte_start":13246,"column_end":47,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":"&mut (","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":47,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]},{"byte_end":13278,"byte_start":13278,"column_end":79,"column_start":79,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":79,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]}]},{"children":[],"code":null,"level":"help","message":"provide the argument","rendered":null,"spans":[{"byte_end":13289,"byte_start":13245,"column_end":90,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":"(/* fun */, /* &ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>> */, &options)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":90,"highlight_start":46,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this function takes 3 arguments but 2 arguments were supplied","spans":[{"byte_end":13288,"byte_start":13280,"column_end":89,"column_start":81,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":false,"label":"argument #2 of type `&ArrayBase<ViewRepr<&f64>, Dim<[usize; 1]>>` is missing","line_end":427,"line_start":427,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":81,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]},{"byte_end":13245,"byte_start":13212,"column_end":46,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/sparse_optimization.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":13,"text":"            finite_difference_gradient_sparse(&mut fun.clone()..&x_pert.view(), &options)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/strong_wolfe.rs:220:23\n    |\n220 |         let g_alpha = gradfun(&x_alpha.view());\n    |                       ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":6793,"byte_start":6786,"column_end":30,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":220,"line_start":220,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":30,"highlight_start":23,"text":"        let g_alpha = gradfun(&x_alpha.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":6793,"byte_start":6786,"column_end":30,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":220,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":23,"text":"        let g_alpha = gradfun(&x_alpha.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/strong_wolfe.rs:316:27\n    |\n316 |             let g_alpha = gradfun(&x_alpha.view());\n    |                           ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":9708,"byte_start":9701,"column_end":34,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":316,"line_start":316,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":34,"highlight_start":27,"text":"            let g_alpha = gradfun(&x_alpha.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":9708,"byte_start":9701,"column_end":34,"column_start":27,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":316,"line_start":316,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":27,"text":"            let g_alpha = gradfun(&x_alpha.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `gradfun` in this scope\n   --> scirs2-optimize/src/unconstrained/strong_wolfe.rs:347:19\n    |\n347 |     let g_alpha = gradfun(&x_alpha.view());\n    |                   ^^^^^^^ help: a local variable with a similar name exists: `grad_fun`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a local variable with a similar name exists","rendered":null,"spans":[{"byte_end":10701,"byte_start":10694,"column_end":26,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":347,"line_start":347,"suggested_replacement":"grad_fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":26,"highlight_start":19,"text":"    let g_alpha = gradfun(&x_alpha.view());"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `gradfun` in this scope","spans":[{"byte_end":10701,"byte_start":10694,"column_end":26,"column_start":19,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/strong_wolfe.rs","is_primary":true,"label":null,"line_end":347,"line_start":347,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    let g_alpha = gradfun(&x_alpha.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:260:58\n    |\n260 |                 let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);\n    |                                                          ^^ types differ in mutability\n    |\n    = note: expected mutable reference `&mut F`\n                       found reference `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"expected mutable reference `&mut F`\n           found reference `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`","rendered":null,"spans":[]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":8463,"byte_start":8461,"column_end":60,"column_start":58,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":"types differ in mutability","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":58,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0061]: this function takes 5 arguments but 4 arguments were supplied\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:260:33\n    |\n260 |                 let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);\n    |                                 ^^^^^^^^^^^^^^-------------------------------------------\n    |                                               ||             |                 |\n    |                                               ||             |                 expected `usize`, found `&mut {integer}`\n    |                                               ||             argument #2 of type `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>` is missing\n    |                                               ||             expected `&mut _`, found `usize`\n    |                                               |unexpected argument #1 of type `std::ops::Range<&mut F>`\n    |                                               argument #5 of type `&mut usize` is missing\n    |\nnote: function defined here\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:706:4\n    |\n706 | fn find_step_size<F>(\n    |    ^^^^^^^^^^^^^^\n707 |     fun: &mut F,\n708 |     x: &Array1<f64>,\n    |     ---------------\n...\n711 |     nfev: &mut usize,\n    |     ----------------\nhelp: did you mean\n    |\n260 -                 let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);\n260 +                 let step_size = find_step_size(&mut nfev, /* &ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> */, coord, direction, /* &mut usize */);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"function defined here","rendered":null,"spans":[{"byte_end":21670,"byte_start":21655,"column_end":20,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"","line_end":708,"line_start":708,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":5,"text":"    x: &Array1<f64>,"}]},{"byte_end":21730,"byte_start":21714,"column_end":21,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"","line_end":711,"line_start":711,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":5,"text":"    nfev: &mut usize,"}]},{"byte_end":21629,"byte_start":21615,"column_end":18,"column_start":4,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":706,"line_start":706,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":4,"text":"fn find_step_size<F>("}]}]},{"children":[],"code":null,"level":"help","message":"did you mean","rendered":null,"spans":[{"byte_end":8493,"byte_start":8450,"column_end":90,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":260,"line_start":260,"suggested_replacement":"(&mut nfev, /* &ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> */, coord, direction, /* &mut usize */)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":90,"highlight_start":47,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]}]}],"code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","message":"this function takes 5 arguments but 4 arguments were supplied","spans":[{"byte_end":8463,"byte_start":8451,"column_end":60,"column_start":48,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"unexpected argument #1 of type `std::ops::Range<&mut F>`","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":48,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]},{"byte_end":8470,"byte_start":8465,"column_end":67,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"argument #2 of type `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>` is missing","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":62,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]},{"byte_end":8493,"byte_start":8450,"column_end":90,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"argument #5 of type `&mut usize` is missing","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":47,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]},{"byte_end":8470,"byte_start":8465,"column_end":67,"column_start":62,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"expected `&mut _`, found `usize`","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":62,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]},{"byte_end":8492,"byte_start":8483,"column_end":89,"column_start":80,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"expected `usize`, found `&mut {integer}`","line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":80,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]},{"byte_end":8450,"byte_start":8436,"column_end":47,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":260,"line_start":260,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":33,"text":"                let step_size = find_step_size(&mut fun..&x, coord, direction, &mut nfev);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0369]: cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:462:36\n    |\n462 |         let x_new = &x - step_size * &search_direction;\n    |                          --------- ^ ----------------- &ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>\n    |                          |\n    |                          (f64, f64)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","message":"cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`","spans":[{"byte_end":14368,"byte_start":14359,"column_end":35,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"(f64, f64)","line_end":462,"line_start":462,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":26,"text":"        let x_new = &x - step_size * &search_direction;"}]},{"byte_end":14388,"byte_start":14371,"column_end":55,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>","line_end":462,"line_start":462,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":38,"text":"        let x_new = &x - step_size * &search_direction;"}]},{"byte_end":14370,"byte_start":14369,"column_end":37,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":462,"line_start":462,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":36,"text":"        let x_new = &x - step_size * &search_direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0369]: cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:566:36\n    |\n566 |         let x_new = &x - step_size * &search_direction;\n    |                          --------- ^ ----------------- &ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>\n    |                          |\n    |                          (f64, f64)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","message":"cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`","spans":[{"byte_end":17605,"byte_start":17596,"column_end":35,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"(f64, f64)","line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":26,"text":"        let x_new = &x - step_size * &search_direction;"}]},{"byte_end":17625,"byte_start":17608,"column_end":55,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>","line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":38,"text":"        let x_new = &x - step_size * &search_direction;"}]},{"byte_end":17607,"byte_start":17606,"column_end":37,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":36,"text":"        let x_new = &x - step_size * &search_direction;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:845:14\n    |\n837 | fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |                                    ---- `_fun` defined here\n...\n845 |     let f0 = fun(&x.view());\n    |              ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n837 - fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n837 + fn compute_finite_diff_gradient<F>(fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":24866,"byte_start":24862,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":837,"line_start":837,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":24866,"byte_start":24862,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"`_fun` defined here","line_end":837,"line_start":837,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]},{"byte_end":25068,"byte_start":25065,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":845,"line_start":845,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"    let f0 = fun(&x.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/subspace_methods.rs:851:22\n    |\n837 | fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |                                    ---- `_fun` defined here\n...\n851 |         let f_plus = fun(&x_plus.view());\n    |                      ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n837 - fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n837 + fn compute_finite_diff_gradient<F>(fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":24866,"byte_start":24862,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":837,"line_start":837,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":24866,"byte_start":24862,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":false,"label":"`_fun` defined here","line_end":837,"line_start":837,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":36,"text":"fn compute_finite_diff_gradient<F>(_fun: &mut F, x: &Array1<f64>, nfev: &mut usize) -> Array1<f64>"}]},{"byte_end":25204,"byte_start":25201,"column_end":25,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/subspace_methods.rs","is_primary":true,"label":null,"line_end":851,"line_start":851,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":22,"text":"        let f_plus = fun(&x_plus.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0369]: cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`\n   --> scirs2-optimize/src/unconstrained/truncated_newton.rs:377:36\n    |\n377 |         let x_new = &x + step_size * &p;\n    |                          --------- ^ -- &ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>\n    |                          |\n    |                          (f64, f64)\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","message":"cannot multiply `(f64, f64)` by `&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`","spans":[{"byte_end":11719,"byte_start":11710,"column_end":35,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":false,"label":"(f64, f64)","line_end":377,"line_start":377,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":26,"text":"        let x_new = &x + step_size * &p;"}]},{"byte_end":11724,"byte_start":11722,"column_end":40,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":false,"label":"&ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>","line_end":377,"line_start":377,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":38,"text":"        let x_new = &x + step_size * &p;"}]},{"byte_end":11721,"byte_start":11720,"column_end":37,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":true,"label":null,"line_end":377,"line_start":377,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":36,"text":"        let x_new = &x + step_size * &p;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/truncated_newton.rs:425:14\n    |\n419 | fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |                            ---- `_fun` defined here\n...\n425 |     let f0 = fun(x);\n    |              ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n419 - fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n419 + fn finite_diff_gradient<F>(fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":12874,"byte_start":12870,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":true,"label":null,"line_end":419,"line_start":419,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":12874,"byte_start":12870,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":false,"label":"`_fun` defined here","line_end":419,"line_start":419,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]},{"byte_end":13051,"byte_start":13048,"column_end":17,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":true,"label":null,"line_end":425,"line_start":425,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":14,"text":"    let f0 = fun(x);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function `fun` in this scope\n   --> scirs2-optimize/src/unconstrained/truncated_newton.rs:431:22\n    |\n419 | fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |                            ---- `_fun` defined here\n...\n431 |         let f_plus = fun(&x_plus.view());\n    |                      ^^^\n    |\nhelp: the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`\n    |\n419 - fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n419 + fn finite_diff_gradient<F>(fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"the leading underscore in `_fun` marks it as unused, consider renaming it to `fun`","rendered":null,"spans":[{"byte_end":12874,"byte_start":12870,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":true,"label":null,"line_end":419,"line_start":419,"suggested_replacement":"fun","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `fun` in this scope","spans":[{"byte_end":12874,"byte_start":12870,"column_end":32,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":false,"label":"`_fun` defined here","line_end":419,"line_start":419,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":28,"text":"fn finite_diff_gradient<F>(_fun: &mut F, x: &ArrayView1<f64>, eps: f64) -> Array1<f64>"}]},{"byte_end":13206,"byte_start":13203,"column_end":25,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/unconstrained/truncated_newton.rs","is_primary":true,"label":null,"line_end":431,"line_start":431,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":22,"text":"        let f_plus = fun(&x_plus.view());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:209:32\n    |\n209 |         while iteration < self.config.max_nit {\n    |                                ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n209 |         while iteration < self._config.max_nit {\n    |                                +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":7215,"byte_start":7209,"column_end":38,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":209,"line_start":209,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":38,"highlight_start":32,"text":"        while iteration < self.config.max_nit {"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":7215,"byte_start":7209,"column_end":38,"column_start":32,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":209,"line_start":209,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":32,"text":"        while iteration < self.config.max_nit {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:224:33\n    |\n224 |             if grad_norm < self.config.gradient_tolerance {\n    |                                 ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n224 |             if grad_norm < self._config.gradient_tolerance {\n    |                                 +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":7757,"byte_start":7751,"column_end":39,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":33,"text":"            if grad_norm < self.config.gradient_tolerance {"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":7757,"byte_start":7751,"column_end":39,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":224,"line_start":224,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":33,"text":"            if grad_norm < self.config.gradient_tolerance {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:253:44\n    |\n253 |             let search_direction = if self.config.use_gpu {\n    |                                            ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n253 |             let search_direction = if self._config.use_gpu {\n    |                                            +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":8928,"byte_start":8922,"column_end":50,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":253,"line_start":253,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":50,"highlight_start":44,"text":"            let search_direction = if self.config.use_gpu {"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":8928,"byte_start":8922,"column_end":50,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":253,"line_start":253,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":44,"text":"            let search_direction = if self.config.use_gpu {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:304:43\n    |\n304 |                 if abs_improvement < self.config.function_tolerance\n    |                                           ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n304 |                 if abs_improvement < self._config.function_tolerance\n    |                                           +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":10954,"byte_start":10948,"column_end":49,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":304,"line_start":304,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":49,"highlight_start":43,"text":"                if abs_improvement < self.config.function_tolerance"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":10954,"byte_start":10948,"column_end":49,"column_start":43,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":304,"line_start":304,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":43,"text":"                if abs_improvement < self.config.function_tolerance"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:305:47\n    |\n305 |                     || rel_improvement < self.config.function_tolerance\n    |                                               ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n305 |                     || rel_improvement < self._config.function_tolerance\n    |                                               +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":11026,"byte_start":11020,"column_end":53,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":305,"line_start":305,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":53,"highlight_start":47,"text":"                    || rel_improvement < self.config.function_tolerance"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":11026,"byte_start":11020,"column_end":53,"column_start":47,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":305,"line_start":305,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":47,"text":"                    || rel_improvement < self.config.function_tolerance"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&mut UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:318:40\n    |\n318 |         let success = iteration < self.config.max_nit;\n    |                                        ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n318 |         let success = iteration < self._config.max_nit;\n    |                                        +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":11395,"byte_start":11389,"column_end":46,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":318,"line_start":318,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":46,"highlight_start":40,"text":"        let success = iteration < self.config.max_nit;"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&mut UnifiedOptimizer<M>`","spans":[{"byte_end":11395,"byte_start":11389,"column_end":46,"column_start":40,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":318,"line_start":318,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":40,"text":"        let success = iteration < self.config.max_nit;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:375:17\n    |\n375 |         if self.config.use_gpu {\n    |                 ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n375 |         if self._config.use_gpu {\n    |                 +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":13196,"byte_start":13190,"column_end":23,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":375,"line_start":375,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":17,"text":"        if self.config.use_gpu {"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&UnifiedOptimizer<M>`","spans":[{"byte_end":13196,"byte_start":13190,"column_end":23,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":375,"line_start":375,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":17,"text":"        if self.config.use_gpu {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `update_algorithm_parameter` found for mutable reference `&mut UnifiedOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/unified_pipeline.rs:496:30\n    |\n496 |                         self.update_algorithm_parameter(\"step_size\", f_val)?;\n    |                         -----^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------\n    |                         |    |\n    |                         |    this is an associated function, not a method\n    |                         help: use associated function syntax instead: `UnifiedOptimizer::<M>::update_algorithm_parameter(\"step_size\", f_val)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:514:5\n    |\n514 |     fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `UnifiedOptimizer<M>`","rendered":null,"spans":[{"byte_end":17741,"byte_start":17658,"column_end":88,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":88,"highlight_start":5,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":17159,"byte_start":17108,"column_end":76,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":496,"line_start":496,"suggested_replacement":"UnifiedOptimizer::<M>::update_algorithm_parameter(\"step_size\", f_val)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":25,"text":"                        self.update_algorithm_parameter(\"step_size\", f_val)?;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `update_algorithm_parameter` found for mutable reference `&mut UnifiedOptimizer<M>` in the current scope","spans":[{"byte_end":17139,"byte_start":17113,"column_end":56,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":496,"line_start":496,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":30,"text":"                        self.update_algorithm_parameter(\"step_size\", f_val)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `update_algorithm_parameter` found for mutable reference `&mut UnifiedOptimizer<M>` in the current scope\n   --> scirs2-optimize/src/unified_pipeline.rs:502:30\n    |\n502 |                         self.update_algorithm_parameter(\"tolerance\", f_val)?;\n    |                         -----^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------\n    |                         |    |\n    |                         |    this is an associated function, not a method\n    |                         help: use associated function syntax instead: `UnifiedOptimizer::<M>::update_algorithm_parameter(\"tolerance\", f_val)`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\nnote: the candidate is defined in an impl for the type `UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:514:5\n    |\n514 |     fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"the candidate is defined in an impl for the type `UnifiedOptimizer<M>`","rendered":null,"spans":[{"byte_end":17741,"byte_start":17658,"column_end":88,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":88,"highlight_start":5,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"use associated function syntax instead","rendered":null,"spans":[{"byte_end":17424,"byte_start":17373,"column_end":76,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":502,"line_start":502,"suggested_replacement":"UnifiedOptimizer::<M>::update_algorithm_parameter(\"tolerance\", f_val)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":25,"text":"                        self.update_algorithm_parameter(\"tolerance\", f_val)?;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `update_algorithm_parameter` found for mutable reference `&mut UnifiedOptimizer<M>` in the current scope","spans":[{"byte_end":17404,"byte_start":17378,"column_end":56,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"this is an associated function, not a method","line_end":502,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":30,"text":"                        self.update_algorithm_parameter(\"tolerance\", f_val)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> scirs2-optimize/src/unified_pipeline.rs:514:35\n    |\n514 |     fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {\n    |                                   ^^^^^^^^^^^^^^  ---- expected due to this\n    |                                   |\n    |                                   types differ in mutability\n    |\n    = note:      expected reference `&str`\n            found mutable reference `&mut _`\nnote: to declare a mutable parameter use: `mut self_name`\n   --> scirs2-optimize/src/unified_pipeline.rs:514:35\n    |\n514 |     fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {\n    |                                   ^^^^^^^^^^^^^^\nhelp: to take parameter `self_name` by reference, move `&mut` to the type\n    |\n514 -     fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {\n514 +     fn update_algorithm_parameter(self_name: &mut &str, _value: f64) -> ScirsResult<()> {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"     expected reference `&str`\nfound mutable reference `&mut _`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"to declare a mutable parameter use: `mut self_name`","rendered":null,"spans":[{"byte_end":17702,"byte_start":17688,"column_end":49,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":35,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]}]},{"children":[],"code":null,"level":"help","message":"to take parameter `self_name` by reference, move `&mut` to the type","rendered":null,"spans":[{"byte_end":17693,"byte_start":17688,"column_end":40,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":35,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]},{"byte_end":17704,"byte_start":17704,"column_end":51,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":"&mut ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":51,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":17702,"byte_start":17688,"column_end":49,"column_start":35,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"types differ in mutability","line_end":514,"line_start":514,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":35,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]},{"byte_end":17708,"byte_start":17704,"column_end":55,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":false,"label":"expected due to this","line_end":514,"line_start":514,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":51,"text":"    fn update_algorithm_parameter(&mut self_name: &str, _value: f64) -> ScirsResult<()> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0609]: no field `config` on type `&UnifiedOptimizer<M>`\n   --> scirs2-optimize/src/unified_pipeline.rs:528:44\n    |\n528 |         if let Some(ref output_dir) = self.config.output_directory {\n    |                                            ^^^^^^ unknown field\n    |\nhelp: a field with a similar name exists\n    |\n528 |         if let Some(ref output_dir) = self._config.output_directory {\n    |                                            +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a field with a similar name exists","rendered":null,"spans":[{"byte_end":18198,"byte_start":18192,"column_end":50,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":null,"line_end":528,"line_start":528,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":50,"highlight_start":44,"text":"        if let Some(ref output_dir) = self.config.output_directory {"}]}]}],"code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","message":"no field `config` on type `&UnifiedOptimizer<M>`","spans":[{"byte_end":18198,"byte_start":18192,"column_end":50,"column_start":44,"expansion":null,"file_name":"scirs2-optimize/src/unified_pipeline.rs","is_primary":true,"label":"unknown field","line_end":528,"line_start":528,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":44,"text":"        if let Some(ref output_dir) = self.config.output_directory {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0382]: use of moved value: `iteration_result`\n   --> scirs2-optimize/src/advanced_coordinator.rs:310:46\n    |\n283 |             let iteration_result = match self.config.strategy {\n    |                 ---------------- move occurs because `iteration_result` has type `OptimizeResults<f64>`, which does not implement the `Copy` trait\n...\n304 |                 best_result = Some(iteration_result);\n    |                                    ---------------- value moved here\n...\n310 |             self.update_performance_tracking(iteration_result.fun)?;\n    |                                              ^^^^^^^^^^^^^^^^^^^^ value used here after move\n    |\nnote: these 3 reinitializations and 2 others might get skipped\n   --> scirs2-optimize/src/advanced_coordinator.rs:291:21\n    |\n291 |                     self.execute_meta_learning_quantum(&objective)?\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n294 |                     self.execute_adaptive_selection(&objective)?\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n295 |                 }\n296 |                 AdvancedStrategy::FullAdvanced => self.execute_full_advanced(&objective)?,\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: consider cloning the value if the performance cost is acceptable\n    |\n304 |                 best_result = Some(iteration_result.clone());\n    |                                                    ++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"these 3 reinitializations and 2 others might get skipped","rendered":null,"spans":[{"byte_end":10555,"byte_start":10508,"column_end":68,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":null,"line_end":291,"line_start":291,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":21,"text":"                    self.execute_meta_learning_quantum(&objective)?"}]},{"byte_end":10695,"byte_start":10651,"column_end":65,"column_start":21,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":null,"line_end":294,"line_start":294,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":21,"text":"                    self.execute_adaptive_selection(&objective)?"}]},{"byte_end":10803,"byte_start":10764,"column_end":90,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":null,"line_end":296,"line_start":296,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":51,"text":"                AdvancedStrategy::FullAdvanced => self.execute_full_advanced(&objective)?,"}]}]},{"children":[],"code":null,"level":"help","message":"consider cloning the value if the performance cost is acceptable","rendered":null,"spans":[{"byte_end":11178,"byte_start":11178,"column_end":52,"column_start":52,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":null,"line_end":304,"line_start":304,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":52,"text":"                best_result = Some(iteration_result);"}]}]}],"code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","message":"use of moved value: `iteration_result`","spans":[{"byte_end":11178,"byte_start":11162,"column_end":52,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":false,"label":"value moved here","line_end":304,"line_start":304,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":36,"text":"                best_result = Some(iteration_result);"}]},{"byte_end":11374,"byte_start":11354,"column_end":66,"column_start":46,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":"value used here after move","line_end":310,"line_start":310,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":46,"text":"            self.update_performance_tracking(iteration_result.fun)?;"}]},{"byte_end":10095,"byte_start":10079,"column_end":33,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":false,"label":"move occurs because `iteration_result` has type `OptimizeResults<f64>`, which does not implement the `Copy` trait","line_end":283,"line_start":283,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":17,"text":"            let iteration_result = match self.config.strategy {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0596]: cannot borrow data in a `&` reference as mutable\n   --> scirs2-optimize/src/advanced_coordinator.rs:363:13\n    |\n363 | /             neuro_opt\n364 | |                 .network()\n    | |__________________________^ cannot borrow as mutable\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","message":"cannot borrow data in a `&` reference as mutable","spans":[{"byte_end":13188,"byte_start":13152,"column_end":27,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/advanced_coordinator.rs","is_primary":true,"label":"cannot borrow as mutable","line_end":364,"line_start":363,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":13,"text":"            neuro_opt"},{"highlight_end":27,"highlight_start":1,"text":"                .network()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a shared reference\n   --> scirs2-optimize/src/constrained/interior_point.rs:632:9\n    |\n632 |         &self_g: &Array1<f64>,\n    |         ^------\n    |          |\n    |          data moved here\n    |          move occurs because `self_g` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the borrow\n    |\n632 -         &self_g: &Array1<f64>,\n632 +         self_g: &Array1<f64>,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the borrow","rendered":null,"spans":[{"byte_end":20783,"byte_start":20782,"column_end":10,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":true,"label":null,"line_end":632,"line_start":632,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":9,"text":"        &self_g: &Array1<f64>,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a shared reference","spans":[{"byte_end":20789,"byte_start":20783,"column_end":16,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":false,"label":"data moved here","line_end":632,"line_start":632,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":10,"text":"        &self_g: &Array1<f64>,"}]},{"byte_end":20789,"byte_start":20783,"column_end":16,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":false,"label":"move occurs because `self_g` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`, which does not implement the `Copy` trait","line_end":632,"line_start":632,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":10,"text":"        &self_g: &Array1<f64>,"}]},{"byte_end":20789,"byte_start":20782,"column_end":16,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/constrained/interior_point.rs","is_primary":true,"label":null,"line_end":632,"line_start":632,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":9,"text":"        &self_g: &Array1<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0382]: use of moved value: `final_best`\n   --> scirs2-optimize/src/distributed.rs:485:39\n    |\n482 |             let final_best = self.find_global_best(&local_population, &local_fitness)?;\n    |                 ---------- move occurs because `final_best` has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`, which does not implement the `Copy` trait\n483 |             if final_best.1 < global_best_fitness {\n484 |                 global_best = final_best;\n    |                               ---------- value moved here\n485 |                 global_best_fitness = final_best.1;\n    |                                       ^^^^^^^^^^^^ value used here after move\n    |\nhelp: consider cloning the value if the performance cost is acceptable\n    |\n484 |                 global_best = final_best.clone();\n    |                                         ++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider cloning the value if the performance cost is acceptable","rendered":null,"spans":[{"byte_end":15403,"byte_start":15403,"column_end":41,"column_start":41,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":null,"line_end":484,"line_start":484,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":41,"text":"                global_best = final_best;"}]}]}],"code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","message":"use of moved value: `final_best`","spans":[{"byte_end":15403,"byte_start":15393,"column_end":41,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":false,"label":"value moved here","line_end":484,"line_start":484,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":31,"text":"                global_best = final_best;"}]},{"byte_end":15455,"byte_start":15443,"column_end":51,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":true,"label":"value used here after move","line_end":485,"line_start":485,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":39,"text":"                global_best_fitness = final_best.1;"}]},{"byte_end":15249,"byte_start":15239,"column_end":27,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/distributed.rs","is_primary":false,"label":"move occurs because `final_best` has type `(ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>, f64)`, which does not implement the `Copy` trait","line_end":482,"line_start":482,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"            let final_best = self.find_global_best(&local_population, &local_fitness)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a mutable reference\n   --> scirs2-optimize/src/distributed_gpu.rs:443:9\n    |\n443 |         &mut self_population: &mut Array2<f64>,\n    |         ^^^^^---------------\n    |              |\n    |              data moved here\n    |              move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the mutable borrow\n    |\n443 -         &mut self_population: &mut Array2<f64>,\n443 +         self_population: &mut Array2<f64>,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the mutable borrow","rendered":null,"spans":[{"byte_end":15791,"byte_start":15786,"column_end":14,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":443,"line_start":443,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":14,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a mutable reference","spans":[{"byte_end":15806,"byte_start":15791,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"data moved here","line_end":443,"line_start":443,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":15806,"byte_start":15791,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait","line_end":443,"line_start":443,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":15806,"byte_start":15786,"column_end":29,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":443,"line_start":443,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a mutable reference\n   --> scirs2-optimize/src/distributed_gpu.rs:453:9\n    |\n453 |         &mut self_population: &mut Array2<f64>,\n    |         ^^^^^---------------\n    |              |\n    |              data moved here\n    |              move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the mutable borrow\n    |\n453 -         &mut self_population: &mut Array2<f64>,\n453 +         self_population: &mut Array2<f64>,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the mutable borrow","rendered":null,"spans":[{"byte_end":16108,"byte_start":16103,"column_end":14,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":453,"line_start":453,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":14,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a mutable reference","spans":[{"byte_end":16123,"byte_start":16108,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"data moved here","line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16123,"byte_start":16108,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait","line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16123,"byte_start":16103,"column_end":29,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":453,"line_start":453,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a mutable reference\n   --> scirs2-optimize/src/distributed_gpu.rs:463:9\n    |\n463 |         &mut self_population: &mut Array2<f64>,\n    |         ^^^^^---------------\n    |              |\n    |              data moved here\n    |              move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the mutable borrow\n    |\n463 -         &mut self_population: &mut Array2<f64>,\n463 +         self_population: &mut Array2<f64>,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the mutable borrow","rendered":null,"spans":[{"byte_end":16451,"byte_start":16446,"column_end":14,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":463,"line_start":463,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":14,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a mutable reference","spans":[{"byte_end":16466,"byte_start":16451,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"data moved here","line_end":463,"line_start":463,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16466,"byte_start":16451,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait","line_end":463,"line_start":463,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16466,"byte_start":16446,"column_end":29,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":463,"line_start":463,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a mutable reference\n   --> scirs2-optimize/src/distributed_gpu.rs:472:9\n    |\n472 |         &mut self_population: &mut Array2<f64>,\n    |         ^^^^^---------------\n    |              |\n    |              data moved here\n    |              move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the mutable borrow\n    |\n472 -         &mut self_population: &mut Array2<f64>,\n472 +         self_population: &mut Array2<f64>,\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the mutable borrow","rendered":null,"spans":[{"byte_end":16764,"byte_start":16759,"column_end":14,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":472,"line_start":472,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":14,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a mutable reference","spans":[{"byte_end":16779,"byte_start":16764,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"data moved here","line_end":472,"line_start":472,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16779,"byte_start":16764,"column_end":29,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":false,"label":"move occurs because `self_population` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 2]>>`, which does not implement the `Copy` trait","line_end":472,"line_start":472,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        &mut self_population: &mut Array2<f64>,"}]},{"byte_end":16779,"byte_start":16759,"column_end":29,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/distributed_gpu.rs","is_primary":true,"label":null,"line_end":472,"line_start":472,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":9,"text":"        &mut self_population: &mut Array2<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n    --> scirs2-optimize/src/gpu/acceleration.rs:1383:29\n     |\n1382 |         for swarm in &mut self.swarm_states {\n     |                      ----------------------\n     |                      |\n     |                      mutable borrow occurs here\n     |                      mutable borrow later used here\n1383 |             let diversity = self.compute_swarm_diversity(swarm)?;\n     |                             ^^^^ immutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot borrow `*self` as immutable because it is also borrowed as mutable","spans":[{"byte_end":51696,"byte_start":51692,"column_end":33,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":true,"label":"immutable borrow occurs here","line_end":1383,"line_start":1383,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":29,"text":"            let diversity = self.compute_swarm_diversity(swarm)?;"}]},{"byte_end":51661,"byte_start":51639,"column_end":44,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":false,"label":"mutable borrow occurs here","line_end":1382,"line_start":1382,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":22,"text":"        for swarm in &mut self.swarm_states {"}]},{"byte_end":51661,"byte_start":51639,"column_end":44,"column_start":22,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":51661,"byte_start":51639,"column_end":44,"column_start":22,"expansion":null,"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":false,"label":null,"line_end":1382,"line_start":1382,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":22,"text":"        for swarm in &mut self.swarm_states {"}]}},"file_name":"scirs2-optimize/src/gpu/acceleration.rs","is_primary":false,"label":"mutable borrow later used here","line_end":1382,"line_start":1382,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":22,"text":"        for swarm in &mut self.swarm_states {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable\n   --> scirs2-optimize/src/gpu/memory_management.rs:77:17\n    |\n69  |         let mut stats = self.allocation_stats.lock().unwrap();\n    |                         --------------------- immutable borrow occurs here\n...\n77  |                 self.garbage_collect()?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n...\n114 |     }\n    |     - immutable borrow might be used here, when `stats` is dropped and runs the `Drop` code for type `MutexGuard`\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot borrow `*self` as mutable because it is also borrowed as immutable","spans":[{"byte_end":2974,"byte_start":2952,"column_end":39,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":true,"label":"mutable borrow occurs here","line_end":77,"line_start":77,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":17,"text":"                self.garbage_collect()?;"}]},{"byte_end":2654,"byte_start":2633,"column_end":46,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":"immutable borrow occurs here","line_end":69,"line_start":69,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":25,"text":"        let mut stats = self.allocation_stats.lock().unwrap();"}]},{"byte_end":4234,"byte_start":4233,"column_end":6,"column_start":5,"expansion":null,"file_name":"scirs2-optimize/src/gpu/memory_management.rs","is_primary":false,"label":"immutable borrow might be used here, when `stats` is dropped and runs the `Drop` code for type `MutexGuard`","line_end":114,"line_start":114,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":6,"highlight_start":5,"text":"    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a shared reference\n   --> scirs2-optimize/src/jit_optimization.rs:508:24\n    |\n508 |     fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>\n    |                        ^--------\n    |                         |\n    |                         data moved here\n    |                         move occurs because `self_fun` has type `F`, which does not implement the `Copy` trait\n    |\nhelp: consider removing the borrow\n    |\n508 -     fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>\n508 +     fn is_separable<F>(self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the borrow","rendered":null,"spans":[{"byte_end":17394,"byte_start":17393,"column_end":25,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":508,"line_start":508,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":24,"text":"    fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a shared reference","spans":[{"byte_end":17402,"byte_start":17394,"column_end":33,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":false,"label":"data moved here","line_end":508,"line_start":508,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":25,"text":"    fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>"}]},{"byte_end":17402,"byte_start":17394,"column_end":33,"column_start":25,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":false,"label":"move occurs because `self_fun` has type `F`, which does not implement the `Copy` trait","line_end":508,"line_start":508,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":25,"text":"    fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>"}]},{"byte_end":17402,"byte_start":17393,"column_end":33,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/jit_optimization.rs","is_primary":true,"label":null,"line_end":508,"line_start":508,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":24,"text":"    fn is_separable<F>(&self_fun: &F, _vars: usize) -> Result<bool, OptimizeError>"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:531:36\n    |\n525 |         for architecture in &mut self.architecture_population {\n    |                             ---------------------------------\n    |                             |\n    |                             mutable borrow occurs here\n    |                             mutable borrow later used here\n...\n531 |                 if let Ok(score) = self.evaluate_architecture_on_problem(architecture, problem) {\n    |                                    ^^^^ immutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot borrow `*self` as immutable because it is also borrowed as mutable","spans":[{"byte_end":16280,"byte_start":16276,"column_end":40,"column_start":36,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":"immutable borrow occurs here","line_end":531,"line_start":531,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":36,"text":"                if let Ok(score) = self.evaluate_architecture_on_problem(architecture, problem) {"}]},{"byte_end":16057,"byte_start":16024,"column_end":62,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":false,"label":"mutable borrow occurs here","line_end":525,"line_start":525,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":29,"text":"        for architecture in &mut self.architecture_population {"}]},{"byte_end":16057,"byte_start":16024,"column_end":62,"column_start":29,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"scirs2-optimize/src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":16057,"byte_start":16024,"column_end":62,"column_start":29,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":false,"label":null,"line_end":525,"line_start":525,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":29,"text":"        for architecture in &mut self.architecture_population {"}]}},"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":false,"label":"mutable borrow later used here","line_end":525,"line_start":525,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":29,"text":"        for architecture in &mut self.architecture_population {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0596]: cannot borrow `new_architectures` as mutable, as it is not declared as mutable\n   --> scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs:708:45\n    |\n708 |         self.architecture_population.append(&mut new_architectures);\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n    |\nhelp: consider changing this to be mutable\n    |\n705 |         mut new_architectures: Vec<OptimizationArchitecture>,\n    |         +++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider changing this to be mutable","rendered":null,"spans":[{"byte_end":22825,"byte_start":22825,"column_end":9,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":null,"line_end":705,"line_start":705,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":9,"highlight_start":9,"text":"        new_architectures: Vec<OptimizationArchitecture>,"}]}]}],"code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","message":"cannot borrow `new_architectures` as mutable, as it is not declared as mutable","spans":[{"byte_end":23032,"byte_start":23010,"column_end":67,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_nas_system.rs","is_primary":true,"label":"cannot borrow as mutable","line_end":708,"line_start":708,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":45,"text":"        self.architecture_population.append(&mut new_architectures);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0004]: non-exhaustive patterns: `&_` not covered\n    --> scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs:1142:15\n     |\n1142 |         match problem.problem_class.as_str() {\n     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pattern `&_` not covered\n     |\n     = note: the matched value is of type `&str`\n     = note: `&str` cannot be matched exhaustively, so a wildcard `_` is necessary\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\n     |\n1148 ~             },\n1149 +             &_ => todo!()\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the matched value is of type `&str`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`&str` cannot be matched exhaustively, so a wildcard `_` is necessary","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown","rendered":null,"spans":[{"byte_end":37532,"byte_start":37532,"column_end":14,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":null,"line_end":1148,"line_start":1148,"suggested_replacement":",\n            &_ => todo!()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":14,"text":"            }"}]}]}],"code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","message":"non-exhaustive patterns: `&_` not covered","spans":[{"byte_end":37323,"byte_start":37293,"column_end":45,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/adaptive_transformer_enhancement.rs","is_primary":true,"label":"pattern `&_` not covered","line_end":1142,"line_start":1142,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":15,"text":"        match problem.problem_class.as_str() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0004]: non-exhaustive patterns: `&_` not covered\n   --> scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs:508:15\n    |\n508 |         match problem.problem_class.as_str() {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pattern `&_` not covered\n    |\n    = note: the matched value is of type `&str`\n    = note: `&str` cannot be matched exhaustively, so a wildcard `_` is necessary\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\n    |\n514 ~             },\n515 +             &_ => todo!()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the matched value is of type `&str`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`&str` cannot be matched exhaustively, so a wildcard `_` is necessary","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown","rendered":null,"spans":[{"byte_end":15167,"byte_start":15167,"column_end":14,"column_start":14,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":true,"label":null,"line_end":514,"line_start":514,"suggested_replacement":",\n            &_ => todo!()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":14,"text":"            }"}]}]}],"code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","message":"non-exhaustive patterns: `&_` not covered","spans":[{"byte_end":14958,"byte_start":14928,"column_end":45,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":true,"label":"pattern `&_` not covered","line_end":508,"line_start":508,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":15,"text":"        match problem.problem_class.as_str() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n   --> scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs:575:34\n    |\n571 |         let adapter = &mut self.fast_adapter.gradient_adapter;\n    |                       --------------------------------------- mutable borrow occurs here\n...\n575 |             let meta_gradients = self.compute_meta_gradients(example)?;\n    |                                  ^^^^ immutable borrow occurs here\n...\n579 |                 if i < adapter.gradient_accumulator.len() {\n    |                        ---------------------------- mutable borrow later used here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot borrow `*self` as immutable because it is also borrowed as mutable","spans":[{"byte_end":17015,"byte_start":17011,"column_end":38,"column_start":34,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":true,"label":"immutable borrow occurs here","line_end":575,"line_start":575,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":34,"text":"            let meta_gradients = self.compute_meta_gradients(example)?;"}]},{"byte_end":16882,"byte_start":16843,"column_end":62,"column_start":23,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":false,"label":"mutable borrow occurs here","line_end":571,"line_start":571,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":23,"text":"        let adapter = &mut self.fast_adapter.gradient_adapter;"}]},{"byte_end":17212,"byte_start":17184,"column_end":52,"column_start":24,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/few_shot_learning_enhancement.rs","is_primary":false,"label":"mutable borrow later used here","line_end":579,"line_start":579,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":24,"text":"                if i < adapter.gradient_accumulator.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0382]: borrow of moved value: `objective`\n    --> scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs:1336:57\n     |\n1315 |         objective: F,\n     |         --------- move occurs because `objective` has type `F`, which does not implement the `Copy` trait\n...\n1333 |             self.tune_hyperparameters(objective, initial_params, &default_problem, 20.0)?;\n     |                                       --------- value moved here\n...\n1336 |         self.create_optimizer_from_config(&best_config, &objective, initial_params, 1.0)\n     |                                                         ^^^^^^^^^^ value borrowed here after move\n     |\nhelp: consider borrowing `objective`\n     |\n1333 |             self.tune_hyperparameters(&objective, initial_params, &default_problem, 20.0)?;\n     |                                       +\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider borrowing `objective`","rendered":null,"spans":[{"byte_end":41186,"byte_start":41186,"column_end":39,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":true,"label":null,"line_end":1333,"line_start":1333,"suggested_replacement":"&","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":39,"text":"            self.tune_hyperparameters(objective, initial_params, &default_problem, 20.0)?;"}]}]}],"code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","message":"borrow of moved value: `objective`","spans":[{"byte_end":41195,"byte_start":41186,"column_end":48,"column_start":39,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":false,"label":"value moved here","line_end":1333,"line_start":1333,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":39,"text":"            self.tune_hyperparameters(objective, initial_params, &default_problem, 20.0)?;"}]},{"byte_end":41363,"byte_start":41353,"column_end":67,"column_start":57,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":true,"label":"value borrowed here after move","line_end":1336,"line_start":1336,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":57,"text":"        self.create_optimizer_from_config(&best_config, &objective, initial_params, 1.0)"}]},{"byte_end":40559,"byte_start":40550,"column_end":18,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/learned_hyperparameter_tuner.rs","is_primary":false,"label":"move occurs because `objective` has type `F`, which does not implement the `Copy` trait","line_end":1315,"line_start":1315,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":9,"text":"        objective: F,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0499]: cannot borrow `self.computation_cache` as mutable more than once at a time\n   --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:629:28\n    |\n626 |           let gradient_buffer = self\n    |  _______________________________-\n627 | |             .computation_cache\n    | |______________________________- first mutable borrow occurs here\n628 |               .get_gradient_buffer(gradient_sample_size);\n629 |           let param_buffer = self.computation_cache.get_param_buffer(params.len());\n    |                              ^^^^^^^^^^^^^^^^^^^^^^ second mutable borrow occurs here\n...\n648 |           let gradient_norm = (gradient_buffer\n    |                                --------------- first borrow later used here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","message":"cannot borrow `self.computation_cache` as mutable more than once at a time","spans":[{"byte_end":18762,"byte_start":18727,"column_end":31,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"first mutable borrow occurs here","line_end":627,"line_start":626,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":31,"text":"        let gradient_buffer = self"},{"highlight_end":31,"highlight_start":1,"text":"            .computation_cache"}]},{"byte_end":18868,"byte_start":18846,"column_end":50,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"second mutable borrow occurs here","line_end":629,"line_start":629,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":28,"text":"        let param_buffer = self.computation_cache.get_param_buffer(params.len());"}]},{"byte_end":19507,"byte_start":19492,"column_end":45,"column_start":30,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"first borrow later used here","line_end":648,"line_start":648,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":30,"text":"        let gradient_norm = (gradient_buffer"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of a shared reference\n    --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:1724:9\n     |\n1724 |         &self_task: &TrainingTask,\n     |         ^---------\n     |          |\n     |          data moved here\n     |          move occurs because `self_task` has type `TrainingTask`, which does not implement the `Copy` trait\n     |\nhelp: consider removing the borrow\n     |\n1724 -         &self_task: &TrainingTask,\n1724 +         self_task: &TrainingTask,\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider removing the borrow","rendered":null,"spans":[{"byte_end":54540,"byte_start":54539,"column_end":10,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":1724,"line_start":1724,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":9,"text":"        &self_task: &TrainingTask,"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of a shared reference","spans":[{"byte_end":54549,"byte_start":54540,"column_end":19,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"data moved here","line_end":1724,"line_start":1724,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":10,"text":"        &self_task: &TrainingTask,"}]},{"byte_end":54549,"byte_start":54540,"column_end":19,"column_start":10,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"move occurs because `self_task` has type `TrainingTask`, which does not implement the `Copy` trait","line_end":1724,"line_start":1724,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":10,"text":"        &self_task: &TrainingTask,"}]},{"byte_end":54549,"byte_start":54539,"column_end":19,"column_start":9,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":null,"line_end":1724,"line_start":1724,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":9,"text":"        &self_task: &TrainingTask,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0499]: cannot borrow `self.computation_cache` as mutable more than once at a time\n    --> scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs:1773:28\n     |\n1772 |         let gradient_buffer = self.computation_cache.get_gradient_buffer(params.len());\n     |                               ---------------------- first mutable borrow occurs here\n1773 |         let param_buffer = self.computation_cache.get_param_buffer(params.len());\n     |                            ^^^^^^^^^^^^^^^^^^^^^^ second mutable borrow occurs here\n...\n1782 |         for i in 0..params.len().min(gradient_buffer.len()) {\n     |                                      --------------- first borrow later used here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","message":"cannot borrow `self.computation_cache` as mutable more than once at a time","spans":[{"byte_end":56060,"byte_start":56038,"column_end":53,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"first mutable borrow occurs here","line_end":1772,"line_start":1772,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":31,"text":"        let gradient_buffer = self.computation_cache.get_gradient_buffer(params.len());"}]},{"byte_end":56145,"byte_start":56123,"column_end":50,"column_start":28,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":true,"label":"second mutable borrow occurs here","line_end":1773,"line_start":1773,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":28,"text":"        let param_buffer = self.computation_cache.get_param_buffer(params.len());"}]},{"byte_end":56425,"byte_start":56410,"column_end":53,"column_start":38,"expansion":null,"file_name":"scirs2-optimize/src/learned_optimizers/neural_adaptive_optimizer.rs","is_primary":false,"label":"first borrow later used here","line_end":1782,"line_start":1782,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":38,"text":"        for i in 0..params.len().min(gradient_buffer.len()) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0507]: cannot move out of `layer.firing_rates` which is behind a shared reference\n   --> scirs2-optimize/src/neuromorphic/stdp_learning.rs:764:33\n    |\n764 |             let rate_variance = layer.firing_rates.variance();\n    |                                 ^^^^^^^^^^^^^^^^^^ ---------- `layer.firing_rates` moved due to this method call\n    |                                 |\n    |                                 move occurs because `layer.firing_rates` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`, which does not implement the `Copy` trait\n    |\nnote: `statrs::statistics::Statistics::variance` takes ownership of the receiver `self`, which moves `layer.firing_rates`\n   --> /Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.18.0/src/statistics/statistics.rs:241:17\n    |\n241 |     fn variance(self) -> T;\n    |                 ^^^^\nhelp: you can `clone` the value and consume it, but this might not be your desired behavior\n    |\n764 |             let rate_variance = <ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> as Clone>::clone(&layer.firing_rates).variance();\n    |                                 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++                  +\nhelp: consider cloning the value if the performance cost is acceptable\n    |\n764 |             let rate_variance = layer.firing_rates.clone().variance();\n    |                                                   ++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`statrs::statistics::Statistics::variance` takes ownership of the receiver `self`, which moves `layer.firing_rates`","rendered":null,"spans":[{"byte_end":6254,"byte_start":6250,"column_end":21,"column_start":17,"expansion":null,"file_name":"/Users/kitasan/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.18.0/src/statistics/statistics.rs","is_primary":true,"label":null,"line_end":241,"line_start":241,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"    fn variance(self) -> T;"}]}]},{"children":[],"code":null,"level":"help","message":"you can `clone` the value and consume it, but this might not be your desired behavior","rendered":null,"spans":[{"byte_end":25096,"byte_start":25096,"column_end":33,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":764,"line_start":764,"suggested_replacement":"<ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>> as Clone>::clone(&","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":33,"highlight_start":33,"text":"            let rate_variance = layer.firing_rates.variance();"}]},{"byte_end":25114,"byte_start":25114,"column_end":51,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":764,"line_start":764,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":51,"highlight_start":51,"text":"            let rate_variance = layer.firing_rates.variance();"}]}]},{"children":[],"code":null,"level":"help","message":"consider cloning the value if the performance cost is acceptable","rendered":null,"spans":[{"byte_end":25114,"byte_start":25114,"column_end":51,"column_start":51,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":null,"line_end":764,"line_start":764,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":51,"text":"            let rate_variance = layer.firing_rates.variance();"}]}]}],"code":{"code":"E0507","explanation":"A borrowed value was moved out.\n\nErroneous code example:\n\n```compile_fail,E0507\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n}\n```\n\nHere, the `nothing_is_true` method takes the ownership of `self`. However,\n`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\nwhich is a borrow of the content owned by the `RefCell`. To fix this error,\nyou have three choices:\n\n* Try to avoid moving the variable.\n* Somehow reclaim the ownership.\n* Implement the `Copy` trait on the type.\n\nThis can also happen when using a type implementing `Fn` or `FnMut`, as neither\nallows moving out of them (they usually represent closures which can be called\nmore than once). Much of the text following applies equally well to non-`FnOnce`\nclosure bodies.\n\nExamples:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(&self) {} // First case, we don't take ownership\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n    let x = x.into_inner(); // we get back ownership\n\n    x.nothing_is_true(); // ok!\n}\n```\n\nOr:\n\n```\nuse std::cell::RefCell;\n\n#[derive(Clone, Copy)] // we implement the Copy trait\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nfn main() {\n    let x = RefCell::new(TheDarkKnight);\n\n    x.borrow().nothing_is_true(); // ok!\n}\n```\n\nMoving a member out of a mutably borrowed struct will also cause E0507 error:\n\n```compile_fail,E0507\nstruct TheDarkKnight;\n\nimpl TheDarkKnight {\n    fn nothing_is_true(self) {}\n}\n\nstruct Batcave {\n    knight: TheDarkKnight\n}\n\nfn main() {\n    let mut cave = Batcave {\n        knight: TheDarkKnight\n    };\n    let borrowed = &mut cave;\n\n    borrowed.knight.nothing_is_true(); // E0507\n}\n```\n\nIt is fine only if you put something back. `mem::replace` can be used for that:\n\n```\n# struct TheDarkKnight;\n# impl TheDarkKnight { fn nothing_is_true(self) {} }\n# struct Batcave { knight: TheDarkKnight }\nuse std::mem;\n\nlet mut cave = Batcave {\n    knight: TheDarkKnight\n};\nlet borrowed = &mut cave;\n\nmem::replace(&mut borrowed.knight, TheDarkKnight).nothing_is_true(); // ok!\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot move out of `layer.firing_rates` which is behind a shared reference","spans":[{"byte_end":25125,"byte_start":25115,"column_end":62,"column_start":52,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":false,"label":"`layer.firing_rates` moved due to this method call","line_end":764,"line_start":764,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":52,"text":"            let rate_variance = layer.firing_rates.variance();"}]},{"byte_end":25114,"byte_start":25096,"column_end":51,"column_start":33,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/stdp_learning.rs","is_primary":true,"label":"move occurs because `layer.firing_rates` has type `ArrayBase<OwnedRepr<f64>, Dim<[usize; 1]>>`, which does not implement the `Copy` trait","line_end":764,"line_start":764,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":33,"text":"            let rate_variance = layer.firing_rates.variance();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0502]: cannot borrow `self.network` as mutable because it is also borrowed as immutable\n   --> scirs2-optimize/src/neuromorphic/mod.rs:455:13\n    |\n454 |             let params_view = self.network.parameters.view();\n    |                               ----------------------- immutable borrow occurs here\n455 |             self.network.encode_parameters(&params_view);\n    |             ^^^^^^^^^^^^^-----------------^^^^^^^^^^^^^^\n    |             |            |\n    |             |            immutable borrow later used by call\n    |             mutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","message":"cannot borrow `self.network` as mutable because it is also borrowed as immutable","spans":[{"byte_end":15362,"byte_start":15318,"column_end":57,"column_start":13,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":true,"label":"mutable borrow occurs here","line_end":455,"line_start":455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":13,"text":"            self.network.encode_parameters(&params_view);"}]},{"byte_end":15297,"byte_start":15274,"column_end":54,"column_start":31,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":false,"label":"immutable borrow occurs here","line_end":454,"line_start":454,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":31,"text":"            let params_view = self.network.parameters.view();"}]},{"byte_end":15348,"byte_start":15331,"column_end":43,"column_start":26,"expansion":null,"file_name":"scirs2-optimize/src/neuromorphic/mod.rs","is_primary":false,"label":"immutable borrow later used by call","line_end":455,"line_start":455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":26,"text":"            self.network.encode_parameters(&params_view);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0499]: cannot borrow `*self` as mutable more than once at a time\n   --> scirs2-optimize/src/streaming/rolling_window.rs:115:17\n    |\n109 |         match &mut self.window_optimizer {\n    |               -------------------------- first mutable borrow occurs here\n...\n115 |                 self.optimize_gradient_descent(gradient_accumulator, lr)\n    |                 ^^^^                           -------------------- first borrow later used here\n    |                 |\n    |                 second mutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","message":"cannot borrow `*self` as mutable more than once at a time","spans":[{"byte_end":3709,"byte_start":3683,"column_end":41,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first mutable borrow occurs here","line_end":109,"line_start":109,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"        match &mut self.window_optimizer {"}]},{"byte_end":3912,"byte_start":3908,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":true,"label":"second mutable borrow occurs here","line_end":115,"line_start":115,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                self.optimize_gradient_descent(gradient_accumulator, lr)"}]},{"byte_end":3959,"byte_start":3939,"column_end":68,"column_start":48,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first borrow later used here","line_end":115,"line_start":115,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":48,"text":"                self.optimize_gradient_descent(gradient_accumulator, lr)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0499]: cannot borrow `*self` as mutable more than once at a time\n   --> scirs2-optimize/src/streaming/rolling_window.rs:123:17\n    |\n109 |         match &mut self.window_optimizer {\n    |               -------------------------- first mutable borrow occurs here\n...\n123 |                 self.optimize_least_squares(xtx, xty, reg)\n    |                 ^^^^                        --- first borrow later used here\n    |                 |\n    |                 second mutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","message":"cannot borrow `*self` as mutable more than once at a time","spans":[{"byte_end":3709,"byte_start":3683,"column_end":41,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first mutable borrow occurs here","line_end":109,"line_start":109,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"        match &mut self.window_optimizer {"}]},{"byte_end":4183,"byte_start":4179,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":true,"label":"second mutable borrow occurs here","line_end":123,"line_start":123,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                self.optimize_least_squares(xtx, xty, reg)"}]},{"byte_end":4210,"byte_start":4207,"column_end":48,"column_start":45,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first borrow later used here","line_end":123,"line_start":123,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":45,"text":"                self.optimize_least_squares(xtx, xty, reg)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0499]: cannot borrow `*self` as mutable more than once at a time\n   --> scirs2-optimize/src/streaming/rolling_window.rs:133:17\n    |\n109 |         match &mut self.window_optimizer {\n    |               -------------------------- first mutable borrow occurs here\n...\n133 |                 self.optimize_weighted_least_squares(weighted_xtx, weighted_xty, reg, decay)\n    |                 ^^^^                                 ------------ first borrow later used here\n    |                 |\n    |                 second mutable borrow occurs here\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","message":"cannot borrow `*self` as mutable more than once at a time","spans":[{"byte_end":3709,"byte_start":3683,"column_end":41,"column_start":15,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first mutable borrow occurs here","line_end":109,"line_start":109,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"        match &mut self.window_optimizer {"}]},{"byte_end":4539,"byte_start":4535,"column_end":21,"column_start":17,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":true,"label":"second mutable borrow occurs here","line_end":133,"line_start":133,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"                self.optimize_weighted_least_squares(weighted_xtx, weighted_xty, reg, decay)"}]},{"byte_end":4584,"byte_start":4572,"column_end":66,"column_start":54,"expansion":null,"file_name":"scirs2-optimize/src/streaming/rolling_window.rs","is_primary":false,"label":"first borrow later used here","line_end":133,"line_start":133,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":54,"text":"                self.optimize_weighted_least_squares(weighted_xtx, weighted_xty, reg, decay)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0004, E0023, E0061, E0063, E0185, E0186, E0271, E0277, E0282...\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0004, E0023, E0061, E0063, E0185, E0186, E0271, E0277, E0282...","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///Users/kitasan/work/scirs/scirs2-optimize#0.1.0-beta.1","manifest_path":"/Users/kitasan/work/scirs/scirs2-optimize/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scirs2_optimize","src_path":"/Users/kitasan/work/scirs/scirs2-optimize/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0004`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0004`.","spans":[]}}
{"reason":"build-finished","success":false}
