name: SciRS2 CI

on:
  push:
    branches: [ "main", "master", "feature/*" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: ${{ github.token }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2 

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Install system libs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential libopenblas-dev \
              pkg-config libfreetype6-dev libfontconfig1-dev

      - name: Run tests
        run: |
          cargo nextest run --workspace \
                            --test-threads=1 --no-fail-fast
                            
      - name: Install Python dependencies for performance testing
        run: |
          python -m pip install --upgrade pip
          pip install psutil requests numpy matplotlib

      - name: Run performance regression tests
        run: |
          cd scirs2-optim
          python scripts/ci_cd_performance_integration.py \
            --project-root . \
            --baseline-file performance_baseline.json \
            --output-format json \
            --output-file performance_results.json \
            --enable-regression-detection \
            --confidence-threshold 0.95 \
            --degradation-threshold 0.05

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results-${{ github.run_id }}
          path: scirs2-optim/performance_results.json
          retention-days: 30

      - name: Comment PR with performance results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'scirs2-optim/performance_results.json';
            
            if (fs.existsSync(path)) {
              const results = JSON.parse(fs.readFileSync(path, 'utf8'));
              const comment = `## üöÄ Performance Test Results
              
              **Execution Time**: ${results.metrics?.execution_time?.toFixed(3)}s
              **Memory Usage**: ${results.metrics?.memory_usage_mb?.toFixed(2)}MB
              **CPU Utilization**: ${results.metrics?.cpu_utilization?.toFixed(1)}%
              
              ${results.regression_detected ? '‚ö†Ô∏è **Performance regression detected!**' : '‚úÖ No performance regression detected'}
              
              <details>
              <summary>Detailed Results</summary>
              
              \`\`\`json
              ${JSON.stringify(results, null, 2)}
              \`\`\`
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }